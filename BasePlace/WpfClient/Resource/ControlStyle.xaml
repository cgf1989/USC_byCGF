<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfClient">

    <ResourceDictionary.MergedDictionaries>
        <!-- Resource Dictionary containing Buttons used for the Mac Window titlebar buttons-->
        <ResourceDictionary Source="MacStyledTitleBarButtons.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Border defining the frame of the Window -->
    <Style x:Key="MacwindowBorder" TargetType="Border">
        <Setter Property="CornerRadius" Value="10, 10, 0, 0" />
        <Setter Property="Background" Value="#ababab" />
        <Setter Property="BorderBrush" Value="DimGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>
    
    <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
        <Border  Name="MacWindowFrame" Style="{StaticResource MacwindowBorder}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Border Padding="15" CornerRadius="10,10,0,0" x:Name="top">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Green"/>
                            <GradientStop Color="Black" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <TextBlock Foreground="White" Text="{TemplateBinding Title}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" FontWeight="Normal" />
                <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft">
                    <Button x:Name="CloseBtn" Style="{StaticResource CloseRadialButton}"
                                HorizontalAlignment="Left" VerticalAlignment="Center" IsTabStop="False"
                            Margin="10,0,0,0" />

                    <Button x:Name="MaxBtn" Style="{StaticResource MaximizeRadialButton}" 
                                HorizontalAlignment="Left" VerticalAlignment="Center"  IsTabStop="False"
                            Margin="7,0,0,0" />

                    <Button x:Name="MinBtn" Style="{StaticResource MinimizeRadialButton}" 
                                HorizontalAlignment="Left" VerticalAlignment="Center"  IsTabStop="False"
                            Margin="7,0,0,0" />
                    <Button x:Name="SkinBtn" Style="{StaticResource SkinRadialButton}" 
                                HorizontalAlignment="Left" VerticalAlignment="Center"  IsTabStop="False"
                            Margin="7,0,0,0"  Visibility="Collapsed"/>
                </StackPanel>
                <!--<AdornerDecorator>
                    <ContentPresenter/>
                </AdornerDecorator>
                <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>-->
                <Border Grid.Row="1">
                    <Border.Background>
                        <ImageBrush x:Name="MyBgImg" TileMode="Tile" Viewbox="0, 0, 100, 100" ViewboxUnits="Absolute" Viewport="0, 0, 100, 100" ViewportUnits="Absolute" ImageSource="../Images/Skin.png" Opacity=".25"/>
                    </Border.Background>
                    <Grid>
                        <Border>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity=".5">
                                    <GradientStop Color="#ffffff" Offset=".1"/>
                                    <GradientStop Color="#ffffff" Offset=".9"/>
                                    <GradientStop Color="#000000" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Grid>
                </Border>
            </Grid>
        </Border>
        <!--<ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>
    <ControlTemplate x:Key="WindowTemplateKey1" TargetType="{x:Type Window}">
        <Border  Name="MacWindowFrame" Style="{StaticResource MacwindowBorder}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Border Padding="15" CornerRadius="10,10,0,0" x:Name="top">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Green"/>
                            <GradientStop Color="Black" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <TextBlock Foreground="White" Text="{TemplateBinding Title}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" FontWeight="Normal" />
                <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft">
                    <Button x:Name="CloseBtn" Style="{StaticResource CloseRadialButton}"
                                HorizontalAlignment="Left" VerticalAlignment="Center" IsTabStop="False"
                            Margin="10,0,0,0" />

                    <Button x:Name="MaxBtn" Style="{StaticResource MaximizeRadialButton}" 
                                HorizontalAlignment="Left" VerticalAlignment="Center"  IsTabStop="False"
                            Margin="7,0,0,0" Visibility="Collapsed"/>

                    <Button x:Name="MinBtn" Style="{StaticResource MinimizeRadialButton}" 
                                HorizontalAlignment="Left" VerticalAlignment="Center"  IsTabStop="False"
                            Margin="7,0,0,0" />
                    <Button x:Name="SkinBtn" Style="{StaticResource SkinRadialButton}" 
                                HorizontalAlignment="Left" VerticalAlignment="Center"  IsTabStop="False"
                            Margin="7,0,0,0"  Visibility="Collapsed"/>
                </StackPanel>
                <Border Grid.Row="1">
                    <Border.Background>
                        <ImageBrush x:Name="MyBgImg" TileMode="Tile" Viewbox="0, 0, 100, 100" ViewboxUnits="Absolute" Viewport="0, 0, 100, 100" ViewportUnits="Absolute" ImageSource="../Images/Skin.png" Opacity=".25"/>
                    </Border.Background>
                    <Grid>
                        <Border>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity=".5">
                                    <GradientStop Color="#ffffff" Offset=".1"/>
                                    <GradientStop Color="#ffffff" Offset=".9"/>
                                    <GradientStop Color="#000000" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Grid>
                </Border>
            </Grid>
        </Border> 
    </ControlTemplate>
    
    
    <Style x:Key="WindowStyle1" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Template" Value="{StaticResource WindowTemplateKey}" />
        <!-- <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10"  Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
        -->
    </Style>
    
    <Style x:Key="WindowStyle2" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Template" Value="{StaticResource WindowTemplateKey1}" />
    </Style>

    <ControlTemplate x:Key="CornerButton" TargetType="{x:Type Button}">
        <Border BorderBrush="Black" BorderThickness="1" CornerRadius="10">
            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
    </ControlTemplate>
    
    <!--统一按钮用的-->
    <ControlTemplate x:Key="ButtonControlTemplate1" TargetType="{x:Type Button}">
        <Grid  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
            <Border CornerRadius="5" Background="#09a3dc">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
        </Grid>
    </ControlTemplate>
    
    <!--右键菜单用的-->
    <ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
            <Rectangle x:Name="InnerBorder" Margin="1" RadiusY="2" RadiusX="2"/>
            <Grid Background="White">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <Grid Background="#ebebeb">
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                </Grid>                
                <Border x:Name="GlyphPanel" BorderBrush="#FFCDD3E6" BorderThickness="1" Background="#FFE6EFF4" CornerRadius="3" Height="22" Margin="1" Visibility="Hidden" Width="22">
                    <Path x:Name="Glyph" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="#FF0C12A1" FlowDirection="LeftToRight" Height="11" Width="9"/>
                </Border>
                <Grid  Grid.Column="2" Background="White">
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
                
                <TextBlock Background="White" Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Fill" TargetName="Bg">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#34C5EBFF" Offset="0"/>
                            <GradientStop Color="#3481D8FF" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Stroke" TargetName="Bg" Value="#8071CBF1"/>
                <Setter Property="Stroke" TargetName="InnerBorder" Value="#40FFFFFF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FF9A9A9A"/>
                <Setter Property="Background" TargetName="GlyphPanel" Value="#FFEEE9E9"/>
                <Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#FFDBD6D6"/>
                <Setter Property="Fill" TargetName="Glyph" Value="#FF848589"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    
    <Style x:Key="ListViewItemStyle_ContractUser" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <TextBlock Grid.Column="1" Margin="10,0,0,0" Text="{TemplateBinding Name}"/>
                            <TextBlock Grid.Column="2" Margin="10,0,0,0" Text="{TemplateBinding ToolTip}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






</ResourceDictionary>