<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BCP.Domain.Fakes</name>
    </assembly>
    <members>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimAdministrativecode">
            <summary>BCP.Domain.Edmx.Administrativecode 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.#ctor(BCP.Domain.Edmx.Administrativecode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.Administrativecode1Get">
            <summary>设置 Administrativecode.get_Administrativecode1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.Administrativecode1SetAdministrativecode">
            <summary>设置 Administrativecode.set_Administrativecode1(Administrativecode value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AdministrativecodesGet">
            <summary>设置 Administrativecode.get_Administrativecodes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AdministrativecodesSetICollectionOfAdministrativecode">
            <summary>设置 Administrativecode.set_Administrativecodes(ICollection`1&lt;Administrativecode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.Constructor">
            <summary>设置 Administrativecode.Administrativecode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.DivisionCodeGet">
            <summary>设置 Administrativecode.get_DivisionCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.DivisionCodeSetString">
            <summary>设置 Administrativecode.set_DivisionCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.EventTimeGet">
            <summary>设置 Administrativecode.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.EventTimeSetInt64">
            <summary>设置 Administrativecode.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.GeometryGet">
            <summary>设置 Administrativecode.get_Geometry() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.GeometrySetDbGeography">
            <summary>设置 Administrativecode.set_Geometry(DbGeography value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.IDGet">
            <summary>设置 Administrativecode.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.IDSetInt32">
            <summary>设置 Administrativecode.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.OrganizBasicsGet">
            <summary>设置 Administrativecode.get_OrganizBasics() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 Administrativecode.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.ParentCodeGet">
            <summary>设置 Administrativecode.get_ParentCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.ParentCodeSetString">
            <summary>设置 Administrativecode.set_ParentCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.ParentGet">
            <summary>设置 Administrativecode.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.ParentSetNullableOfInt32">
            <summary>设置 Administrativecode.set_Parent(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.RegionNameGet">
            <summary>设置 Administrativecode.get_RegionName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.RegionNameSetString">
            <summary>设置 Administrativecode.set_RegionName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.VesionGet">
            <summary>设置 Administrativecode.get_Vesion() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.VesionSetString">
            <summary>设置 Administrativecode.set_Vesion(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.Administrativecode1Get">
            <summary>设置 Administrativecode.get_Administrativecode1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.Administrativecode1SetAdministrativecode">
            <summary>设置 Administrativecode.set_Administrativecode1(Administrativecode value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.AdministrativecodesGet">
            <summary>设置 Administrativecode.get_Administrativecodes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.AdministrativecodesSetICollectionOfAdministrativecode">
            <summary>设置 Administrativecode.set_Administrativecodes(ICollection`1&lt;Administrativecode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.DivisionCodeGet">
            <summary>设置 Administrativecode.get_DivisionCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.DivisionCodeSetString">
            <summary>设置 Administrativecode.set_DivisionCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.EventTimeGet">
            <summary>设置 Administrativecode.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.EventTimeSetInt64">
            <summary>设置 Administrativecode.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.GeometryGet">
            <summary>设置 Administrativecode.get_Geometry() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.GeometrySetDbGeography">
            <summary>设置 Administrativecode.set_Geometry(DbGeography value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.IDGet">
            <summary>设置 Administrativecode.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.IDSetInt32">
            <summary>设置 Administrativecode.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.OrganizBasicsGet">
            <summary>设置 Administrativecode.get_OrganizBasics() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 Administrativecode.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.ParentCodeGet">
            <summary>设置 Administrativecode.get_ParentCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.ParentCodeSetString">
            <summary>设置 Administrativecode.set_ParentCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.ParentGet">
            <summary>设置 Administrativecode.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.ParentSetNullableOfInt32">
            <summary>设置 Administrativecode.set_Parent(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.RegionNameGet">
            <summary>设置 Administrativecode.get_RegionName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.RegionNameSetString">
            <summary>设置 Administrativecode.set_RegionName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.VesionGet">
            <summary>设置 Administrativecode.get_Vesion() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAdministrativecode.AllInstances.VesionSetString">
            <summary>设置 Administrativecode.set_Vesion(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimAssetBaseType">
            <summary>BCP.Domain.Edmx.AssetBaseType 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.#ctor(BCP.Domain.Edmx.AssetBaseType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AssetType1Get">
            <summary>设置 AssetBaseType.get_AssetType1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AssetType1SetAssetBaseType">
            <summary>设置 AssetBaseType.set_AssetType1(AssetBaseType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AssetTypeIdGet">
            <summary>设置 AssetBaseType.get_AssetTypeId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AssetTypeIdSetNullableOfInt32">
            <summary>设置 AssetBaseType.set_AssetTypeId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AssetTypesGet">
            <summary>设置 AssetBaseType.get_AssetTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AssetTypesSetICollectionOfAssetBaseType">
            <summary>设置 AssetBaseType.set_AssetTypes(ICollection`1&lt;AssetBaseType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.Constructor">
            <summary>设置 AssetBaseType.AssetBaseType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.EventTimeGet">
            <summary>设置 AssetBaseType.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.EventTimeSetInt64">
            <summary>设置 AssetBaseType.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.IdGet">
            <summary>设置 AssetBaseType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.IdSetInt32">
            <summary>设置 AssetBaseType.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.NoteGet">
            <summary>设置 AssetBaseType.get_Note() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.NoteSetString">
            <summary>设置 AssetBaseType.set_Note(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.OrganizationAssetTypesGet">
            <summary>设置 AssetBaseType.get_OrganizationAssetTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.OrganizationAssetTypesSetICollectionOfOrganizationAssetType">
            <summary>设置 AssetBaseType.set_OrganizationAssetTypes(ICollection`1&lt;OrganizationAssetType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.OrganizationIDGet">
            <summary>设置 AssetBaseType.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.OrganizationIDSetInt32">
            <summary>设置 AssetBaseType.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.TypeNameGet">
            <summary>设置 AssetBaseType.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.TypeNameSetString">
            <summary>设置 AssetBaseType.set_TypeName(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.AssetType1Get">
            <summary>设置 AssetBaseType.get_AssetType1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.AssetType1SetAssetBaseType">
            <summary>设置 AssetBaseType.set_AssetType1(AssetBaseType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.AssetTypeIdGet">
            <summary>设置 AssetBaseType.get_AssetTypeId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.AssetTypeIdSetNullableOfInt32">
            <summary>设置 AssetBaseType.set_AssetTypeId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.AssetTypesGet">
            <summary>设置 AssetBaseType.get_AssetTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.AssetTypesSetICollectionOfAssetBaseType">
            <summary>设置 AssetBaseType.set_AssetTypes(ICollection`1&lt;AssetBaseType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.EventTimeGet">
            <summary>设置 AssetBaseType.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.EventTimeSetInt64">
            <summary>设置 AssetBaseType.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.IdGet">
            <summary>设置 AssetBaseType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.IdSetInt32">
            <summary>设置 AssetBaseType.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.NoteGet">
            <summary>设置 AssetBaseType.get_Note() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.NoteSetString">
            <summary>设置 AssetBaseType.set_Note(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.OrganizationAssetTypesGet">
            <summary>设置 AssetBaseType.get_OrganizationAssetTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.OrganizationAssetTypesSetICollectionOfOrganizationAssetType">
            <summary>设置 AssetBaseType.set_OrganizationAssetTypes(ICollection`1&lt;OrganizationAssetType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.OrganizationIDGet">
            <summary>设置 AssetBaseType.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.OrganizationIDSetInt32">
            <summary>设置 AssetBaseType.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.TypeNameGet">
            <summary>设置 AssetBaseType.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetBaseType.AllInstances.TypeNameSetString">
            <summary>设置 AssetBaseType.set_TypeName(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance">
            <summary>BCP.Domain.Edmx.AssetMaintenance 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.#ctor(BCP.Domain.Edmx.AssetMaintenance)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.Constructor">
            <summary>设置 AssetMaintenance.AssetMaintenance() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.DescriptionGet">
            <summary>设置 AssetMaintenance.get_Description() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.DescriptionSetString">
            <summary>设置 AssetMaintenance.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.EventTimeGet">
            <summary>设置 AssetMaintenance.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.EventTimeSetInt64">
            <summary>设置 AssetMaintenance.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.ExperienceGet">
            <summary>设置 AssetMaintenance.get_Experience() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.ExperienceSetString">
            <summary>设置 AssetMaintenance.set_Experience(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.IdGet">
            <summary>设置 AssetMaintenance.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.IdSetInt32">
            <summary>设置 AssetMaintenance.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.MaintenancerGet">
            <summary>设置 AssetMaintenance.get_Maintenancer() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.MaintenancerSetInt32">
            <summary>设置 AssetMaintenance.set_Maintenancer(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.physicalAssetGet">
            <summary>设置 AssetMaintenance.get_physicalAsset() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.physicalAssetIdGet">
            <summary>设置 AssetMaintenance.get_physicalAssetId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.physicalAssetIdSetInt32">
            <summary>设置 AssetMaintenance.set_physicalAssetId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.physicalAssetSetphysicalAsset">
            <summary>设置 AssetMaintenance.set_physicalAsset(physicalAsset value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.AllInstances.DescriptionGet">
            <summary>设置 AssetMaintenance.get_Description() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.AllInstances.DescriptionSetString">
            <summary>设置 AssetMaintenance.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.AllInstances.EventTimeGet">
            <summary>设置 AssetMaintenance.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.AllInstances.EventTimeSetInt64">
            <summary>设置 AssetMaintenance.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.AllInstances.ExperienceGet">
            <summary>设置 AssetMaintenance.get_Experience() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.AllInstances.ExperienceSetString">
            <summary>设置 AssetMaintenance.set_Experience(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.AllInstances.IdGet">
            <summary>设置 AssetMaintenance.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.AllInstances.IdSetInt32">
            <summary>设置 AssetMaintenance.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.AllInstances.MaintenancerGet">
            <summary>设置 AssetMaintenance.get_Maintenancer() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.AllInstances.MaintenancerSetInt32">
            <summary>设置 AssetMaintenance.set_Maintenancer(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.AllInstances.physicalAssetGet">
            <summary>设置 AssetMaintenance.get_physicalAsset() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.AllInstances.physicalAssetIdGet">
            <summary>设置 AssetMaintenance.get_physicalAssetId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.AllInstances.physicalAssetIdSetInt32">
            <summary>设置 AssetMaintenance.set_physicalAssetId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetMaintenance.AllInstances.physicalAssetSetphysicalAsset">
            <summary>设置 AssetMaintenance.set_physicalAsset(physicalAsset value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimAssetUse">
            <summary>BCP.Domain.Edmx.AssetUse 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAssetUse.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAssetUse.#ctor(BCP.Domain.Edmx.AssetUse)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAssetUse.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAssetUse.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.Constructor">
            <summary>设置 AssetUse.AssetUse() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.EventTimeGet">
            <summary>设置 AssetUse.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.EventTimeSetInt64">
            <summary>设置 AssetUse.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.IdGet">
            <summary>设置 AssetUse.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.IdSetInt32">
            <summary>设置 AssetUse.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.PlaceOfUseGet">
            <summary>设置 AssetUse.get_PlaceOfUse() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.PlaceOfUseSetString">
            <summary>设置 AssetUse.set_PlaceOfUse(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.UseTimeGet">
            <summary>设置 AssetUse.get_UseTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.UseTimeSetString">
            <summary>设置 AssetUse.set_UseTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.UseTypeGet">
            <summary>设置 AssetUse.get_UseType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.UseTypeSetString">
            <summary>设置 AssetUse.set_UseType(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.UserGet">
            <summary>设置 AssetUse.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.UserSetString">
            <summary>设置 AssetUse.set_User(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.physicalAssetGet">
            <summary>设置 AssetUse.get_physicalAsset() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.physicalAssetIdGet">
            <summary>设置 AssetUse.get_physicalAssetId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.physicalAssetIdSetInt32">
            <summary>设置 AssetUse.set_physicalAssetId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.physicalAssetSetphysicalAsset">
            <summary>设置 AssetUse.set_physicalAsset(physicalAsset value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimAssetUse.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.AllInstances.EventTimeGet">
            <summary>设置 AssetUse.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.AllInstances.EventTimeSetInt64">
            <summary>设置 AssetUse.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.AllInstances.IdGet">
            <summary>设置 AssetUse.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.AllInstances.IdSetInt32">
            <summary>设置 AssetUse.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.AllInstances.PlaceOfUseGet">
            <summary>设置 AssetUse.get_PlaceOfUse() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.AllInstances.PlaceOfUseSetString">
            <summary>设置 AssetUse.set_PlaceOfUse(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.AllInstances.UseTimeGet">
            <summary>设置 AssetUse.get_UseTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.AllInstances.UseTimeSetString">
            <summary>设置 AssetUse.set_UseTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.AllInstances.UseTypeGet">
            <summary>设置 AssetUse.get_UseType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.AllInstances.UseTypeSetString">
            <summary>设置 AssetUse.set_UseType(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.AllInstances.UserGet">
            <summary>设置 AssetUse.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.AllInstances.UserSetString">
            <summary>设置 AssetUse.set_User(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.AllInstances.physicalAssetGet">
            <summary>设置 AssetUse.get_physicalAsset() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.AllInstances.physicalAssetIdGet">
            <summary>设置 AssetUse.get_physicalAssetId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.AllInstances.physicalAssetIdSetInt32">
            <summary>设置 AssetUse.set_physicalAssetId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAssetUse.AllInstances.physicalAssetSetphysicalAsset">
            <summary>设置 AssetUse.set_physicalAsset(physicalAsset value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimAuthorization">
            <summary>BCP.Domain.Edmx.Authorization 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAuthorization.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAuthorization.#ctor(BCP.Domain.Edmx.Authorization)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAuthorization.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimAuthorization.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.Constructor">
            <summary>设置 Authorization.Authorization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.EventTimeGet">
            <summary>设置 Authorization.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.EventTimeSetInt64">
            <summary>设置 Authorization.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.IdGet">
            <summary>设置 Authorization.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.IdSetInt32">
            <summary>设置 Authorization.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.ModulPropertyGet">
            <summary>设置 Authorization.get_ModulProperty() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.ModulPropertyIdGet">
            <summary>设置 Authorization.get_ModulPropertyId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.ModulPropertyIdSetNullableOfInt32">
            <summary>设置 Authorization.set_ModulPropertyId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.ModulPropertySetModulProperty">
            <summary>设置 Authorization.set_ModulProperty(ModulProperty value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.Post1Get">
            <summary>设置 Authorization.get_Post1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.Post1SetPost">
            <summary>设置 Authorization.set_Post1(Post value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.PostGet">
            <summary>设置 Authorization.get_Post() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.PostID1Get">
            <summary>设置 Authorization.get_PostID1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.PostID1SetNullableOfInt32">
            <summary>设置 Authorization.set_PostID1(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.PostIDGet">
            <summary>设置 Authorization.get_PostID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.PostIDSetNullableOfInt32">
            <summary>设置 Authorization.set_PostID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.PostRelationGet">
            <summary>设置 Authorization.get_PostRelation() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.PostRelationSetString">
            <summary>设置 Authorization.set_PostRelation(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.PostSetPost">
            <summary>设置 Authorization.set_Post(Post value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.PropertyValueGet">
            <summary>设置 Authorization.get_PropertyValue() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.PropertyValueSetString">
            <summary>设置 Authorization.set_PropertyValue(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.User1Get">
            <summary>设置 Authorization.get_User1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.User1SetUser">
            <summary>设置 Authorization.set_User1(User value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.UserGet">
            <summary>设置 Authorization.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.UserID1Get">
            <summary>设置 Authorization.get_UserID1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.UserID1SetNullableOfInt32">
            <summary>设置 Authorization.set_UserID1(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.UserIDGet">
            <summary>设置 Authorization.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.UserIDSetNullableOfInt32">
            <summary>设置 Authorization.set_UserID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.UserSetUser">
            <summary>设置 Authorization.set_User(User value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.WorkMessagesGet">
            <summary>设置 Authorization.get_WorkMessages() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.WorkMessagesSetICollectionOfWorkMessage">
            <summary>设置 Authorization.set_WorkMessages(ICollection`1&lt;WorkMessage&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.EventTimeGet">
            <summary>设置 Authorization.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.EventTimeSetInt64">
            <summary>设置 Authorization.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.IdGet">
            <summary>设置 Authorization.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.IdSetInt32">
            <summary>设置 Authorization.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.ModulPropertyGet">
            <summary>设置 Authorization.get_ModulProperty() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.ModulPropertyIdGet">
            <summary>设置 Authorization.get_ModulPropertyId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.ModulPropertyIdSetNullableOfInt32">
            <summary>设置 Authorization.set_ModulPropertyId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.ModulPropertySetModulProperty">
            <summary>设置 Authorization.set_ModulProperty(ModulProperty value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.Post1Get">
            <summary>设置 Authorization.get_Post1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.Post1SetPost">
            <summary>设置 Authorization.set_Post1(Post value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.PostGet">
            <summary>设置 Authorization.get_Post() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.PostID1Get">
            <summary>设置 Authorization.get_PostID1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.PostID1SetNullableOfInt32">
            <summary>设置 Authorization.set_PostID1(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.PostIDGet">
            <summary>设置 Authorization.get_PostID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.PostIDSetNullableOfInt32">
            <summary>设置 Authorization.set_PostID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.PostRelationGet">
            <summary>设置 Authorization.get_PostRelation() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.PostRelationSetString">
            <summary>设置 Authorization.set_PostRelation(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.PostSetPost">
            <summary>设置 Authorization.set_Post(Post value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.PropertyValueGet">
            <summary>设置 Authorization.get_PropertyValue() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.PropertyValueSetString">
            <summary>设置 Authorization.set_PropertyValue(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.User1Get">
            <summary>设置 Authorization.get_User1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.User1SetUser">
            <summary>设置 Authorization.set_User1(User value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.UserGet">
            <summary>设置 Authorization.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.UserID1Get">
            <summary>设置 Authorization.get_UserID1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.UserID1SetNullableOfInt32">
            <summary>设置 Authorization.set_UserID1(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.UserIDGet">
            <summary>设置 Authorization.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.UserIDSetNullableOfInt32">
            <summary>设置 Authorization.set_UserID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.UserSetUser">
            <summary>设置 Authorization.set_User(User value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.WorkMessagesGet">
            <summary>设置 Authorization.get_WorkMessages() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimAuthorization.AllInstances.WorkMessagesSetICollectionOfWorkMessage">
            <summary>设置 Authorization.set_WorkMessages(ICollection`1&lt;WorkMessage&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimBussnessVer">
            <summary>BCP.Domain.Edmx.BussnessVer 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimBussnessVer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimBussnessVer.#ctor(BCP.Domain.Edmx.BussnessVer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimBussnessVer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimBussnessVer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.Constructor">
            <summary>设置 BussnessVer.BussnessVer() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.IDGet">
            <summary>设置 BussnessVer.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.IDSetInt32">
            <summary>设置 BussnessVer.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.NameGet">
            <summary>设置 BussnessVer.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.NameSetString">
            <summary>设置 BussnessVer.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.TimeLineTimeLineIDGet">
            <summary>设置 BussnessVer.get_TimeLineTimeLineID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.TimeLineTimeLineIDSetNullableOfInt32">
            <summary>设置 BussnessVer.set_TimeLineTimeLineID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.otherGet">
            <summary>设置 BussnessVer.get_other() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.otherSetString">
            <summary>设置 BussnessVer.set_other(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimBussnessVer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.AllInstances.IDGet">
            <summary>设置 BussnessVer.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.AllInstances.IDSetInt32">
            <summary>设置 BussnessVer.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.AllInstances.NameGet">
            <summary>设置 BussnessVer.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.AllInstances.NameSetString">
            <summary>设置 BussnessVer.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.AllInstances.TimeLineTimeLineIDGet">
            <summary>设置 BussnessVer.get_TimeLineTimeLineID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.AllInstances.TimeLineTimeLineIDSetNullableOfInt32">
            <summary>设置 BussnessVer.set_TimeLineTimeLineID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.AllInstances.otherGet">
            <summary>设置 BussnessVer.get_other() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimBussnessVer.AllInstances.otherSetString">
            <summary>设置 BussnessVer.set_other(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimCustomCategory">
            <summary>BCP.Domain.Edmx.CustomCategory 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomCategory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomCategory.#ctor(BCP.Domain.Edmx.CustomCategory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomCategory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomCategory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.CategoryNameGet">
            <summary>设置 CustomCategory.get_CategoryName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.CategoryNameSetString">
            <summary>设置 CustomCategory.set_CategoryName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.Constructor">
            <summary>设置 CustomCategory.CustomCategory() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.CustomCategoriesGet">
            <summary>设置 CustomCategory.get_CustomCategories() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.CustomCategoriesSetICollectionOfCustomCategory">
            <summary>设置 CustomCategory.set_CustomCategories(ICollection`1&lt;CustomCategory&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.CustomCategory1Get">
            <summary>设置 CustomCategory.get_CustomCategory1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.CustomCategory1SetCustomCategory">
            <summary>设置 CustomCategory.set_CustomCategory1(CustomCategory value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.CustomCategoryIDGet">
            <summary>设置 CustomCategory.get_CustomCategoryID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.CustomCategoryIDSetNullableOfInt32">
            <summary>设置 CustomCategory.set_CustomCategoryID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.CustomOrganizationTypesGet">
            <summary>设置 CustomCategory.get_CustomOrganizationTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.CustomOrganizationTypesSetICollectionOfOrganizationCustomType">
            <summary>设置 CustomCategory.set_CustomOrganizationTypes(ICollection`1&lt;OrganizationCustomType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.IDGet">
            <summary>设置 CustomCategory.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.IDSetInt32">
            <summary>设置 CustomCategory.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.contentGet">
            <summary>设置 CustomCategory.get_content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.contentSetString">
            <summary>设置 CustomCategory.set_content(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimCustomCategory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.AllInstances.CategoryNameGet">
            <summary>设置 CustomCategory.get_CategoryName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.AllInstances.CategoryNameSetString">
            <summary>设置 CustomCategory.set_CategoryName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.AllInstances.CustomCategoriesGet">
            <summary>设置 CustomCategory.get_CustomCategories() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.AllInstances.CustomCategoriesSetICollectionOfCustomCategory">
            <summary>设置 CustomCategory.set_CustomCategories(ICollection`1&lt;CustomCategory&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.AllInstances.CustomCategory1Get">
            <summary>设置 CustomCategory.get_CustomCategory1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.AllInstances.CustomCategory1SetCustomCategory">
            <summary>设置 CustomCategory.set_CustomCategory1(CustomCategory value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.AllInstances.CustomCategoryIDGet">
            <summary>设置 CustomCategory.get_CustomCategoryID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.AllInstances.CustomCategoryIDSetNullableOfInt32">
            <summary>设置 CustomCategory.set_CustomCategoryID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.AllInstances.CustomOrganizationTypesGet">
            <summary>设置 CustomCategory.get_CustomOrganizationTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.AllInstances.CustomOrganizationTypesSetICollectionOfOrganizationCustomType">
            <summary>设置 CustomCategory.set_CustomOrganizationTypes(ICollection`1&lt;OrganizationCustomType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.AllInstances.IDGet">
            <summary>设置 CustomCategory.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.AllInstances.IDSetInt32">
            <summary>设置 CustomCategory.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.AllInstances.contentGet">
            <summary>设置 CustomCategory.get_content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomCategory.AllInstances.contentSetString">
            <summary>设置 CustomCategory.set_content(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimCustomGroup">
            <summary>BCP.Domain.Edmx.CustomGroup 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomGroup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomGroup.#ctor(BCP.Domain.Edmx.CustomGroup)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.Constructor">
            <summary>设置 CustomGroup.CustomGroup() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.CreatTimeGet">
            <summary>设置 CustomGroup.get_CreatTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.CreatTimeSetNullableOfDateTime">
            <summary>设置 CustomGroup.set_CreatTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.CreateUserIdGet">
            <summary>设置 CustomGroup.get_CreateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.CreateUserIdSetNullableOfInt32">
            <summary>设置 CustomGroup.set_CreateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.CustomGroupUsersGet">
            <summary>设置 CustomGroup.get_CustomGroupUsers() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.CustomGroupUsersSetICollectionOfCustomGroupUser">
            <summary>设置 CustomGroup.set_CustomGroupUsers(ICollection`1&lt;CustomGroupUser&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.GroupNameGet">
            <summary>设置 CustomGroup.get_GroupName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.GroupNameSetString">
            <summary>设置 CustomGroup.set_GroupName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.IdGet">
            <summary>设置 CustomGroup.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.IdSetInt32">
            <summary>设置 CustomGroup.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.NotesGet">
            <summary>设置 CustomGroup.get_Notes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.NotesSetString">
            <summary>设置 CustomGroup.set_Notes(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.UpdateTimeGet">
            <summary>设置 CustomGroup.get_UpdateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.UpdateTimeSetNullableOfDateTime">
            <summary>设置 CustomGroup.set_UpdateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.UpdateUserIdGet">
            <summary>设置 CustomGroup.get_UpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.UpdateUserIdSetNullableOfInt32">
            <summary>设置 CustomGroup.set_UpdateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.UserGet">
            <summary>设置 CustomGroup.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.UserSetUser">
            <summary>设置 CustomGroup.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.CreatTimeGet">
            <summary>设置 CustomGroup.get_CreatTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.CreatTimeSetNullableOfDateTime">
            <summary>设置 CustomGroup.set_CreatTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.CreateUserIdGet">
            <summary>设置 CustomGroup.get_CreateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.CreateUserIdSetNullableOfInt32">
            <summary>设置 CustomGroup.set_CreateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.CustomGroupUsersGet">
            <summary>设置 CustomGroup.get_CustomGroupUsers() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.CustomGroupUsersSetICollectionOfCustomGroupUser">
            <summary>设置 CustomGroup.set_CustomGroupUsers(ICollection`1&lt;CustomGroupUser&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.GroupNameGet">
            <summary>设置 CustomGroup.get_GroupName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.GroupNameSetString">
            <summary>设置 CustomGroup.set_GroupName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.IdGet">
            <summary>设置 CustomGroup.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.IdSetInt32">
            <summary>设置 CustomGroup.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.NotesGet">
            <summary>设置 CustomGroup.get_Notes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.NotesSetString">
            <summary>设置 CustomGroup.set_Notes(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.UpdateTimeGet">
            <summary>设置 CustomGroup.get_UpdateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.UpdateTimeSetNullableOfDateTime">
            <summary>设置 CustomGroup.set_UpdateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.UpdateUserIdGet">
            <summary>设置 CustomGroup.get_UpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.UpdateUserIdSetNullableOfInt32">
            <summary>设置 CustomGroup.set_UpdateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.UserGet">
            <summary>设置 CustomGroup.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroup.AllInstances.UserSetUser">
            <summary>设置 CustomGroup.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser">
            <summary>BCP.Domain.Edmx.CustomGroupUser 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.#ctor(BCP.Domain.Edmx.CustomGroupUser)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.Constructor">
            <summary>设置 CustomGroupUser.CustomGroupUser() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.CreateTimeGet">
            <summary>设置 CustomGroupUser.get_CreateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.CreateTimeSetNullableOfDateTime">
            <summary>设置 CustomGroupUser.set_CreateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.CreateUserIdGet">
            <summary>设置 CustomGroupUser.get_CreateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.CreateUserIdSetNullableOfInt32">
            <summary>设置 CustomGroupUser.set_CreateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.CustomGroupGet">
            <summary>设置 CustomGroupUser.get_CustomGroup() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.CustomGroupSetCustomGroup">
            <summary>设置 CustomGroupUser.set_CustomGroup(CustomGroup value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.GroupIdGet">
            <summary>设置 CustomGroupUser.get_GroupId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.GroupIdSetNullableOfInt32">
            <summary>设置 CustomGroupUser.set_GroupId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.IdGet">
            <summary>设置 CustomGroupUser.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.IdSetInt32">
            <summary>设置 CustomGroupUser.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.NotesGet">
            <summary>设置 CustomGroupUser.get_Notes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.NotesSetString">
            <summary>设置 CustomGroupUser.set_Notes(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.UpdateTimeGet">
            <summary>设置 CustomGroupUser.get_UpdateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.UpdateTimeSetNullableOfDateTime">
            <summary>设置 CustomGroupUser.set_UpdateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.UpdateUserIdGet">
            <summary>设置 CustomGroupUser.get_UpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.UpdateUserIdSetNullableOfInt32">
            <summary>设置 CustomGroupUser.set_UpdateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.UserGet">
            <summary>设置 CustomGroupUser.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.UserIdGet">
            <summary>设置 CustomGroupUser.get_UserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.UserIdSetNullableOfInt32">
            <summary>设置 CustomGroupUser.set_UserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.UserSetUser">
            <summary>设置 CustomGroupUser.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.CreateTimeGet">
            <summary>设置 CustomGroupUser.get_CreateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.CreateTimeSetNullableOfDateTime">
            <summary>设置 CustomGroupUser.set_CreateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.CreateUserIdGet">
            <summary>设置 CustomGroupUser.get_CreateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.CreateUserIdSetNullableOfInt32">
            <summary>设置 CustomGroupUser.set_CreateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.CustomGroupGet">
            <summary>设置 CustomGroupUser.get_CustomGroup() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.CustomGroupSetCustomGroup">
            <summary>设置 CustomGroupUser.set_CustomGroup(CustomGroup value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.GroupIdGet">
            <summary>设置 CustomGroupUser.get_GroupId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.GroupIdSetNullableOfInt32">
            <summary>设置 CustomGroupUser.set_GroupId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.IdGet">
            <summary>设置 CustomGroupUser.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.IdSetInt32">
            <summary>设置 CustomGroupUser.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.NotesGet">
            <summary>设置 CustomGroupUser.get_Notes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.NotesSetString">
            <summary>设置 CustomGroupUser.set_Notes(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.UpdateTimeGet">
            <summary>设置 CustomGroupUser.get_UpdateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.UpdateTimeSetNullableOfDateTime">
            <summary>设置 CustomGroupUser.set_UpdateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.UpdateUserIdGet">
            <summary>设置 CustomGroupUser.get_UpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.UpdateUserIdSetNullableOfInt32">
            <summary>设置 CustomGroupUser.set_UpdateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.UserGet">
            <summary>设置 CustomGroupUser.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.UserIdGet">
            <summary>设置 CustomGroupUser.get_UserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.UserIdSetNullableOfInt32">
            <summary>设置 CustomGroupUser.set_UserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomGroupUser.AllInstances.UserSetUser">
            <summary>设置 CustomGroupUser.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimCustomTabData">
            <summary>BCP.Domain.Edmx.CustomTabData 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomTabData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomTabData.#ctor(BCP.Domain.Edmx.CustomTabData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomTabData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomTabData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.Constructor">
            <summary>设置 CustomTabData.CustomTabData() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.CustomTableGet">
            <summary>设置 CustomTabData.get_CustomTable() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.CustomTableIdGet">
            <summary>设置 CustomTabData.get_CustomTableId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.CustomTableIdSetInt32">
            <summary>设置 CustomTabData.set_CustomTableId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.CustomTableSetCustomTable">
            <summary>设置 CustomTabData.set_CustomTable(CustomTable value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.DataGet">
            <summary>设置 CustomTabData.get_Data() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.DataSetString">
            <summary>设置 CustomTabData.set_Data(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.DocumentManageGet">
            <summary>设置 CustomTabData.get_DocumentManage() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.DocumentManageIDGet">
            <summary>设置 CustomTabData.get_DocumentManageID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.DocumentManageIDSetNullableOfInt32">
            <summary>设置 CustomTabData.set_DocumentManageID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.DocumentManageSetDocumentManage">
            <summary>设置 CustomTabData.set_DocumentManage(DocumentManage value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.IdGet">
            <summary>设置 CustomTabData.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.IdSetInt32">
            <summary>设置 CustomTabData.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimCustomTabData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.AllInstances.CustomTableGet">
            <summary>设置 CustomTabData.get_CustomTable() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.AllInstances.CustomTableIdGet">
            <summary>设置 CustomTabData.get_CustomTableId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.AllInstances.CustomTableIdSetInt32">
            <summary>设置 CustomTabData.set_CustomTableId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.AllInstances.CustomTableSetCustomTable">
            <summary>设置 CustomTabData.set_CustomTable(CustomTable value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.AllInstances.DataGet">
            <summary>设置 CustomTabData.get_Data() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.AllInstances.DataSetString">
            <summary>设置 CustomTabData.set_Data(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.AllInstances.DocumentManageGet">
            <summary>设置 CustomTabData.get_DocumentManage() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.AllInstances.DocumentManageIDGet">
            <summary>设置 CustomTabData.get_DocumentManageID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.AllInstances.DocumentManageIDSetNullableOfInt32">
            <summary>设置 CustomTabData.set_DocumentManageID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.AllInstances.DocumentManageSetDocumentManage">
            <summary>设置 CustomTabData.set_DocumentManage(DocumentManage value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.AllInstances.IdGet">
            <summary>设置 CustomTabData.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTabData.AllInstances.IdSetInt32">
            <summary>设置 CustomTabData.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimCustomTable">
            <summary>BCP.Domain.Edmx.CustomTable 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomTable.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomTable.#ctor(BCP.Domain.Edmx.CustomTable)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomTable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimCustomTable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.ColumnNameGet">
            <summary>设置 CustomTable.get_ColumnName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.ColumnNameSetString">
            <summary>设置 CustomTable.set_ColumnName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.Constructor">
            <summary>设置 CustomTable.CustomTable() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.CustomTabDatasGet">
            <summary>设置 CustomTable.get_CustomTabDatas() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.CustomTabDatasSetICollectionOfCustomTabData">
            <summary>设置 CustomTable.set_CustomTabDatas(ICollection`1&lt;CustomTabData&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.DataTypeGet">
            <summary>设置 CustomTable.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.DataTypeSetString">
            <summary>设置 CustomTable.set_DataType(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.IdGet">
            <summary>设置 CustomTable.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.IdSetInt32">
            <summary>设置 CustomTable.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimCustomTable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.AllInstances.ColumnNameGet">
            <summary>设置 CustomTable.get_ColumnName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.AllInstances.ColumnNameSetString">
            <summary>设置 CustomTable.set_ColumnName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.AllInstances.CustomTabDatasGet">
            <summary>设置 CustomTable.get_CustomTabDatas() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.AllInstances.CustomTabDatasSetICollectionOfCustomTabData">
            <summary>设置 CustomTable.set_CustomTabDatas(ICollection`1&lt;CustomTabData&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.AllInstances.DataTypeGet">
            <summary>设置 CustomTable.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.AllInstances.DataTypeSetString">
            <summary>设置 CustomTable.set_DataType(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.AllInstances.IdGet">
            <summary>设置 CustomTable.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimCustomTable.AllInstances.IdSetInt32">
            <summary>设置 CustomTable.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDataContext">
            <summary>BCP.Domain.Edmx.DataContext 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDataContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDataContext.#ctor(BCP.Domain.Edmx.DataContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDataContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDataContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDataContext.Bind(System.Data.Entity.Infrastructure.IObjectContextAdapter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDataContext.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AdministrativecodesGet">
            <summary>设置 DataContext.get_Administrativecodes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AdministrativecodesSetDbSetOfAdministrativecode">
            <summary>设置 DataContext.set_Administrativecodes(DbSet`1&lt;Administrativecode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AssetBaseTypesGet">
            <summary>设置 DataContext.get_AssetBaseTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AssetBaseTypesSetDbSetOfAssetBaseType">
            <summary>设置 DataContext.set_AssetBaseTypes(DbSet`1&lt;AssetBaseType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AssetMaintenancesGet">
            <summary>设置 DataContext.get_AssetMaintenances() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AssetMaintenancesSetDbSetOfAssetMaintenance">
            <summary>设置 DataContext.set_AssetMaintenances(DbSet`1&lt;AssetMaintenance&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AssetUsesGet">
            <summary>设置 DataContext.get_AssetUses() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AssetUsesSetDbSetOfAssetUse">
            <summary>设置 DataContext.set_AssetUses(DbSet`1&lt;AssetUse&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AuthorizationsGet">
            <summary>设置 DataContext.get_Authorizations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AuthorizationsSetDbSetOfAuthorization">
            <summary>设置 DataContext.set_Authorizations(DbSet`1&lt;Authorization&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.BussnessVersGet">
            <summary>设置 DataContext.get_BussnessVers() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.BussnessVersSetDbSetOfBussnessVer">
            <summary>设置 DataContext.set_BussnessVers(DbSet`1&lt;BussnessVer&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.Constructor">
            <summary>设置 DataContext.DataContext() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.CustomCategoriesGet">
            <summary>设置 DataContext.get_CustomCategories() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.CustomCategoriesSetDbSetOfCustomCategory">
            <summary>设置 DataContext.set_CustomCategories(DbSet`1&lt;CustomCategory&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.CustomTabDatasGet">
            <summary>设置 DataContext.get_CustomTabDatas() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.CustomTabDatasSetDbSetOfCustomTabData">
            <summary>设置 DataContext.set_CustomTabDatas(DbSet`1&lt;CustomTabData&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.CustomTablesGet">
            <summary>设置 DataContext.get_CustomTables() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.CustomTablesSetDbSetOfCustomTable">
            <summary>设置 DataContext.set_CustomTables(DbSet`1&lt;CustomTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DllFileStreamsGet">
            <summary>设置 DataContext.get_DllFileStreams() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DllFileStreamsSetDbSetOfDllFileStream">
            <summary>设置 DataContext.set_DllFileStreams(DbSet`1&lt;DllFileStream&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocCheckStatesGet">
            <summary>设置 DataContext.get_DocCheckStates() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocCheckStatesSetDbSetOfDocCheckState">
            <summary>设置 DataContext.set_DocCheckStates(DbSet`1&lt;DocCheckState&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocComentsGet">
            <summary>设置 DataContext.get_DocComents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocComentsSetDbSetOfDocComent">
            <summary>设置 DataContext.set_DocComents(DbSet`1&lt;DocComent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocLocationsGet">
            <summary>设置 DataContext.get_DocLocations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocLocationsSetDbSetOfDocLocation">
            <summary>设置 DataContext.set_DocLocations(DbSet`1&lt;DocLocation&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocManageStatesGet">
            <summary>设置 DataContext.get_DocManageStates() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocManageStatesSetDbSetOfDocManageState">
            <summary>设置 DataContext.set_DocManageStates(DbSet`1&lt;DocManageState&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocReadersGet">
            <summary>设置 DataContext.get_DocReaders() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocReadersSetDbSetOfDocReader">
            <summary>设置 DataContext.set_DocReaders(DbSet`1&lt;DocReader&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocSendersGet">
            <summary>设置 DataContext.get_DocSenders() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocSendersSetDbSetOfDocSender">
            <summary>设置 DataContext.set_DocSenders(DbSet`1&lt;DocSender&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocTypesGet">
            <summary>设置 DataContext.get_DocTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocTypesSetDbSetOfDocType">
            <summary>设置 DataContext.set_DocTypes(DbSet`1&lt;DocType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocumentContentsGet">
            <summary>设置 DataContext.get_DocumentContents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocumentContentsSetDbSetOfDocumentContent">
            <summary>设置 DataContext.set_DocumentContents(DbSet`1&lt;DocumentContent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocumentManagesGet">
            <summary>设置 DataContext.get_DocumentManages() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocumentManagesSetDbSetOfDocumentManage">
            <summary>设置 DataContext.set_DocumentManages(DbSet`1&lt;DocumentManage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocumentTypesGet">
            <summary>设置 DataContext.get_DocumentTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.DocumentTypesSetDbSetOfDocumentType">
            <summary>设置 DataContext.set_DocumentTypes(DbSet`1&lt;DocumentType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.Employees1Get">
            <summary>设置 DataContext.get_Employees1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.Employees1SetDbSetOfEmployee">
            <summary>设置 DataContext.set_Employees1(DbSet`1&lt;Employee&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.IPCodesGet">
            <summary>设置 DataContext.get_IPCodes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.IPCodesSetDbSetOfIPCode">
            <summary>设置 DataContext.set_IPCodes(DbSet`1&lt;IPCode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.IndustryCodesGet">
            <summary>设置 DataContext.get_IndustryCodes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.IndustryCodesSetDbSetOfIndustryCode">
            <summary>设置 DataContext.set_IndustryCodes(DbSet`1&lt;IndustryCode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.IndustrySolutionsGet">
            <summary>设置 DataContext.get_IndustrySolutions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.IndustrySolutionsSetDbSetOfIndustrySolution">
            <summary>设置 DataContext.set_IndustrySolutions(DbSet`1&lt;IndustrySolution&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.JobChangesGet">
            <summary>设置 DataContext.get_JobChanges() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.JobChangesSetDbSetOfJobChange">
            <summary>设置 DataContext.set_JobChanges(DbSet`1&lt;JobChange&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.LoginLogsGet">
            <summary>设置 DataContext.get_LoginLogs() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.LoginLogsSetDbSetOfLoginLog">
            <summary>设置 DataContext.set_LoginLogs(DbSet`1&lt;LoginLog&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.ModulPropertiesGet">
            <summary>设置 DataContext.get_ModulProperties() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.ModulPropertiesSetDbSetOfModulProperty">
            <summary>设置 DataContext.set_ModulProperties(DbSet`1&lt;ModulProperty&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OnModelCreatingDbModelBuilder">
            <summary>设置 DataContext.OnModelCreating(DbModelBuilder modelBuilder) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OperationDetailsGet">
            <summary>设置 DataContext.get_OperationDetails() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OperationDetailsSetDbSetOfOperationDetail">
            <summary>设置 DataContext.set_OperationDetails(DbSet`1&lt;OperationDetail&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OperationEventsGet">
            <summary>设置 DataContext.get_OperationEvents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OperationEventsSetDbSetOfOperationEvent">
            <summary>设置 DataContext.set_OperationEvents(DbSet`1&lt;OperationEvent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrgaRegisterDocmentsGet">
            <summary>设置 DataContext.get_OrgaRegisterDocments() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrgaRegisterDocmentsSetDbSetOfOrgaRegisterDocment">
            <summary>设置 DataContext.set_OrgaRegisterDocments(DbSet`1&lt;OrgaRegisterDocment&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrganicInvestorsGet">
            <summary>设置 DataContext.get_OrganicInvestors() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrganicInvestorsSetDbSetOfOrganicInvestor">
            <summary>设置 DataContext.set_OrganicInvestors(DbSet`1&lt;OrganicInvestor&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrganizBasicsGet">
            <summary>设置 DataContext.get_OrganizBasics() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrganizBasicsSetDbSetOfOrganizBasic">
            <summary>设置 DataContext.set_OrganizBasics(DbSet`1&lt;OrganizBasic&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrganizationAssetTypesGet">
            <summary>设置 DataContext.get_OrganizationAssetTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrganizationAssetTypesSetDbSetOfOrganizationAssetType">
            <summary>设置 DataContext.set_OrganizationAssetTypes(DbSet`1&lt;OrganizationAssetType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrganizationCustomTypesGet">
            <summary>设置 DataContext.get_OrganizationCustomTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrganizationCustomTypesSetDbSetOfOrganizationCustomType">
            <summary>设置 DataContext.set_OrganizationCustomTypes(DbSet`1&lt;OrganizationCustomType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrganizationEventsGet">
            <summary>设置 DataContext.get_OrganizationEvents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrganizationEventsSetDbSetOfOrganizationEvent">
            <summary>设置 DataContext.set_OrganizationEvents(DbSet`1&lt;OrganizationEvent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrganizationOtherNamesGet">
            <summary>设置 DataContext.get_OrganizationOtherNames() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrganizationOtherNamesSetDbSetOfOrganizationOtherName">
            <summary>设置 DataContext.set_OrganizationOtherNames(DbSet`1&lt;OrganizationOtherName&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrganizationTransitionsGet">
            <summary>设置 DataContext.get_OrganizationTransitions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrganizationTransitionsSetDbSetOfOrganizationTransition">
            <summary>设置 DataContext.set_OrganizationTransitions(DbSet`1&lt;OrganizationTransition&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.Organization_ContactTablesGet">
            <summary>设置 DataContext.get_Organization_ContactTables() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.Organization_ContactTablesSetDbSetOfOrganization_ContacTable">
            <summary>设置 DataContext.set_Organization_ContactTables(DbSet`1&lt;Organization_ContacTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.Organization_TypeGet">
            <summary>设置 DataContext.get_Organization_Type() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.Organization_TypeSetDbSetOfOrganization_Type">
            <summary>设置 DataContext.set_Organization_Type(DbSet`1&lt;Organization_Type&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrganizationsGet">
            <summary>设置 DataContext.get_Organizations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.OrganizationsSetDbSetOfOrganization">
            <summary>设置 DataContext.set_Organizations(DbSet`1&lt;Organization&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.PositionsGet">
            <summary>设置 DataContext.get_Positions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.PositionsSetDbSetOfPosition">
            <summary>设置 DataContext.set_Positions(DbSet`1&lt;Position&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.PostRequiresGet">
            <summary>设置 DataContext.get_PostRequires() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.PostRequiresSetDbSetOfPostRequire">
            <summary>设置 DataContext.set_PostRequires(DbSet`1&lt;PostRequire&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.PostsGet">
            <summary>设置 DataContext.get_Posts() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.PostsSetDbSetOfPost">
            <summary>设置 DataContext.set_Posts(DbSet`1&lt;Post&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.ProductCompositionsGet">
            <summary>设置 DataContext.get_ProductCompositions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.ProductCompositionsSetDbSetOfProductComposition">
            <summary>设置 DataContext.set_ProductCompositions(DbSet`1&lt;ProductComposition&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.ProductCustomCategoriesGet">
            <summary>设置 DataContext.get_ProductCustomCategories() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.ProductCustomCategoriesSetDbSetOfProductCustomCategory">
            <summary>设置 DataContext.set_ProductCustomCategories(DbSet`1&lt;ProductCustomCategory&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.ProductCustomTypesGet">
            <summary>设置 DataContext.get_ProductCustomTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.ProductCustomTypesSetDbSetOfProductCustomType">
            <summary>设置 DataContext.set_ProductCustomTypes(DbSet`1&lt;ProductCustomType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.ProductEventsGet">
            <summary>设置 DataContext.get_ProductEvents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.ProductEventsSetDbSetOfProductEvent">
            <summary>设置 DataContext.set_ProductEvents(DbSet`1&lt;ProductEvent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.ProductStandardsGet">
            <summary>设置 DataContext.get_ProductStandards() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.ProductStandardsSetDbSetOfProductStandard">
            <summary>设置 DataContext.set_ProductStandards(DbSet`1&lt;ProductStandard&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.ProductsGet">
            <summary>设置 DataContext.get_Products() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.ProductsSetDbSetOfProduct">
            <summary>设置 DataContext.set_Products(DbSet`1&lt;Product&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.RegisterDocumentTypesGet">
            <summary>设置 DataContext.get_RegisterDocumentTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.RegisterDocumentTypesSetDbSetOfRegisterDocumentType">
            <summary>设置 DataContext.set_RegisterDocumentTypes(DbSet`1&lt;RegisterDocumentType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.SecurityinfoesGet">
            <summary>设置 DataContext.get_Securityinfoes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.SecurityinfoesSetDbSetOfSecurityinfo">
            <summary>设置 DataContext.set_Securityinfoes(DbSet`1&lt;Securityinfo&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.SpecializedsGet">
            <summary>设置 DataContext.get_Specializeds() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.SpecializedsSetDbSetOfSpecialized">
            <summary>设置 DataContext.set_Specializeds(DbSet`1&lt;Specialized&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.SubordinatesGet">
            <summary>设置 DataContext.get_Subordinates() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.SubordinatesSetDbSetOfSubordinate">
            <summary>设置 DataContext.set_Subordinates(DbSet`1&lt;Subordinate&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.UserRelateTablesGet">
            <summary>设置 DataContext.get_UserRelateTables() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.UserRelateTablesSetDbSetOfUserRelateTable">
            <summary>设置 DataContext.set_UserRelateTables(DbSet`1&lt;UserRelateTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.UserRelateTypesGet">
            <summary>设置 DataContext.get_UserRelateTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.UserRelateTypesSetDbSetOfUserRelateType">
            <summary>设置 DataContext.set_UserRelateTypes(DbSet`1&lt;UserRelateType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.User_ContactTableGet">
            <summary>设置 DataContext.get_User_ContactTable() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.User_ContactTableSetDbSetOfUser_ContacTable">
            <summary>设置 DataContext.set_User_ContactTable(DbSet`1&lt;User_ContacTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.WorkMessagesGet">
            <summary>设置 DataContext.get_WorkMessages() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.WorkMessagesSetDbSetOfWorkMessage">
            <summary>设置 DataContext.set_WorkMessages(DbSet`1&lt;WorkMessage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.WorkModulsGet">
            <summary>设置 DataContext.get_WorkModuls() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.WorkModulsSetDbSetOfWorkModul">
            <summary>设置 DataContext.set_WorkModuls(DbSet`1&lt;WorkModul&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.WorkSpaceBaseTypesGet">
            <summary>设置 DataContext.get_WorkSpaceBaseTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.WorkSpaceBaseTypesSetDbSetOfWorkSpaceBaseType">
            <summary>设置 DataContext.set_WorkSpaceBaseTypes(DbSet`1&lt;WorkSpaceBaseType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.WorkSpaceRolesGet">
            <summary>设置 DataContext.get_WorkSpaceRoles() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.WorkSpaceRolesSetDbSetOfWorkSpaceRole">
            <summary>设置 DataContext.set_WorkSpaceRoles(DbSet`1&lt;WorkSpaceRole&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.WorkSpaceTypesGet">
            <summary>设置 DataContext.get_WorkSpaceTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.WorkSpaceTypesSetDbSetOfWorkSpaceType">
            <summary>设置 DataContext.set_WorkSpaceTypes(DbSet`1&lt;WorkSpaceType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.WorkSpacesGet">
            <summary>设置 DataContext.get_WorkSpaces() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.WorkSpacesSetDbSetOfWorkSpace">
            <summary>设置 DataContext.set_WorkSpaces(DbSet`1&lt;WorkSpace&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.ZipCodesGet">
            <summary>设置 DataContext.get_ZipCodes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.ZipCodesSetDbSetOfZipCode">
            <summary>设置 DataContext.set_ZipCodes(DbSet`1&lt;ZipCode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.physicalAssetsGet">
            <summary>设置 DataContext.get_physicalAssets() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.physicalAssetsSetDbSetOfphysicalAsset">
            <summary>设置 DataContext.set_physicalAssets(DbSet`1&lt;physicalAsset&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.sys_CustomGroupUserGet">
            <summary>设置 DataContext.get_sys_CustomGroupUser() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.sys_CustomGroupUserSetDbSetOfCustomGroupUser">
            <summary>设置 DataContext.set_sys_CustomGroupUser(DbSet`1&lt;CustomGroupUser&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.sys_CustomerGoupGet">
            <summary>设置 DataContext.get_sys_CustomerGoup() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.sys_CustomerGoupSetDbSetOfCustomGroup">
            <summary>设置 DataContext.set_sys_CustomerGoup(DbSet`1&lt;CustomGroup&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.sys_GroupGet">
            <summary>设置 DataContext.get_sys_Group() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.sys_GroupMemberGet">
            <summary>设置 DataContext.get_sys_GroupMember() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.sys_GroupMemberSetDbSetOfGroupMember">
            <summary>设置 DataContext.set_sys_GroupMember(DbSet`1&lt;GroupMember&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.sys_GroupMessagerGet">
            <summary>设置 DataContext.get_sys_GroupMessager() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.sys_GroupMessagerSetDbSetOfGroupMessager">
            <summary>设置 DataContext.set_sys_GroupMessager(DbSet`1&lt;GroupMessager&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.sys_GroupSetDbSetOfGroup">
            <summary>设置 DataContext.set_sys_Group(DbSet`1&lt;Group&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.sys_UserGet">
            <summary>设置 DataContext.get_sys_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.sys_UserMessageGet">
            <summary>设置 DataContext.get_sys_UserMessage() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.sys_UserMessageSetDbSetOfUserMessage">
            <summary>设置 DataContext.set_sys_UserMessage(DbSet`1&lt;UserMessage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.sys_UserSetDbSetOfUser">
            <summary>设置 DataContext.set_sys_User(DbSet`1&lt;User&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.workTasksGet">
            <summary>设置 DataContext.get_workTasks() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.workTasksSetDbSetOfworkTask">
            <summary>设置 DataContext.set_workTasks(DbSet`1&lt;workTask&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.AdministrativecodesGet">
            <summary>设置 DataContext.get_Administrativecodes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.AdministrativecodesSetDbSetOfAdministrativecode">
            <summary>设置 DataContext.set_Administrativecodes(DbSet`1&lt;Administrativecode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.AssetBaseTypesGet">
            <summary>设置 DataContext.get_AssetBaseTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.AssetBaseTypesSetDbSetOfAssetBaseType">
            <summary>设置 DataContext.set_AssetBaseTypes(DbSet`1&lt;AssetBaseType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.AssetMaintenancesGet">
            <summary>设置 DataContext.get_AssetMaintenances() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.AssetMaintenancesSetDbSetOfAssetMaintenance">
            <summary>设置 DataContext.set_AssetMaintenances(DbSet`1&lt;AssetMaintenance&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.AssetUsesGet">
            <summary>设置 DataContext.get_AssetUses() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.AssetUsesSetDbSetOfAssetUse">
            <summary>设置 DataContext.set_AssetUses(DbSet`1&lt;AssetUse&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.AuthorizationsGet">
            <summary>设置 DataContext.get_Authorizations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.AuthorizationsSetDbSetOfAuthorization">
            <summary>设置 DataContext.set_Authorizations(DbSet`1&lt;Authorization&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.BussnessVersGet">
            <summary>设置 DataContext.get_BussnessVers() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.BussnessVersSetDbSetOfBussnessVer">
            <summary>设置 DataContext.set_BussnessVers(DbSet`1&lt;BussnessVer&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.CustomCategoriesGet">
            <summary>设置 DataContext.get_CustomCategories() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.CustomCategoriesSetDbSetOfCustomCategory">
            <summary>设置 DataContext.set_CustomCategories(DbSet`1&lt;CustomCategory&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.CustomTabDatasGet">
            <summary>设置 DataContext.get_CustomTabDatas() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.CustomTabDatasSetDbSetOfCustomTabData">
            <summary>设置 DataContext.set_CustomTabDatas(DbSet`1&lt;CustomTabData&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.CustomTablesGet">
            <summary>设置 DataContext.get_CustomTables() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.CustomTablesSetDbSetOfCustomTable">
            <summary>设置 DataContext.set_CustomTables(DbSet`1&lt;CustomTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DllFileStreamsGet">
            <summary>设置 DataContext.get_DllFileStreams() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DllFileStreamsSetDbSetOfDllFileStream">
            <summary>设置 DataContext.set_DllFileStreams(DbSet`1&lt;DllFileStream&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocCheckStatesGet">
            <summary>设置 DataContext.get_DocCheckStates() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocCheckStatesSetDbSetOfDocCheckState">
            <summary>设置 DataContext.set_DocCheckStates(DbSet`1&lt;DocCheckState&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocComentsGet">
            <summary>设置 DataContext.get_DocComents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocComentsSetDbSetOfDocComent">
            <summary>设置 DataContext.set_DocComents(DbSet`1&lt;DocComent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocLocationsGet">
            <summary>设置 DataContext.get_DocLocations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocLocationsSetDbSetOfDocLocation">
            <summary>设置 DataContext.set_DocLocations(DbSet`1&lt;DocLocation&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocManageStatesGet">
            <summary>设置 DataContext.get_DocManageStates() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocManageStatesSetDbSetOfDocManageState">
            <summary>设置 DataContext.set_DocManageStates(DbSet`1&lt;DocManageState&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocReadersGet">
            <summary>设置 DataContext.get_DocReaders() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocReadersSetDbSetOfDocReader">
            <summary>设置 DataContext.set_DocReaders(DbSet`1&lt;DocReader&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocSendersGet">
            <summary>设置 DataContext.get_DocSenders() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocSendersSetDbSetOfDocSender">
            <summary>设置 DataContext.set_DocSenders(DbSet`1&lt;DocSender&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocTypesGet">
            <summary>设置 DataContext.get_DocTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocTypesSetDbSetOfDocType">
            <summary>设置 DataContext.set_DocTypes(DbSet`1&lt;DocType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocumentContentsGet">
            <summary>设置 DataContext.get_DocumentContents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocumentContentsSetDbSetOfDocumentContent">
            <summary>设置 DataContext.set_DocumentContents(DbSet`1&lt;DocumentContent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocumentManagesGet">
            <summary>设置 DataContext.get_DocumentManages() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocumentManagesSetDbSetOfDocumentManage">
            <summary>设置 DataContext.set_DocumentManages(DbSet`1&lt;DocumentManage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocumentTypesGet">
            <summary>设置 DataContext.get_DocumentTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.DocumentTypesSetDbSetOfDocumentType">
            <summary>设置 DataContext.set_DocumentTypes(DbSet`1&lt;DocumentType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.Employees1Get">
            <summary>设置 DataContext.get_Employees1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.Employees1SetDbSetOfEmployee">
            <summary>设置 DataContext.set_Employees1(DbSet`1&lt;Employee&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.IPCodesGet">
            <summary>设置 DataContext.get_IPCodes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.IPCodesSetDbSetOfIPCode">
            <summary>设置 DataContext.set_IPCodes(DbSet`1&lt;IPCode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.IndustryCodesGet">
            <summary>设置 DataContext.get_IndustryCodes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.IndustryCodesSetDbSetOfIndustryCode">
            <summary>设置 DataContext.set_IndustryCodes(DbSet`1&lt;IndustryCode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.IndustrySolutionsGet">
            <summary>设置 DataContext.get_IndustrySolutions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.IndustrySolutionsSetDbSetOfIndustrySolution">
            <summary>设置 DataContext.set_IndustrySolutions(DbSet`1&lt;IndustrySolution&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.JobChangesGet">
            <summary>设置 DataContext.get_JobChanges() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.JobChangesSetDbSetOfJobChange">
            <summary>设置 DataContext.set_JobChanges(DbSet`1&lt;JobChange&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.LoginLogsGet">
            <summary>设置 DataContext.get_LoginLogs() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.LoginLogsSetDbSetOfLoginLog">
            <summary>设置 DataContext.set_LoginLogs(DbSet`1&lt;LoginLog&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.ModulPropertiesGet">
            <summary>设置 DataContext.get_ModulProperties() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.ModulPropertiesSetDbSetOfModulProperty">
            <summary>设置 DataContext.set_ModulProperties(DbSet`1&lt;ModulProperty&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OnModelCreatingDbModelBuilder">
            <summary>设置 DataContext.OnModelCreating(DbModelBuilder modelBuilder) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OperationDetailsGet">
            <summary>设置 DataContext.get_OperationDetails() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OperationDetailsSetDbSetOfOperationDetail">
            <summary>设置 DataContext.set_OperationDetails(DbSet`1&lt;OperationDetail&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OperationEventsGet">
            <summary>设置 DataContext.get_OperationEvents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OperationEventsSetDbSetOfOperationEvent">
            <summary>设置 DataContext.set_OperationEvents(DbSet`1&lt;OperationEvent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrgaRegisterDocmentsGet">
            <summary>设置 DataContext.get_OrgaRegisterDocments() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrgaRegisterDocmentsSetDbSetOfOrgaRegisterDocment">
            <summary>设置 DataContext.set_OrgaRegisterDocments(DbSet`1&lt;OrgaRegisterDocment&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrganicInvestorsGet">
            <summary>设置 DataContext.get_OrganicInvestors() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrganicInvestorsSetDbSetOfOrganicInvestor">
            <summary>设置 DataContext.set_OrganicInvestors(DbSet`1&lt;OrganicInvestor&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrganizBasicsGet">
            <summary>设置 DataContext.get_OrganizBasics() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrganizBasicsSetDbSetOfOrganizBasic">
            <summary>设置 DataContext.set_OrganizBasics(DbSet`1&lt;OrganizBasic&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrganizationAssetTypesGet">
            <summary>设置 DataContext.get_OrganizationAssetTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrganizationAssetTypesSetDbSetOfOrganizationAssetType">
            <summary>设置 DataContext.set_OrganizationAssetTypes(DbSet`1&lt;OrganizationAssetType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrganizationCustomTypesGet">
            <summary>设置 DataContext.get_OrganizationCustomTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrganizationCustomTypesSetDbSetOfOrganizationCustomType">
            <summary>设置 DataContext.set_OrganizationCustomTypes(DbSet`1&lt;OrganizationCustomType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrganizationEventsGet">
            <summary>设置 DataContext.get_OrganizationEvents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrganizationEventsSetDbSetOfOrganizationEvent">
            <summary>设置 DataContext.set_OrganizationEvents(DbSet`1&lt;OrganizationEvent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrganizationOtherNamesGet">
            <summary>设置 DataContext.get_OrganizationOtherNames() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrganizationOtherNamesSetDbSetOfOrganizationOtherName">
            <summary>设置 DataContext.set_OrganizationOtherNames(DbSet`1&lt;OrganizationOtherName&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrganizationTransitionsGet">
            <summary>设置 DataContext.get_OrganizationTransitions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrganizationTransitionsSetDbSetOfOrganizationTransition">
            <summary>设置 DataContext.set_OrganizationTransitions(DbSet`1&lt;OrganizationTransition&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.Organization_ContactTablesGet">
            <summary>设置 DataContext.get_Organization_ContactTables() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.Organization_ContactTablesSetDbSetOfOrganization_ContacTable">
            <summary>设置 DataContext.set_Organization_ContactTables(DbSet`1&lt;Organization_ContacTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.Organization_TypeGet">
            <summary>设置 DataContext.get_Organization_Type() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.Organization_TypeSetDbSetOfOrganization_Type">
            <summary>设置 DataContext.set_Organization_Type(DbSet`1&lt;Organization_Type&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrganizationsGet">
            <summary>设置 DataContext.get_Organizations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.OrganizationsSetDbSetOfOrganization">
            <summary>设置 DataContext.set_Organizations(DbSet`1&lt;Organization&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.PositionsGet">
            <summary>设置 DataContext.get_Positions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.PositionsSetDbSetOfPosition">
            <summary>设置 DataContext.set_Positions(DbSet`1&lt;Position&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.PostRequiresGet">
            <summary>设置 DataContext.get_PostRequires() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.PostRequiresSetDbSetOfPostRequire">
            <summary>设置 DataContext.set_PostRequires(DbSet`1&lt;PostRequire&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.PostsGet">
            <summary>设置 DataContext.get_Posts() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.PostsSetDbSetOfPost">
            <summary>设置 DataContext.set_Posts(DbSet`1&lt;Post&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.ProductCompositionsGet">
            <summary>设置 DataContext.get_ProductCompositions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.ProductCompositionsSetDbSetOfProductComposition">
            <summary>设置 DataContext.set_ProductCompositions(DbSet`1&lt;ProductComposition&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.ProductCustomCategoriesGet">
            <summary>设置 DataContext.get_ProductCustomCategories() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.ProductCustomCategoriesSetDbSetOfProductCustomCategory">
            <summary>设置 DataContext.set_ProductCustomCategories(DbSet`1&lt;ProductCustomCategory&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.ProductCustomTypesGet">
            <summary>设置 DataContext.get_ProductCustomTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.ProductCustomTypesSetDbSetOfProductCustomType">
            <summary>设置 DataContext.set_ProductCustomTypes(DbSet`1&lt;ProductCustomType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.ProductEventsGet">
            <summary>设置 DataContext.get_ProductEvents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.ProductEventsSetDbSetOfProductEvent">
            <summary>设置 DataContext.set_ProductEvents(DbSet`1&lt;ProductEvent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.ProductStandardsGet">
            <summary>设置 DataContext.get_ProductStandards() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.ProductStandardsSetDbSetOfProductStandard">
            <summary>设置 DataContext.set_ProductStandards(DbSet`1&lt;ProductStandard&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.ProductsGet">
            <summary>设置 DataContext.get_Products() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.ProductsSetDbSetOfProduct">
            <summary>设置 DataContext.set_Products(DbSet`1&lt;Product&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.RegisterDocumentTypesGet">
            <summary>设置 DataContext.get_RegisterDocumentTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.RegisterDocumentTypesSetDbSetOfRegisterDocumentType">
            <summary>设置 DataContext.set_RegisterDocumentTypes(DbSet`1&lt;RegisterDocumentType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.SecurityinfoesGet">
            <summary>设置 DataContext.get_Securityinfoes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.SecurityinfoesSetDbSetOfSecurityinfo">
            <summary>设置 DataContext.set_Securityinfoes(DbSet`1&lt;Securityinfo&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.SpecializedsGet">
            <summary>设置 DataContext.get_Specializeds() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.SpecializedsSetDbSetOfSpecialized">
            <summary>设置 DataContext.set_Specializeds(DbSet`1&lt;Specialized&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.SubordinatesGet">
            <summary>设置 DataContext.get_Subordinates() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.SubordinatesSetDbSetOfSubordinate">
            <summary>设置 DataContext.set_Subordinates(DbSet`1&lt;Subordinate&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.UserRelateTablesGet">
            <summary>设置 DataContext.get_UserRelateTables() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.UserRelateTablesSetDbSetOfUserRelateTable">
            <summary>设置 DataContext.set_UserRelateTables(DbSet`1&lt;UserRelateTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.UserRelateTypesGet">
            <summary>设置 DataContext.get_UserRelateTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.UserRelateTypesSetDbSetOfUserRelateType">
            <summary>设置 DataContext.set_UserRelateTypes(DbSet`1&lt;UserRelateType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.User_ContactTableGet">
            <summary>设置 DataContext.get_User_ContactTable() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.User_ContactTableSetDbSetOfUser_ContacTable">
            <summary>设置 DataContext.set_User_ContactTable(DbSet`1&lt;User_ContacTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.WorkMessagesGet">
            <summary>设置 DataContext.get_WorkMessages() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.WorkMessagesSetDbSetOfWorkMessage">
            <summary>设置 DataContext.set_WorkMessages(DbSet`1&lt;WorkMessage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.WorkModulsGet">
            <summary>设置 DataContext.get_WorkModuls() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.WorkModulsSetDbSetOfWorkModul">
            <summary>设置 DataContext.set_WorkModuls(DbSet`1&lt;WorkModul&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.WorkSpaceBaseTypesGet">
            <summary>设置 DataContext.get_WorkSpaceBaseTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.WorkSpaceBaseTypesSetDbSetOfWorkSpaceBaseType">
            <summary>设置 DataContext.set_WorkSpaceBaseTypes(DbSet`1&lt;WorkSpaceBaseType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.WorkSpaceRolesGet">
            <summary>设置 DataContext.get_WorkSpaceRoles() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.WorkSpaceRolesSetDbSetOfWorkSpaceRole">
            <summary>设置 DataContext.set_WorkSpaceRoles(DbSet`1&lt;WorkSpaceRole&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.WorkSpaceTypesGet">
            <summary>设置 DataContext.get_WorkSpaceTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.WorkSpaceTypesSetDbSetOfWorkSpaceType">
            <summary>设置 DataContext.set_WorkSpaceTypes(DbSet`1&lt;WorkSpaceType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.WorkSpacesGet">
            <summary>设置 DataContext.get_WorkSpaces() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.WorkSpacesSetDbSetOfWorkSpace">
            <summary>设置 DataContext.set_WorkSpaces(DbSet`1&lt;WorkSpace&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.ZipCodesGet">
            <summary>设置 DataContext.get_ZipCodes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.ZipCodesSetDbSetOfZipCode">
            <summary>设置 DataContext.set_ZipCodes(DbSet`1&lt;ZipCode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.physicalAssetsGet">
            <summary>设置 DataContext.get_physicalAssets() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.physicalAssetsSetDbSetOfphysicalAsset">
            <summary>设置 DataContext.set_physicalAssets(DbSet`1&lt;physicalAsset&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.sys_CustomGroupUserGet">
            <summary>设置 DataContext.get_sys_CustomGroupUser() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.sys_CustomGroupUserSetDbSetOfCustomGroupUser">
            <summary>设置 DataContext.set_sys_CustomGroupUser(DbSet`1&lt;CustomGroupUser&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.sys_CustomerGoupGet">
            <summary>设置 DataContext.get_sys_CustomerGoup() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.sys_CustomerGoupSetDbSetOfCustomGroup">
            <summary>设置 DataContext.set_sys_CustomerGoup(DbSet`1&lt;CustomGroup&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.sys_GroupGet">
            <summary>设置 DataContext.get_sys_Group() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.sys_GroupMemberGet">
            <summary>设置 DataContext.get_sys_GroupMember() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.sys_GroupMemberSetDbSetOfGroupMember">
            <summary>设置 DataContext.set_sys_GroupMember(DbSet`1&lt;GroupMember&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.sys_GroupMessagerGet">
            <summary>设置 DataContext.get_sys_GroupMessager() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.sys_GroupMessagerSetDbSetOfGroupMessager">
            <summary>设置 DataContext.set_sys_GroupMessager(DbSet`1&lt;GroupMessager&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.sys_GroupSetDbSetOfGroup">
            <summary>设置 DataContext.set_sys_Group(DbSet`1&lt;Group&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.sys_UserGet">
            <summary>设置 DataContext.get_sys_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.sys_UserMessageGet">
            <summary>设置 DataContext.get_sys_UserMessage() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.sys_UserMessageSetDbSetOfUserMessage">
            <summary>设置 DataContext.set_sys_UserMessage(DbSet`1&lt;UserMessage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.sys_UserSetDbSetOfUser">
            <summary>设置 DataContext.set_sys_User(DbSet`1&lt;User&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.workTasksGet">
            <summary>设置 DataContext.get_workTasks() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDataContext.AllInstances.workTasksSetDbSetOfworkTask">
            <summary>设置 DataContext.set_workTasks(DbSet`1&lt;workTask&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDllFileStream">
            <summary>BCP.Domain.Edmx.DllFileStream 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDllFileStream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDllFileStream.#ctor(BCP.Domain.Edmx.DllFileStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDllFileStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDllFileStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.Constructor">
            <summary>设置 DllFileStream.DllFileStream() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.DllFileStream1Get">
            <summary>设置 DllFileStream.get_DllFileStream1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.DllFileStream1SetDllFileStream">
            <summary>设置 DllFileStream.set_DllFileStream1(DllFileStream value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.DllFileStreamIDGet">
            <summary>设置 DllFileStream.get_DllFileStreamID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.DllFileStreamIDSetNullableOfInt32">
            <summary>设置 DllFileStream.set_DllFileStreamID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.DllFileStreamsGet">
            <summary>设置 DllFileStream.get_DllFileStreams() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.DllFileStreamsSetICollectionOfDllFileStream">
            <summary>设置 DllFileStream.set_DllFileStreams(ICollection`1&lt;DllFileStream&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.DllfileStreamGet">
            <summary>设置 DllFileStream.get_DllfileStream() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.DllfileStreamSetByteArray">
            <summary>设置 DllFileStream.set_DllfileStream(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.EventTimeGet">
            <summary>设置 DllFileStream.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.EventTimeSetInt64">
            <summary>设置 DllFileStream.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.FileNameGet">
            <summary>设置 DllFileStream.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.FileNameSetString">
            <summary>设置 DllFileStream.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.IDGet">
            <summary>设置 DllFileStream.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.IDSetInt32">
            <summary>设置 DllFileStream.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.IndustrySolutionGet">
            <summary>设置 DllFileStream.get_IndustrySolution() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.IndustrySolutionIdGet">
            <summary>设置 DllFileStream.get_IndustrySolutionId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.IndustrySolutionIdSetNullableOfInt32">
            <summary>设置 DllFileStream.set_IndustrySolutionId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.IndustrySolutionSetIndustrySolution">
            <summary>设置 DllFileStream.set_IndustrySolution(IndustrySolution value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.MainWindowNameGet">
            <summary>设置 DllFileStream.get_MainWindowName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.MainWindowNameSetNullableOfBoolean">
            <summary>设置 DllFileStream.set_MainWindowName(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.ModelGet">
            <summary>设置 DllFileStream.get_Model() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.ModelSetString">
            <summary>设置 DllFileStream.set_Model(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.ParagramGet">
            <summary>设置 DllFileStream.get_Paragram() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.ParagramSetString">
            <summary>设置 DllFileStream.set_Paragram(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.Txt2Get">
            <summary>设置 DllFileStream.get_Txt2() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.Txt2SetString">
            <summary>设置 DllFileStream.set_Txt2(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.URIGet">
            <summary>设置 DllFileStream.get_URI() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.URISetString">
            <summary>设置 DllFileStream.set_URI(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.WorkModulsGet">
            <summary>设置 DllFileStream.get_WorkModuls() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.WorkModulsSetICollectionOfWorkModul">
            <summary>设置 DllFileStream.set_WorkModuls(ICollection`1&lt;WorkModul&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.DllFileStream1Get">
            <summary>设置 DllFileStream.get_DllFileStream1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.DllFileStream1SetDllFileStream">
            <summary>设置 DllFileStream.set_DllFileStream1(DllFileStream value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.DllFileStreamIDGet">
            <summary>设置 DllFileStream.get_DllFileStreamID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.DllFileStreamIDSetNullableOfInt32">
            <summary>设置 DllFileStream.set_DllFileStreamID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.DllFileStreamsGet">
            <summary>设置 DllFileStream.get_DllFileStreams() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.DllFileStreamsSetICollectionOfDllFileStream">
            <summary>设置 DllFileStream.set_DllFileStreams(ICollection`1&lt;DllFileStream&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.DllfileStreamGet">
            <summary>设置 DllFileStream.get_DllfileStream() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.DllfileStreamSetByteArray">
            <summary>设置 DllFileStream.set_DllfileStream(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.EventTimeGet">
            <summary>设置 DllFileStream.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.EventTimeSetInt64">
            <summary>设置 DllFileStream.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.FileNameGet">
            <summary>设置 DllFileStream.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.FileNameSetString">
            <summary>设置 DllFileStream.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.IDGet">
            <summary>设置 DllFileStream.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.IDSetInt32">
            <summary>设置 DllFileStream.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.IndustrySolutionGet">
            <summary>设置 DllFileStream.get_IndustrySolution() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.IndustrySolutionIdGet">
            <summary>设置 DllFileStream.get_IndustrySolutionId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.IndustrySolutionIdSetNullableOfInt32">
            <summary>设置 DllFileStream.set_IndustrySolutionId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.IndustrySolutionSetIndustrySolution">
            <summary>设置 DllFileStream.set_IndustrySolution(IndustrySolution value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.MainWindowNameGet">
            <summary>设置 DllFileStream.get_MainWindowName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.MainWindowNameSetNullableOfBoolean">
            <summary>设置 DllFileStream.set_MainWindowName(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.ModelGet">
            <summary>设置 DllFileStream.get_Model() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.ModelSetString">
            <summary>设置 DllFileStream.set_Model(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.ParagramGet">
            <summary>设置 DllFileStream.get_Paragram() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.ParagramSetString">
            <summary>设置 DllFileStream.set_Paragram(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.Txt2Get">
            <summary>设置 DllFileStream.get_Txt2() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.Txt2SetString">
            <summary>设置 DllFileStream.set_Txt2(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.URIGet">
            <summary>设置 DllFileStream.get_URI() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.URISetString">
            <summary>设置 DllFileStream.set_URI(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.WorkModulsGet">
            <summary>设置 DllFileStream.get_WorkModuls() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDllFileStream.AllInstances.WorkModulsSetICollectionOfWorkModul">
            <summary>设置 DllFileStream.set_WorkModuls(ICollection`1&lt;WorkModul&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocCheckState">
            <summary>BCP.Domain.Edmx.DocCheckState 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocCheckState.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocCheckState.#ctor(BCP.Domain.Edmx.DocCheckState)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocCheckState.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocCheckState.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.CheckStateGet">
            <summary>设置 DocCheckState.get_CheckState() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.CheckStateSetBoolean">
            <summary>设置 DocCheckState.set_CheckState(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.CheckTimeGet">
            <summary>设置 DocCheckState.get_CheckTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.CheckTimeSetNullableOfDateTime">
            <summary>设置 DocCheckState.set_CheckTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.Constructor">
            <summary>设置 DocCheckState.DocCheckState() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.DocumentManagesGet">
            <summary>设置 DocCheckState.get_DocumentManages() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.DocumentManagesSetICollectionOfDocumentManage">
            <summary>设置 DocCheckState.set_DocumentManages(ICollection`1&lt;DocumentManage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.EventTimeGet">
            <summary>设置 DocCheckState.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.EventTimeSetInt64">
            <summary>设置 DocCheckState.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.IDGet">
            <summary>设置 DocCheckState.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.IDSetInt32">
            <summary>设置 DocCheckState.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.PostGet">
            <summary>设置 DocCheckState.get_Post() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.PostSetString">
            <summary>设置 DocCheckState.set_Post(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.UserNameGet">
            <summary>设置 DocCheckState.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.UserNameSetString">
            <summary>设置 DocCheckState.set_UserName(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocCheckState.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.AllInstances.CheckStateGet">
            <summary>设置 DocCheckState.get_CheckState() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.AllInstances.CheckStateSetBoolean">
            <summary>设置 DocCheckState.set_CheckState(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.AllInstances.CheckTimeGet">
            <summary>设置 DocCheckState.get_CheckTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.AllInstances.CheckTimeSetNullableOfDateTime">
            <summary>设置 DocCheckState.set_CheckTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.AllInstances.DocumentManagesGet">
            <summary>设置 DocCheckState.get_DocumentManages() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.AllInstances.DocumentManagesSetICollectionOfDocumentManage">
            <summary>设置 DocCheckState.set_DocumentManages(ICollection`1&lt;DocumentManage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.AllInstances.EventTimeGet">
            <summary>设置 DocCheckState.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.AllInstances.EventTimeSetInt64">
            <summary>设置 DocCheckState.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.AllInstances.IDGet">
            <summary>设置 DocCheckState.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.AllInstances.IDSetInt32">
            <summary>设置 DocCheckState.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.AllInstances.PostGet">
            <summary>设置 DocCheckState.get_Post() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.AllInstances.PostSetString">
            <summary>设置 DocCheckState.set_Post(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.AllInstances.UserNameGet">
            <summary>设置 DocCheckState.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocCheckState.AllInstances.UserNameSetString">
            <summary>设置 DocCheckState.set_UserName(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocComent">
            <summary>BCP.Domain.Edmx.DocComent 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocComent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocComent.#ctor(BCP.Domain.Edmx.DocComent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocComent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocComent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.Constructor">
            <summary>设置 DocComent.DocComent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.DocLocationGet">
            <summary>设置 DocComent.get_DocLocation() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.DocLocationIDGet">
            <summary>设置 DocComent.get_DocLocationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.DocLocationIDSetInt32">
            <summary>设置 DocComent.set_DocLocationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.DocLocationSetDocLocation">
            <summary>设置 DocComent.set_DocLocation(DocLocation value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.DocSenderGet">
            <summary>设置 DocComent.get_DocSender() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.DocSenderIdGet">
            <summary>设置 DocComent.get_DocSenderId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.DocSenderIdSetInt32">
            <summary>设置 DocComent.set_DocSenderId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.DocSenderSetDocSender">
            <summary>设置 DocComent.set_DocSender(DocSender value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.EventTimeGet">
            <summary>设置 DocComent.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.EventTimeSetInt64">
            <summary>设置 DocComent.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.IdGet">
            <summary>设置 DocComent.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.IdSetInt32">
            <summary>设置 DocComent.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.RemarkGet">
            <summary>设置 DocComent.get_Remark() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.RemarkSetString">
            <summary>设置 DocComent.set_Remark(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.RemarkTimeGet">
            <summary>设置 DocComent.get_RemarkTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.RemarkTimeSetDateTime">
            <summary>设置 DocComent.set_RemarkTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocComent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.AllInstances.DocLocationGet">
            <summary>设置 DocComent.get_DocLocation() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.AllInstances.DocLocationIDGet">
            <summary>设置 DocComent.get_DocLocationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.AllInstances.DocLocationIDSetInt32">
            <summary>设置 DocComent.set_DocLocationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.AllInstances.DocLocationSetDocLocation">
            <summary>设置 DocComent.set_DocLocation(DocLocation value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.AllInstances.DocSenderGet">
            <summary>设置 DocComent.get_DocSender() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.AllInstances.DocSenderIdGet">
            <summary>设置 DocComent.get_DocSenderId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.AllInstances.DocSenderIdSetInt32">
            <summary>设置 DocComent.set_DocSenderId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.AllInstances.DocSenderSetDocSender">
            <summary>设置 DocComent.set_DocSender(DocSender value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.AllInstances.EventTimeGet">
            <summary>设置 DocComent.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.AllInstances.EventTimeSetInt64">
            <summary>设置 DocComent.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.AllInstances.IdGet">
            <summary>设置 DocComent.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.AllInstances.IdSetInt32">
            <summary>设置 DocComent.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.AllInstances.RemarkGet">
            <summary>设置 DocComent.get_Remark() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.AllInstances.RemarkSetString">
            <summary>设置 DocComent.set_Remark(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.AllInstances.RemarkTimeGet">
            <summary>设置 DocComent.get_RemarkTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocComent.AllInstances.RemarkTimeSetDateTime">
            <summary>设置 DocComent.set_RemarkTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocLocation">
            <summary>BCP.Domain.Edmx.DocLocation 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocLocation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocLocation.#ctor(BCP.Domain.Edmx.DocLocation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocLocation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocLocation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.Constructor">
            <summary>设置 DocLocation.DocLocation() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocComentsGet">
            <summary>设置 DocLocation.get_DocComents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocComentsSetICollectionOfDocComent">
            <summary>设置 DocLocation.set_DocComents(ICollection`1&lt;DocComent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocLocation1Get">
            <summary>设置 DocLocation.get_DocLocation1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocLocation1SetDocLocation">
            <summary>设置 DocLocation.set_DocLocation1(DocLocation value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocLocationIDGet">
            <summary>设置 DocLocation.get_DocLocationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocLocationIDSetNullableOfInt32">
            <summary>设置 DocLocation.set_DocLocationID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocLocations1Get">
            <summary>设置 DocLocation.get_DocLocations1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocLocations1SetICollectionOfDocLocation">
            <summary>设置 DocLocation.set_DocLocations1(ICollection`1&lt;DocLocation&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocReaderGet">
            <summary>设置 DocLocation.get_DocReader() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocReaderIdGet">
            <summary>设置 DocLocation.get_DocReaderId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocReaderIdSetInt32">
            <summary>设置 DocLocation.set_DocReaderId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocReaderSetDocReader">
            <summary>设置 DocLocation.set_DocReader(DocReader value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocSenderGet">
            <summary>设置 DocLocation.get_DocSender() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocSenderIdGet">
            <summary>设置 DocLocation.get_DocSenderId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocSenderIdSetNullableOfInt32">
            <summary>设置 DocLocation.set_DocSenderId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocSenderSetDocSender">
            <summary>设置 DocLocation.set_DocSender(DocSender value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocumentManageGet">
            <summary>设置 DocLocation.get_DocumentManage() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocumentManageIDGet">
            <summary>设置 DocLocation.get_DocumentManageID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocumentManageIDSetNullableOfInt32">
            <summary>设置 DocLocation.set_DocumentManageID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.DocumentManageSetDocumentManage">
            <summary>设置 DocLocation.set_DocumentManage(DocumentManage value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.EventTimeGet">
            <summary>设置 DocLocation.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.EventTimeSetInt64">
            <summary>设置 DocLocation.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.IDGet">
            <summary>设置 DocLocation.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.IDSetInt32">
            <summary>设置 DocLocation.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.IsRuleTransactionGet">
            <summary>设置 DocLocation.get_IsRuleTransaction() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.IsRuleTransactionSetBoolean">
            <summary>设置 DocLocation.set_IsRuleTransaction(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.VisualScopeGet">
            <summary>设置 DocLocation.get_VisualScope() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.VisualScopeSetString">
            <summary>设置 DocLocation.set_VisualScope(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocComentsGet">
            <summary>设置 DocLocation.get_DocComents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocComentsSetICollectionOfDocComent">
            <summary>设置 DocLocation.set_DocComents(ICollection`1&lt;DocComent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocLocation1Get">
            <summary>设置 DocLocation.get_DocLocation1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocLocation1SetDocLocation">
            <summary>设置 DocLocation.set_DocLocation1(DocLocation value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocLocationIDGet">
            <summary>设置 DocLocation.get_DocLocationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocLocationIDSetNullableOfInt32">
            <summary>设置 DocLocation.set_DocLocationID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocLocations1Get">
            <summary>设置 DocLocation.get_DocLocations1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocLocations1SetICollectionOfDocLocation">
            <summary>设置 DocLocation.set_DocLocations1(ICollection`1&lt;DocLocation&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocReaderGet">
            <summary>设置 DocLocation.get_DocReader() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocReaderIdGet">
            <summary>设置 DocLocation.get_DocReaderId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocReaderIdSetInt32">
            <summary>设置 DocLocation.set_DocReaderId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocReaderSetDocReader">
            <summary>设置 DocLocation.set_DocReader(DocReader value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocSenderGet">
            <summary>设置 DocLocation.get_DocSender() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocSenderIdGet">
            <summary>设置 DocLocation.get_DocSenderId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocSenderIdSetNullableOfInt32">
            <summary>设置 DocLocation.set_DocSenderId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocSenderSetDocSender">
            <summary>设置 DocLocation.set_DocSender(DocSender value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocumentManageGet">
            <summary>设置 DocLocation.get_DocumentManage() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocumentManageIDGet">
            <summary>设置 DocLocation.get_DocumentManageID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocumentManageIDSetNullableOfInt32">
            <summary>设置 DocLocation.set_DocumentManageID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.DocumentManageSetDocumentManage">
            <summary>设置 DocLocation.set_DocumentManage(DocumentManage value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.EventTimeGet">
            <summary>设置 DocLocation.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.EventTimeSetInt64">
            <summary>设置 DocLocation.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.IDGet">
            <summary>设置 DocLocation.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.IDSetInt32">
            <summary>设置 DocLocation.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.IsRuleTransactionGet">
            <summary>设置 DocLocation.get_IsRuleTransaction() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.IsRuleTransactionSetBoolean">
            <summary>设置 DocLocation.set_IsRuleTransaction(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.VisualScopeGet">
            <summary>设置 DocLocation.get_VisualScope() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocLocation.AllInstances.VisualScopeSetString">
            <summary>设置 DocLocation.set_VisualScope(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocManageState">
            <summary>BCP.Domain.Edmx.DocManageState 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocManageState.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocManageState.#ctor(BCP.Domain.Edmx.DocManageState)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocManageState.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocManageState.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.Constructor">
            <summary>设置 DocManageState.DocManageState() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.DStateGet">
            <summary>设置 DocManageState.get_DState() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.DStateNameGet">
            <summary>设置 DocManageState.get_DStateName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.DStateNameSetString">
            <summary>设置 DocManageState.set_DStateName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.DStateSetString">
            <summary>设置 DocManageState.set_DState(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.DocManageState1Get">
            <summary>设置 DocManageState.get_DocManageState1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.DocManageState1SetDocManageState">
            <summary>设置 DocManageState.set_DocManageState1(DocManageState value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.DocManageStateIDGet">
            <summary>设置 DocManageState.get_DocManageStateID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.DocManageStateIDSetNullableOfInt32">
            <summary>设置 DocManageState.set_DocManageStateID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.DocManageStatesGet">
            <summary>设置 DocManageState.get_DocManageStates() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.DocManageStatesSetICollectionOfDocManageState">
            <summary>设置 DocManageState.set_DocManageStates(ICollection`1&lt;DocManageState&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.DocumentManagesGet">
            <summary>设置 DocManageState.get_DocumentManages() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.DocumentManagesSetICollectionOfDocumentManage">
            <summary>设置 DocManageState.set_DocumentManages(ICollection`1&lt;DocumentManage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.EventTimeGet">
            <summary>设置 DocManageState.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.EventTimeSetInt64">
            <summary>设置 DocManageState.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.IDGet">
            <summary>设置 DocManageState.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.IDSetInt32">
            <summary>设置 DocManageState.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocManageState.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.AllInstances.DStateGet">
            <summary>设置 DocManageState.get_DState() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.AllInstances.DStateNameGet">
            <summary>设置 DocManageState.get_DStateName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.AllInstances.DStateNameSetString">
            <summary>设置 DocManageState.set_DStateName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.AllInstances.DStateSetString">
            <summary>设置 DocManageState.set_DState(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.AllInstances.DocManageState1Get">
            <summary>设置 DocManageState.get_DocManageState1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.AllInstances.DocManageState1SetDocManageState">
            <summary>设置 DocManageState.set_DocManageState1(DocManageState value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.AllInstances.DocManageStateIDGet">
            <summary>设置 DocManageState.get_DocManageStateID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.AllInstances.DocManageStateIDSetNullableOfInt32">
            <summary>设置 DocManageState.set_DocManageStateID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.AllInstances.DocManageStatesGet">
            <summary>设置 DocManageState.get_DocManageStates() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.AllInstances.DocManageStatesSetICollectionOfDocManageState">
            <summary>设置 DocManageState.set_DocManageStates(ICollection`1&lt;DocManageState&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.AllInstances.DocumentManagesGet">
            <summary>设置 DocManageState.get_DocumentManages() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.AllInstances.DocumentManagesSetICollectionOfDocumentManage">
            <summary>设置 DocManageState.set_DocumentManages(ICollection`1&lt;DocumentManage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.AllInstances.EventTimeGet">
            <summary>设置 DocManageState.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.AllInstances.EventTimeSetInt64">
            <summary>设置 DocManageState.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.AllInstances.IDGet">
            <summary>设置 DocManageState.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocManageState.AllInstances.IDSetInt32">
            <summary>设置 DocManageState.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocReader">
            <summary>BCP.Domain.Edmx.DocReader 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocReader.#ctor(BCP.Domain.Edmx.DocReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.Constructor">
            <summary>设置 DocReader.DocReader() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.DocLocationsGet">
            <summary>设置 DocReader.get_DocLocations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.DocLocationsSetICollectionOfDocLocation">
            <summary>设置 DocReader.set_DocLocations(ICollection`1&lt;DocLocation&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.EventTimeGet">
            <summary>设置 DocReader.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.EventTimeSetInt64">
            <summary>设置 DocReader.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.IdGet">
            <summary>设置 DocReader.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.IdSetInt32">
            <summary>设置 DocReader.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.OrganizationGet">
            <summary>设置 DocReader.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.OrganizationIDGet">
            <summary>设置 DocReader.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.OrganizationIDSetNullableOfInt32">
            <summary>设置 DocReader.set_OrganizationID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.OrganizationSetOrganization">
            <summary>设置 DocReader.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.PostGet">
            <summary>设置 DocReader.get_Post() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.PostIDGet">
            <summary>设置 DocReader.get_PostID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.PostIDSetNullableOfInt32">
            <summary>设置 DocReader.set_PostID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.PostSetPost">
            <summary>设置 DocReader.set_Post(Post value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.UserGet">
            <summary>设置 DocReader.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.UserIDGet">
            <summary>设置 DocReader.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.UserIDSetNullableOfInt32">
            <summary>设置 DocReader.set_UserID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.UserSetUser">
            <summary>设置 DocReader.set_User(User value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.WorkSpaceGet">
            <summary>设置 DocReader.get_WorkSpace() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.WorkSpaceIDGet">
            <summary>设置 DocReader.get_WorkSpaceID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.WorkSpaceIDSetNullableOfInt32">
            <summary>设置 DocReader.set_WorkSpaceID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.WorkSpaceSetWorkSpace">
            <summary>设置 DocReader.set_WorkSpace(WorkSpace value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.DocLocationsGet">
            <summary>设置 DocReader.get_DocLocations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.DocLocationsSetICollectionOfDocLocation">
            <summary>设置 DocReader.set_DocLocations(ICollection`1&lt;DocLocation&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.EventTimeGet">
            <summary>设置 DocReader.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.EventTimeSetInt64">
            <summary>设置 DocReader.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.IdGet">
            <summary>设置 DocReader.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.IdSetInt32">
            <summary>设置 DocReader.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.OrganizationGet">
            <summary>设置 DocReader.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.OrganizationIDGet">
            <summary>设置 DocReader.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.OrganizationIDSetNullableOfInt32">
            <summary>设置 DocReader.set_OrganizationID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.OrganizationSetOrganization">
            <summary>设置 DocReader.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.PostGet">
            <summary>设置 DocReader.get_Post() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.PostIDGet">
            <summary>设置 DocReader.get_PostID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.PostIDSetNullableOfInt32">
            <summary>设置 DocReader.set_PostID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.PostSetPost">
            <summary>设置 DocReader.set_Post(Post value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.UserGet">
            <summary>设置 DocReader.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.UserIDGet">
            <summary>设置 DocReader.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.UserIDSetNullableOfInt32">
            <summary>设置 DocReader.set_UserID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.UserSetUser">
            <summary>设置 DocReader.set_User(User value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.WorkSpaceGet">
            <summary>设置 DocReader.get_WorkSpace() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.WorkSpaceIDGet">
            <summary>设置 DocReader.get_WorkSpaceID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.WorkSpaceIDSetNullableOfInt32">
            <summary>设置 DocReader.set_WorkSpaceID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocReader.AllInstances.WorkSpaceSetWorkSpace">
            <summary>设置 DocReader.set_WorkSpace(WorkSpace value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocSender">
            <summary>BCP.Domain.Edmx.DocSender 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocSender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocSender.#ctor(BCP.Domain.Edmx.DocSender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocSender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocSender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.Constructor">
            <summary>设置 DocSender.DocSender() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.DocComentsGet">
            <summary>设置 DocSender.get_DocComents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.DocComentsSetICollectionOfDocComent">
            <summary>设置 DocSender.set_DocComents(ICollection`1&lt;DocComent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.DocLocationsGet">
            <summary>设置 DocSender.get_DocLocations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.DocLocationsSetICollectionOfDocLocation">
            <summary>设置 DocSender.set_DocLocations(ICollection`1&lt;DocLocation&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.EventTimeGet">
            <summary>设置 DocSender.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.EventTimeSetInt64">
            <summary>设置 DocSender.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.IdGet">
            <summary>设置 DocSender.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.IdSetInt32">
            <summary>设置 DocSender.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.PostGet">
            <summary>设置 DocSender.get_Post() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.PostIDGet">
            <summary>设置 DocSender.get_PostID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.PostIDSetNullableOfInt32">
            <summary>设置 DocSender.set_PostID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.PostSetPost">
            <summary>设置 DocSender.set_Post(Post value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.UserGet">
            <summary>设置 DocSender.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.UserIDGet">
            <summary>设置 DocSender.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.UserIDSetNullableOfInt32">
            <summary>设置 DocSender.set_UserID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.UserSetUser">
            <summary>设置 DocSender.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocSender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.AllInstances.DocComentsGet">
            <summary>设置 DocSender.get_DocComents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.AllInstances.DocComentsSetICollectionOfDocComent">
            <summary>设置 DocSender.set_DocComents(ICollection`1&lt;DocComent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.AllInstances.DocLocationsGet">
            <summary>设置 DocSender.get_DocLocations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.AllInstances.DocLocationsSetICollectionOfDocLocation">
            <summary>设置 DocSender.set_DocLocations(ICollection`1&lt;DocLocation&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.AllInstances.EventTimeGet">
            <summary>设置 DocSender.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.AllInstances.EventTimeSetInt64">
            <summary>设置 DocSender.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.AllInstances.IdGet">
            <summary>设置 DocSender.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.AllInstances.IdSetInt32">
            <summary>设置 DocSender.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.AllInstances.PostGet">
            <summary>设置 DocSender.get_Post() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.AllInstances.PostIDGet">
            <summary>设置 DocSender.get_PostID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.AllInstances.PostIDSetNullableOfInt32">
            <summary>设置 DocSender.set_PostID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.AllInstances.PostSetPost">
            <summary>设置 DocSender.set_Post(Post value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.AllInstances.UserGet">
            <summary>设置 DocSender.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.AllInstances.UserIDGet">
            <summary>设置 DocSender.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.AllInstances.UserIDSetNullableOfInt32">
            <summary>设置 DocSender.set_UserID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocSender.AllInstances.UserSetUser">
            <summary>设置 DocSender.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocType">
            <summary>BCP.Domain.Edmx.DocType 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocType.#ctor(BCP.Domain.Edmx.DocType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.Constructor">
            <summary>设置 DocType.DocType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.DocumentManageGet">
            <summary>设置 DocType.get_DocumentManage() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.DocumentManageIDGet">
            <summary>设置 DocType.get_DocumentManageID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.DocumentManageIDSetNullableOfInt32">
            <summary>设置 DocType.set_DocumentManageID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.DocumentManageSetDocumentManage">
            <summary>设置 DocType.set_DocumentManage(DocumentManage value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.DocumentTypeGet">
            <summary>设置 DocType.get_DocumentType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.DocumentTypeIDGet">
            <summary>设置 DocType.get_DocumentTypeID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.DocumentTypeIDSetNullableOfInt32">
            <summary>设置 DocType.set_DocumentTypeID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.DocumentTypeSetDocumentType">
            <summary>设置 DocType.set_DocumentType(DocumentType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.IdGet">
            <summary>设置 DocType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.IdSetInt32">
            <summary>设置 DocType.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.AllInstances.DocumentManageGet">
            <summary>设置 DocType.get_DocumentManage() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.AllInstances.DocumentManageIDGet">
            <summary>设置 DocType.get_DocumentManageID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.AllInstances.DocumentManageIDSetNullableOfInt32">
            <summary>设置 DocType.set_DocumentManageID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.AllInstances.DocumentManageSetDocumentManage">
            <summary>设置 DocType.set_DocumentManage(DocumentManage value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.AllInstances.DocumentTypeGet">
            <summary>设置 DocType.get_DocumentType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.AllInstances.DocumentTypeIDGet">
            <summary>设置 DocType.get_DocumentTypeID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.AllInstances.DocumentTypeIDSetNullableOfInt32">
            <summary>设置 DocType.set_DocumentTypeID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.AllInstances.DocumentTypeSetDocumentType">
            <summary>设置 DocType.set_DocumentType(DocumentType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.AllInstances.IdGet">
            <summary>设置 DocType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocType.AllInstances.IdSetInt32">
            <summary>设置 DocType.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocumentContent">
            <summary>BCP.Domain.Edmx.DocumentContent 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocumentContent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocumentContent.#ctor(BCP.Domain.Edmx.DocumentContent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocumentContent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocumentContent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.Constructor">
            <summary>设置 DocumentContent.DocumentContent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.ContentGet">
            <summary>设置 DocumentContent.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.ContentSetString">
            <summary>设置 DocumentContent.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.DocumentContent1Get">
            <summary>设置 DocumentContent.get_DocumentContent1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.DocumentContent1SetDocumentContent">
            <summary>设置 DocumentContent.set_DocumentContent1(DocumentContent value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.DocumentContentIDGet">
            <summary>设置 DocumentContent.get_DocumentContentID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.DocumentContentIDSetNullableOfInt32">
            <summary>设置 DocumentContent.set_DocumentContentID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.DocumentContentsGet">
            <summary>设置 DocumentContent.get_DocumentContents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.DocumentContentsSetICollectionOfDocumentContent">
            <summary>设置 DocumentContent.set_DocumentContents(ICollection`1&lt;DocumentContent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.DocumentManageGet">
            <summary>设置 DocumentContent.get_DocumentManage() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.DocumentManageIDGet">
            <summary>设置 DocumentContent.get_DocumentManageID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.DocumentManageIDSetNullableOfInt32">
            <summary>设置 DocumentContent.set_DocumentManageID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.DocumentManageSetDocumentManage">
            <summary>设置 DocumentContent.set_DocumentManage(DocumentManage value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.EventTimeGet">
            <summary>设置 DocumentContent.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.EventTimeSetInt64">
            <summary>设置 DocumentContent.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.IDGet">
            <summary>设置 DocumentContent.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.IDSetInt32">
            <summary>设置 DocumentContent.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.MessageGet">
            <summary>设置 DocumentContent.get_Message() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.MessageSetString">
            <summary>设置 DocumentContent.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.workTaskGet">
            <summary>设置 DocumentContent.get_workTask() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.workTaskIdGet">
            <summary>设置 DocumentContent.get_workTaskId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.workTaskIdSetNullableOfInt32">
            <summary>设置 DocumentContent.set_workTaskId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.workTaskSetworkTask">
            <summary>设置 DocumentContent.set_workTask(workTask value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.ContentGet">
            <summary>设置 DocumentContent.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.ContentSetString">
            <summary>设置 DocumentContent.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.DocumentContent1Get">
            <summary>设置 DocumentContent.get_DocumentContent1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.DocumentContent1SetDocumentContent">
            <summary>设置 DocumentContent.set_DocumentContent1(DocumentContent value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.DocumentContentIDGet">
            <summary>设置 DocumentContent.get_DocumentContentID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.DocumentContentIDSetNullableOfInt32">
            <summary>设置 DocumentContent.set_DocumentContentID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.DocumentContentsGet">
            <summary>设置 DocumentContent.get_DocumentContents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.DocumentContentsSetICollectionOfDocumentContent">
            <summary>设置 DocumentContent.set_DocumentContents(ICollection`1&lt;DocumentContent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.DocumentManageGet">
            <summary>设置 DocumentContent.get_DocumentManage() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.DocumentManageIDGet">
            <summary>设置 DocumentContent.get_DocumentManageID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.DocumentManageIDSetNullableOfInt32">
            <summary>设置 DocumentContent.set_DocumentManageID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.DocumentManageSetDocumentManage">
            <summary>设置 DocumentContent.set_DocumentManage(DocumentManage value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.EventTimeGet">
            <summary>设置 DocumentContent.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.EventTimeSetInt64">
            <summary>设置 DocumentContent.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.IDGet">
            <summary>设置 DocumentContent.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.IDSetInt32">
            <summary>设置 DocumentContent.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.MessageGet">
            <summary>设置 DocumentContent.get_Message() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.MessageSetString">
            <summary>设置 DocumentContent.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.workTaskGet">
            <summary>设置 DocumentContent.get_workTask() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.workTaskIdGet">
            <summary>设置 DocumentContent.get_workTaskId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.workTaskIdSetNullableOfInt32">
            <summary>设置 DocumentContent.set_workTaskId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentContent.AllInstances.workTaskSetworkTask">
            <summary>设置 DocumentContent.set_workTask(workTask value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocumentManage">
            <summary>BCP.Domain.Edmx.DocumentManage 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocumentManage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocumentManage.#ctor(BCP.Domain.Edmx.DocumentManage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocumentManage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocumentManage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.Constructor">
            <summary>设置 DocumentManage.DocumentManage() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.ContentGet">
            <summary>设置 DocumentManage.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.ContentSetString">
            <summary>设置 DocumentManage.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.CustomTabDatasGet">
            <summary>设置 DocumentManage.get_CustomTabDatas() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.CustomTabDatasSetICollectionOfCustomTabData">
            <summary>设置 DocumentManage.set_CustomTabDatas(ICollection`1&lt;CustomTabData&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.DocCheckStateIDGet">
            <summary>设置 DocumentManage.get_DocCheckStateID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.DocCheckStateIDSetNullableOfInt32">
            <summary>设置 DocumentManage.set_DocCheckStateID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.DocHanderStateGet">
            <summary>设置 DocumentManage.get_DocHanderState() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.DocHanderStateSetDocCheckState">
            <summary>设置 DocumentManage.set_DocHanderState(DocCheckState value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.DocLocationsGet">
            <summary>设置 DocumentManage.get_DocLocations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.DocLocationsSetICollectionOfDocLocation">
            <summary>设置 DocumentManage.set_DocLocations(ICollection`1&lt;DocLocation&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.DocManageStateGet">
            <summary>设置 DocumentManage.get_DocManageState() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.DocManageStateIDGet">
            <summary>设置 DocumentManage.get_DocManageStateID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.DocManageStateIDSetNullableOfInt32">
            <summary>设置 DocumentManage.set_DocManageStateID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.DocManageStateSetDocManageState">
            <summary>设置 DocumentManage.set_DocManageState(DocManageState value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.DocTypesGet">
            <summary>设置 DocumentManage.get_DocTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.DocTypesSetICollectionOfDocType">
            <summary>设置 DocumentManage.set_DocTypes(ICollection`1&lt;DocType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.DoctypeGet">
            <summary>设置 DocumentManage.get_Doctype() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.DoctypeSetString">
            <summary>设置 DocumentManage.set_Doctype(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.DocumentContentsGet">
            <summary>设置 DocumentManage.get_DocumentContents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.DocumentContentsSetICollectionOfDocumentContent">
            <summary>设置 DocumentManage.set_DocumentContents(ICollection`1&lt;DocumentContent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.EventTimeGet">
            <summary>设置 DocumentManage.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.EventTimeSetInt64">
            <summary>设置 DocumentManage.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.FileNumberGet">
            <summary>设置 DocumentManage.get_FileNumber() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.FileNumberSetString">
            <summary>设置 DocumentManage.set_FileNumber(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.IDGet">
            <summary>设置 DocumentManage.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.IDSetInt32">
            <summary>设置 DocumentManage.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.NameGet">
            <summary>设置 DocumentManage.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.NameSetString">
            <summary>设置 DocumentManage.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.SecurityinfoGet">
            <summary>设置 DocumentManage.get_Securityinfo() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.SecurityinfoIDGet">
            <summary>设置 DocumentManage.get_SecurityinfoID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.SecurityinfoIDSetNullableOfInt32">
            <summary>设置 DocumentManage.set_SecurityinfoID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.SecurityinfoSetSecurityinfo">
            <summary>设置 DocumentManage.set_Securityinfo(Securityinfo value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.URLGet">
            <summary>设置 DocumentManage.get_URL() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.URLSetString">
            <summary>设置 DocumentManage.set_URL(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.WorkSpaceBaseTypeGet">
            <summary>设置 DocumentManage.get_WorkSpaceBaseType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.WorkSpaceBaseTypeIdGet">
            <summary>设置 DocumentManage.get_WorkSpaceBaseTypeId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.WorkSpaceBaseTypeIdSetNullableOfInt32">
            <summary>设置 DocumentManage.set_WorkSpaceBaseTypeId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.WorkSpaceBaseTypeSetWorkSpaceBaseType">
            <summary>设置 DocumentManage.set_WorkSpaceBaseType(WorkSpaceBaseType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.workTasksGet">
            <summary>设置 DocumentManage.get_workTasks() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.workTasksSetICollectionOfworkTask">
            <summary>设置 DocumentManage.set_workTasks(ICollection`1&lt;workTask&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.ContentGet">
            <summary>设置 DocumentManage.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.ContentSetString">
            <summary>设置 DocumentManage.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.CustomTabDatasGet">
            <summary>设置 DocumentManage.get_CustomTabDatas() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.CustomTabDatasSetICollectionOfCustomTabData">
            <summary>设置 DocumentManage.set_CustomTabDatas(ICollection`1&lt;CustomTabData&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.DocCheckStateIDGet">
            <summary>设置 DocumentManage.get_DocCheckStateID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.DocCheckStateIDSetNullableOfInt32">
            <summary>设置 DocumentManage.set_DocCheckStateID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.DocHanderStateGet">
            <summary>设置 DocumentManage.get_DocHanderState() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.DocHanderStateSetDocCheckState">
            <summary>设置 DocumentManage.set_DocHanderState(DocCheckState value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.DocLocationsGet">
            <summary>设置 DocumentManage.get_DocLocations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.DocLocationsSetICollectionOfDocLocation">
            <summary>设置 DocumentManage.set_DocLocations(ICollection`1&lt;DocLocation&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.DocManageStateGet">
            <summary>设置 DocumentManage.get_DocManageState() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.DocManageStateIDGet">
            <summary>设置 DocumentManage.get_DocManageStateID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.DocManageStateIDSetNullableOfInt32">
            <summary>设置 DocumentManage.set_DocManageStateID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.DocManageStateSetDocManageState">
            <summary>设置 DocumentManage.set_DocManageState(DocManageState value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.DocTypesGet">
            <summary>设置 DocumentManage.get_DocTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.DocTypesSetICollectionOfDocType">
            <summary>设置 DocumentManage.set_DocTypes(ICollection`1&lt;DocType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.DoctypeGet">
            <summary>设置 DocumentManage.get_Doctype() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.DoctypeSetString">
            <summary>设置 DocumentManage.set_Doctype(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.DocumentContentsGet">
            <summary>设置 DocumentManage.get_DocumentContents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.DocumentContentsSetICollectionOfDocumentContent">
            <summary>设置 DocumentManage.set_DocumentContents(ICollection`1&lt;DocumentContent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.EventTimeGet">
            <summary>设置 DocumentManage.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.EventTimeSetInt64">
            <summary>设置 DocumentManage.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.FileNumberGet">
            <summary>设置 DocumentManage.get_FileNumber() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.FileNumberSetString">
            <summary>设置 DocumentManage.set_FileNumber(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.IDGet">
            <summary>设置 DocumentManage.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.IDSetInt32">
            <summary>设置 DocumentManage.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.NameGet">
            <summary>设置 DocumentManage.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.NameSetString">
            <summary>设置 DocumentManage.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.SecurityinfoGet">
            <summary>设置 DocumentManage.get_Securityinfo() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.SecurityinfoIDGet">
            <summary>设置 DocumentManage.get_SecurityinfoID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.SecurityinfoIDSetNullableOfInt32">
            <summary>设置 DocumentManage.set_SecurityinfoID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.SecurityinfoSetSecurityinfo">
            <summary>设置 DocumentManage.set_Securityinfo(Securityinfo value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.URLGet">
            <summary>设置 DocumentManage.get_URL() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.URLSetString">
            <summary>设置 DocumentManage.set_URL(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.WorkSpaceBaseTypeGet">
            <summary>设置 DocumentManage.get_WorkSpaceBaseType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.WorkSpaceBaseTypeIdGet">
            <summary>设置 DocumentManage.get_WorkSpaceBaseTypeId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.WorkSpaceBaseTypeIdSetNullableOfInt32">
            <summary>设置 DocumentManage.set_WorkSpaceBaseTypeId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.WorkSpaceBaseTypeSetWorkSpaceBaseType">
            <summary>设置 DocumentManage.set_WorkSpaceBaseType(WorkSpaceBaseType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.workTasksGet">
            <summary>设置 DocumentManage.get_workTasks() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentManage.AllInstances.workTasksSetICollectionOfworkTask">
            <summary>设置 DocumentManage.set_workTasks(ICollection`1&lt;workTask&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocumentType">
            <summary>BCP.Domain.Edmx.DocumentType 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocumentType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocumentType.#ctor(BCP.Domain.Edmx.DocumentType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocumentType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimDocumentType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.Constructor">
            <summary>设置 DocumentType.DocumentType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.DocTypesGet">
            <summary>设置 DocumentType.get_DocTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.DocTypesSetICollectionOfDocType">
            <summary>设置 DocumentType.set_DocTypes(ICollection`1&lt;DocType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.DocumentType1Get">
            <summary>设置 DocumentType.get_DocumentType1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.DocumentType1SetDocumentType">
            <summary>设置 DocumentType.set_DocumentType1(DocumentType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.DocumentTypeIDGet">
            <summary>设置 DocumentType.get_DocumentTypeID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.DocumentTypeIDSetNullableOfInt32">
            <summary>设置 DocumentType.set_DocumentTypeID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.DocumentTypesGet">
            <summary>设置 DocumentType.get_DocumentTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.DocumentTypesSetICollectionOfDocumentType">
            <summary>设置 DocumentType.set_DocumentTypes(ICollection`1&lt;DocumentType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.EventTimeGet">
            <summary>设置 DocumentType.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.EventTimeSetInt64">
            <summary>设置 DocumentType.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.IDGet">
            <summary>设置 DocumentType.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.IDSetInt32">
            <summary>设置 DocumentType.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.NoteGet">
            <summary>设置 DocumentType.get_Note() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.NoteSetString">
            <summary>设置 DocumentType.set_Note(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.OrigIdGet">
            <summary>设置 DocumentType.get_OrigId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.OrigIdSetNullableOfInt32">
            <summary>设置 DocumentType.set_OrigId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.TypeGet">
            <summary>设置 DocumentType.get_Type() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.TypeNameGet">
            <summary>设置 DocumentType.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.TypeNameSetString">
            <summary>设置 DocumentType.set_TypeName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.TypeSetString">
            <summary>设置 DocumentType.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.DocTypesGet">
            <summary>设置 DocumentType.get_DocTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.DocTypesSetICollectionOfDocType">
            <summary>设置 DocumentType.set_DocTypes(ICollection`1&lt;DocType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.DocumentType1Get">
            <summary>设置 DocumentType.get_DocumentType1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.DocumentType1SetDocumentType">
            <summary>设置 DocumentType.set_DocumentType1(DocumentType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.DocumentTypeIDGet">
            <summary>设置 DocumentType.get_DocumentTypeID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.DocumentTypeIDSetNullableOfInt32">
            <summary>设置 DocumentType.set_DocumentTypeID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.DocumentTypesGet">
            <summary>设置 DocumentType.get_DocumentTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.DocumentTypesSetICollectionOfDocumentType">
            <summary>设置 DocumentType.set_DocumentTypes(ICollection`1&lt;DocumentType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.EventTimeGet">
            <summary>设置 DocumentType.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.EventTimeSetInt64">
            <summary>设置 DocumentType.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.IDGet">
            <summary>设置 DocumentType.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.IDSetInt32">
            <summary>设置 DocumentType.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.NoteGet">
            <summary>设置 DocumentType.get_Note() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.NoteSetString">
            <summary>设置 DocumentType.set_Note(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.OrigIdGet">
            <summary>设置 DocumentType.get_OrigId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.OrigIdSetNullableOfInt32">
            <summary>设置 DocumentType.set_OrigId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.TypeGet">
            <summary>设置 DocumentType.get_Type() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.TypeNameGet">
            <summary>设置 DocumentType.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.TypeNameSetString">
            <summary>设置 DocumentType.set_TypeName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimDocumentType.AllInstances.TypeSetString">
            <summary>设置 DocumentType.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimEmployee">
            <summary>BCP.Domain.Edmx.Employee 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimEmployee.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimEmployee.#ctor(BCP.Domain.Edmx.Employee)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimEmployee.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimEmployee.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.Constructor">
            <summary>设置 Employee.Employee() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.EmpCodeGet">
            <summary>设置 Employee.get_EmpCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.EmpCodeSetString">
            <summary>设置 Employee.set_EmpCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.EndTimeGet">
            <summary>设置 Employee.get_EndTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.EndTimeSetString">
            <summary>设置 Employee.set_EndTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.IdGet">
            <summary>设置 Employee.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.IdSetInt32">
            <summary>设置 Employee.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.IsvalidGet">
            <summary>设置 Employee.get_Isvalid() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.IsvalidSetString">
            <summary>设置 Employee.set_Isvalid(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.OrganizationGet">
            <summary>设置 Employee.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.OrganizationIDGet">
            <summary>设置 Employee.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.OrganizationIDSetNullableOfInt32">
            <summary>设置 Employee.set_OrganizationID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.OrganizationSetOrganization">
            <summary>设置 Employee.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.PositionGet">
            <summary>设置 Employee.get_Position() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.PositionIDGet">
            <summary>设置 Employee.get_PositionID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.PositionIDSetNullableOfInt32">
            <summary>设置 Employee.set_PositionID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.PositionSetPosition">
            <summary>设置 Employee.set_Position(Position value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.PostsGet">
            <summary>设置 Employee.get_Posts() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.PostsSetICollectionOfPost">
            <summary>设置 Employee.set_Posts(ICollection`1&lt;Post&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.StartTimeGet">
            <summary>设置 Employee.get_StartTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.StartTimeSetString">
            <summary>设置 Employee.set_StartTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.UserGet">
            <summary>设置 Employee.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.UserIDGet">
            <summary>设置 Employee.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.UserIDSetInt32">
            <summary>设置 Employee.set_UserID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.UserSetUser">
            <summary>设置 Employee.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.EmpCodeGet">
            <summary>设置 Employee.get_EmpCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.EmpCodeSetString">
            <summary>设置 Employee.set_EmpCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.EndTimeGet">
            <summary>设置 Employee.get_EndTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.EndTimeSetString">
            <summary>设置 Employee.set_EndTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.IdGet">
            <summary>设置 Employee.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.IdSetInt32">
            <summary>设置 Employee.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.IsvalidGet">
            <summary>设置 Employee.get_Isvalid() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.IsvalidSetString">
            <summary>设置 Employee.set_Isvalid(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.OrganizationGet">
            <summary>设置 Employee.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.OrganizationIDGet">
            <summary>设置 Employee.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.OrganizationIDSetNullableOfInt32">
            <summary>设置 Employee.set_OrganizationID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.OrganizationSetOrganization">
            <summary>设置 Employee.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.PositionGet">
            <summary>设置 Employee.get_Position() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.PositionIDGet">
            <summary>设置 Employee.get_PositionID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.PositionIDSetNullableOfInt32">
            <summary>设置 Employee.set_PositionID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.PositionSetPosition">
            <summary>设置 Employee.set_Position(Position value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.PostsGet">
            <summary>设置 Employee.get_Posts() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.PostsSetICollectionOfPost">
            <summary>设置 Employee.set_Posts(ICollection`1&lt;Post&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.StartTimeGet">
            <summary>设置 Employee.get_StartTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.StartTimeSetString">
            <summary>设置 Employee.set_StartTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.UserGet">
            <summary>设置 Employee.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.UserIDGet">
            <summary>设置 Employee.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.UserIDSetInt32">
            <summary>设置 Employee.set_UserID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimEmployee.AllInstances.UserSetUser">
            <summary>设置 Employee.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimGroup">
            <summary>BCP.Domain.Edmx.Group 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimGroup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimGroup.#ctor(BCP.Domain.Edmx.Group)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.CategoryGet">
            <summary>设置 Group.get_Category() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.CategorySetString">
            <summary>设置 Group.set_Category(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.Constructor">
            <summary>设置 Group.Group() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.CreatTimeGet">
            <summary>设置 Group.get_CreatTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.CreatTimeSetNullableOfDateTime">
            <summary>设置 Group.set_CreatTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.CreateUserIdGet">
            <summary>设置 Group.get_CreateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.CreateUserIdSetNullableOfInt32">
            <summary>设置 Group.set_CreateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.GroupMembersGet">
            <summary>设置 Group.get_GroupMembers() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.GroupMembersSetICollectionOfGroupMember">
            <summary>设置 Group.set_GroupMembers(ICollection`1&lt;GroupMember&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.GroupMessagersGet">
            <summary>设置 Group.get_GroupMessagers() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.GroupMessagersSetICollectionOfGroupMessager">
            <summary>设置 Group.set_GroupMessagers(ICollection`1&lt;GroupMessager&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.GroupNoGet">
            <summary>设置 Group.get_GroupNo() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.GroupNoSetString">
            <summary>设置 Group.set_GroupNo(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.IdGet">
            <summary>设置 Group.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.IdSetInt32">
            <summary>设置 Group.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.NameGet">
            <summary>设置 Group.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.NameSetString">
            <summary>设置 Group.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.NotesGet">
            <summary>设置 Group.get_Notes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.NotesSetString">
            <summary>设置 Group.set_Notes(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.StateGet">
            <summary>设置 Group.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.StateSetNullableOfInt16">
            <summary>设置 Group.set_State(Nullable`1&lt;Int16&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.UpdateTimeGet">
            <summary>设置 Group.get_UpdateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.UpdateTimeSetNullableOfDateTime">
            <summary>设置 Group.set_UpdateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.UpdateUserIdGet">
            <summary>设置 Group.get_UpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.UpdateUserIdSetNullableOfInt32">
            <summary>设置 Group.set_UpdateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.UserGet">
            <summary>设置 Group.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.UserIdGet">
            <summary>设置 Group.get_UserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.UserIdSetNullableOfInt32">
            <summary>设置 Group.set_UserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.UserSetUser">
            <summary>设置 Group.set_User(User value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.ValidattionPatternGet">
            <summary>设置 Group.get_ValidattionPattern() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.ValidattionPatternSetNullableOfInt32">
            <summary>设置 Group.set_ValidattionPattern(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.CategoryGet">
            <summary>设置 Group.get_Category() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.CategorySetString">
            <summary>设置 Group.set_Category(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.CreatTimeGet">
            <summary>设置 Group.get_CreatTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.CreatTimeSetNullableOfDateTime">
            <summary>设置 Group.set_CreatTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.CreateUserIdGet">
            <summary>设置 Group.get_CreateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.CreateUserIdSetNullableOfInt32">
            <summary>设置 Group.set_CreateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.GroupMembersGet">
            <summary>设置 Group.get_GroupMembers() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.GroupMembersSetICollectionOfGroupMember">
            <summary>设置 Group.set_GroupMembers(ICollection`1&lt;GroupMember&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.GroupMessagersGet">
            <summary>设置 Group.get_GroupMessagers() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.GroupMessagersSetICollectionOfGroupMessager">
            <summary>设置 Group.set_GroupMessagers(ICollection`1&lt;GroupMessager&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.GroupNoGet">
            <summary>设置 Group.get_GroupNo() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.GroupNoSetString">
            <summary>设置 Group.set_GroupNo(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.IdGet">
            <summary>设置 Group.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.IdSetInt32">
            <summary>设置 Group.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.NameGet">
            <summary>设置 Group.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.NameSetString">
            <summary>设置 Group.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.NotesGet">
            <summary>设置 Group.get_Notes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.NotesSetString">
            <summary>设置 Group.set_Notes(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.StateGet">
            <summary>设置 Group.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.StateSetNullableOfInt16">
            <summary>设置 Group.set_State(Nullable`1&lt;Int16&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.UpdateTimeGet">
            <summary>设置 Group.get_UpdateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.UpdateTimeSetNullableOfDateTime">
            <summary>设置 Group.set_UpdateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.UpdateUserIdGet">
            <summary>设置 Group.get_UpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.UpdateUserIdSetNullableOfInt32">
            <summary>设置 Group.set_UpdateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.UserGet">
            <summary>设置 Group.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.UserIdGet">
            <summary>设置 Group.get_UserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.UserIdSetNullableOfInt32">
            <summary>设置 Group.set_UserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.UserSetUser">
            <summary>设置 Group.set_User(User value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.ValidattionPatternGet">
            <summary>设置 Group.get_ValidattionPattern() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroup.AllInstances.ValidattionPatternSetNullableOfInt32">
            <summary>设置 Group.set_ValidattionPattern(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimGroupMember">
            <summary>BCP.Domain.Edmx.GroupMember 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimGroupMember.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimGroupMember.#ctor(BCP.Domain.Edmx.GroupMember)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimGroupMember.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimGroupMember.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.ApproveUserIdGet">
            <summary>设置 GroupMember.get_ApproveUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.ApproveUserIdSetNullableOfInt32">
            <summary>设置 GroupMember.set_ApproveUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.Constructor">
            <summary>设置 GroupMember.GroupMember() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.CreateTimeGet">
            <summary>设置 GroupMember.get_CreateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.CreateTimeSetNullableOfDateTime">
            <summary>设置 GroupMember.set_CreateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.CreateUserIdGet">
            <summary>设置 GroupMember.get_CreateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.CreateUserIdSetNullableOfInt32">
            <summary>设置 GroupMember.set_CreateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.GroupGet">
            <summary>设置 GroupMember.get_Group() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.GroupIdGet">
            <summary>设置 GroupMember.get_GroupId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.GroupIdSetNullableOfInt32">
            <summary>设置 GroupMember.set_GroupId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.GroupMessagersGet">
            <summary>设置 GroupMember.get_GroupMessagers() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.GroupMessagersSetICollectionOfGroupMessager">
            <summary>设置 GroupMember.set_GroupMessagers(ICollection`1&lt;GroupMessager&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.GroupRoleGet">
            <summary>设置 GroupMember.get_GroupRole() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.GroupRoleSetString">
            <summary>设置 GroupMember.set_GroupRole(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.GroupSetGroup">
            <summary>设置 GroupMember.set_Group(Group value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.IdGet">
            <summary>设置 GroupMember.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.IdSetInt32">
            <summary>设置 GroupMember.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.NameGet">
            <summary>设置 GroupMember.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.NameSetString">
            <summary>设置 GroupMember.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.NotesGet">
            <summary>设置 GroupMember.get_Notes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.NotesSetString">
            <summary>设置 GroupMember.set_Notes(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.ReferenceUserIdGet">
            <summary>设置 GroupMember.get_ReferenceUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.ReferenceUserIdSetNullableOfInt32">
            <summary>设置 GroupMember.set_ReferenceUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.StateGet">
            <summary>设置 GroupMember.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.StateSetNullableOfInt32">
            <summary>设置 GroupMember.set_State(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.UpdateTiimeGet">
            <summary>设置 GroupMember.get_UpdateTiime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.UpdateTiimeSetNullableOfDateTime">
            <summary>设置 GroupMember.set_UpdateTiime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.UpdateUserIdGet">
            <summary>设置 GroupMember.get_UpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.UpdateUserIdSetNullableOfInt32">
            <summary>设置 GroupMember.set_UpdateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.UserGet">
            <summary>设置 GroupMember.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.UserIdGet">
            <summary>设置 GroupMember.get_UserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.UserIdSetNullableOfInt32">
            <summary>设置 GroupMember.set_UserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.UserSetUser">
            <summary>设置 GroupMember.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.ApproveUserIdGet">
            <summary>设置 GroupMember.get_ApproveUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.ApproveUserIdSetNullableOfInt32">
            <summary>设置 GroupMember.set_ApproveUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.CreateTimeGet">
            <summary>设置 GroupMember.get_CreateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.CreateTimeSetNullableOfDateTime">
            <summary>设置 GroupMember.set_CreateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.CreateUserIdGet">
            <summary>设置 GroupMember.get_CreateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.CreateUserIdSetNullableOfInt32">
            <summary>设置 GroupMember.set_CreateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.GroupGet">
            <summary>设置 GroupMember.get_Group() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.GroupIdGet">
            <summary>设置 GroupMember.get_GroupId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.GroupIdSetNullableOfInt32">
            <summary>设置 GroupMember.set_GroupId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.GroupMessagersGet">
            <summary>设置 GroupMember.get_GroupMessagers() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.GroupMessagersSetICollectionOfGroupMessager">
            <summary>设置 GroupMember.set_GroupMessagers(ICollection`1&lt;GroupMessager&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.GroupRoleGet">
            <summary>设置 GroupMember.get_GroupRole() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.GroupRoleSetString">
            <summary>设置 GroupMember.set_GroupRole(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.GroupSetGroup">
            <summary>设置 GroupMember.set_Group(Group value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.IdGet">
            <summary>设置 GroupMember.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.IdSetInt32">
            <summary>设置 GroupMember.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.NameGet">
            <summary>设置 GroupMember.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.NameSetString">
            <summary>设置 GroupMember.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.NotesGet">
            <summary>设置 GroupMember.get_Notes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.NotesSetString">
            <summary>设置 GroupMember.set_Notes(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.ReferenceUserIdGet">
            <summary>设置 GroupMember.get_ReferenceUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.ReferenceUserIdSetNullableOfInt32">
            <summary>设置 GroupMember.set_ReferenceUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.StateGet">
            <summary>设置 GroupMember.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.StateSetNullableOfInt32">
            <summary>设置 GroupMember.set_State(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.UpdateTiimeGet">
            <summary>设置 GroupMember.get_UpdateTiime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.UpdateTiimeSetNullableOfDateTime">
            <summary>设置 GroupMember.set_UpdateTiime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.UpdateUserIdGet">
            <summary>设置 GroupMember.get_UpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.UpdateUserIdSetNullableOfInt32">
            <summary>设置 GroupMember.set_UpdateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.UserGet">
            <summary>设置 GroupMember.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.UserIdGet">
            <summary>设置 GroupMember.get_UserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.UserIdSetNullableOfInt32">
            <summary>设置 GroupMember.set_UserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMember.AllInstances.UserSetUser">
            <summary>设置 GroupMember.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimGroupMessager">
            <summary>BCP.Domain.Edmx.GroupMessager 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimGroupMessager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimGroupMessager.#ctor(BCP.Domain.Edmx.GroupMessager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimGroupMessager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimGroupMessager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.Constructor">
            <summary>设置 GroupMessager.GroupMessager() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.ContentGet">
            <summary>设置 GroupMessager.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.ContentSetString">
            <summary>设置 GroupMessager.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.CrateTimeGet">
            <summary>设置 GroupMessager.get_CrateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.CrateTimeSetNullableOfDateTime">
            <summary>设置 GroupMessager.set_CrateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.CrateUseIdGet">
            <summary>设置 GroupMessager.get_CrateUseId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.CrateUseIdSetNullableOfInt32">
            <summary>设置 GroupMessager.set_CrateUseId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.GroupGet">
            <summary>设置 GroupMessager.get_Group() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.GroupIdGet">
            <summary>设置 GroupMessager.get_GroupId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.GroupIdSetNullableOfInt32">
            <summary>设置 GroupMessager.set_GroupId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.GroupMemberGet">
            <summary>设置 GroupMessager.get_GroupMember() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.GroupMemberIdGet">
            <summary>设置 GroupMessager.get_GroupMemberId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.GroupMemberIdSetNullableOfInt32">
            <summary>设置 GroupMessager.set_GroupMemberId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.GroupMemberSetGroupMember">
            <summary>设置 GroupMessager.set_GroupMember(GroupMember value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.GroupSetGroup">
            <summary>设置 GroupMessager.set_Group(Group value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.IdGet">
            <summary>设置 GroupMessager.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.IdSetInt32">
            <summary>设置 GroupMessager.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.MessageTypeGet">
            <summary>设置 GroupMessager.get_MessageType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.MessageTypeSetNullableOfInt32">
            <summary>设置 GroupMessager.set_MessageType(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.NotesGet">
            <summary>设置 GroupMessager.get_Notes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.NotesSetString">
            <summary>设置 GroupMessager.set_Notes(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.UpdateTimeGet">
            <summary>设置 GroupMessager.get_UpdateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.UpdateTimeSetNullableOfDateTime">
            <summary>设置 GroupMessager.set_UpdateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.UpdateUserIdGet">
            <summary>设置 GroupMessager.get_UpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.UpdateUserIdSetNullableOfInt32">
            <summary>设置 GroupMessager.set_UpdateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.ContentGet">
            <summary>设置 GroupMessager.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.ContentSetString">
            <summary>设置 GroupMessager.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.CrateTimeGet">
            <summary>设置 GroupMessager.get_CrateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.CrateTimeSetNullableOfDateTime">
            <summary>设置 GroupMessager.set_CrateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.CrateUseIdGet">
            <summary>设置 GroupMessager.get_CrateUseId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.CrateUseIdSetNullableOfInt32">
            <summary>设置 GroupMessager.set_CrateUseId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.GroupGet">
            <summary>设置 GroupMessager.get_Group() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.GroupIdGet">
            <summary>设置 GroupMessager.get_GroupId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.GroupIdSetNullableOfInt32">
            <summary>设置 GroupMessager.set_GroupId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.GroupMemberGet">
            <summary>设置 GroupMessager.get_GroupMember() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.GroupMemberIdGet">
            <summary>设置 GroupMessager.get_GroupMemberId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.GroupMemberIdSetNullableOfInt32">
            <summary>设置 GroupMessager.set_GroupMemberId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.GroupMemberSetGroupMember">
            <summary>设置 GroupMessager.set_GroupMember(GroupMember value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.GroupSetGroup">
            <summary>设置 GroupMessager.set_Group(Group value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.IdGet">
            <summary>设置 GroupMessager.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.IdSetInt32">
            <summary>设置 GroupMessager.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.MessageTypeGet">
            <summary>设置 GroupMessager.get_MessageType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.MessageTypeSetNullableOfInt32">
            <summary>设置 GroupMessager.set_MessageType(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.NotesGet">
            <summary>设置 GroupMessager.get_Notes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.NotesSetString">
            <summary>设置 GroupMessager.set_Notes(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.UpdateTimeGet">
            <summary>设置 GroupMessager.get_UpdateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.UpdateTimeSetNullableOfDateTime">
            <summary>设置 GroupMessager.set_UpdateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.UpdateUserIdGet">
            <summary>设置 GroupMessager.get_UpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimGroupMessager.AllInstances.UpdateUserIdSetNullableOfInt32">
            <summary>设置 GroupMessager.set_UpdateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimIPCode">
            <summary>BCP.Domain.Edmx.IPCode 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimIPCode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimIPCode.#ctor(BCP.Domain.Edmx.IPCode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimIPCode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimIPCode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.CompanyGet">
            <summary>设置 IPCode.get_Company() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.CompanySetString">
            <summary>设置 IPCode.set_Company(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.Constructor">
            <summary>设置 IPCode.IPCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.EventTimeGet">
            <summary>设置 IPCode.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.EventTimeSetInt64">
            <summary>设置 IPCode.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.IDGet">
            <summary>设置 IPCode.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.IDSetInt32">
            <summary>设置 IPCode.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.IPGet">
            <summary>设置 IPCode.get_IP() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.IPSetString">
            <summary>设置 IPCode.set_IP(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimIPCode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.AllInstances.CompanyGet">
            <summary>设置 IPCode.get_Company() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.AllInstances.CompanySetString">
            <summary>设置 IPCode.set_Company(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.AllInstances.EventTimeGet">
            <summary>设置 IPCode.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.AllInstances.EventTimeSetInt64">
            <summary>设置 IPCode.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.AllInstances.IDGet">
            <summary>设置 IPCode.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.AllInstances.IDSetInt32">
            <summary>设置 IPCode.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.AllInstances.IPGet">
            <summary>设置 IPCode.get_IP() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIPCode.AllInstances.IPSetString">
            <summary>设置 IPCode.set_IP(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimIndustryCode">
            <summary>BCP.Domain.Edmx.IndustryCode 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimIndustryCode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimIndustryCode.#ctor(BCP.Domain.Edmx.IndustryCode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimIndustryCode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimIndustryCode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.CodeGet">
            <summary>设置 IndustryCode.get_Code() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.CodeSetString">
            <summary>设置 IndustryCode.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.Constructor">
            <summary>设置 IndustryCode.IndustryCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.DescriptGet">
            <summary>设置 IndustryCode.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.DescriptSetString">
            <summary>设置 IndustryCode.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.EventTimeGet">
            <summary>设置 IndustryCode.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.EventTimeSetInt64">
            <summary>设置 IndustryCode.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.IDGet">
            <summary>设置 IndustryCode.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.IDSetInt32">
            <summary>设置 IndustryCode.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.IndustryCode1Get">
            <summary>设置 IndustryCode.get_IndustryCode1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.IndustryCode1SetIndustryCode">
            <summary>设置 IndustryCode.set_IndustryCode1(IndustryCode value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.IndustryCodesGet">
            <summary>设置 IndustryCode.get_IndustryCodes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.IndustryCodesSetICollectionOfIndustryCode">
            <summary>设置 IndustryCode.set_IndustryCodes(ICollection`1&lt;IndustryCode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.IndustrySolutionsGet">
            <summary>设置 IndustryCode.get_IndustrySolutions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.IndustrySolutionsSetICollectionOfIndustrySolution">
            <summary>设置 IndustryCode.set_IndustrySolutions(ICollection`1&lt;IndustrySolution&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.NameGet">
            <summary>设置 IndustryCode.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.NameSetString">
            <summary>设置 IndustryCode.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.OrganizBasicsGet">
            <summary>设置 IndustryCode.get_OrganizBasics() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 IndustryCode.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.ParentCodeGet">
            <summary>设置 IndustryCode.get_ParentCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.ParentCodeSetString">
            <summary>设置 IndustryCode.set_ParentCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.ParentGet">
            <summary>设置 IndustryCode.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.ParentSetNullableOfInt32">
            <summary>设置 IndustryCode.set_Parent(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.VesionGet">
            <summary>设置 IndustryCode.get_Vesion() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.VesionSetString">
            <summary>设置 IndustryCode.set_Vesion(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.CodeGet">
            <summary>设置 IndustryCode.get_Code() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.CodeSetString">
            <summary>设置 IndustryCode.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.DescriptGet">
            <summary>设置 IndustryCode.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.DescriptSetString">
            <summary>设置 IndustryCode.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.EventTimeGet">
            <summary>设置 IndustryCode.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.EventTimeSetInt64">
            <summary>设置 IndustryCode.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.IDGet">
            <summary>设置 IndustryCode.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.IDSetInt32">
            <summary>设置 IndustryCode.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.IndustryCode1Get">
            <summary>设置 IndustryCode.get_IndustryCode1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.IndustryCode1SetIndustryCode">
            <summary>设置 IndustryCode.set_IndustryCode1(IndustryCode value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.IndustryCodesGet">
            <summary>设置 IndustryCode.get_IndustryCodes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.IndustryCodesSetICollectionOfIndustryCode">
            <summary>设置 IndustryCode.set_IndustryCodes(ICollection`1&lt;IndustryCode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.IndustrySolutionsGet">
            <summary>设置 IndustryCode.get_IndustrySolutions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.IndustrySolutionsSetICollectionOfIndustrySolution">
            <summary>设置 IndustryCode.set_IndustrySolutions(ICollection`1&lt;IndustrySolution&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.NameGet">
            <summary>设置 IndustryCode.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.NameSetString">
            <summary>设置 IndustryCode.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.OrganizBasicsGet">
            <summary>设置 IndustryCode.get_OrganizBasics() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 IndustryCode.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.ParentCodeGet">
            <summary>设置 IndustryCode.get_ParentCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.ParentCodeSetString">
            <summary>设置 IndustryCode.set_ParentCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.ParentGet">
            <summary>设置 IndustryCode.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.ParentSetNullableOfInt32">
            <summary>设置 IndustryCode.set_Parent(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.VesionGet">
            <summary>设置 IndustryCode.get_Vesion() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustryCode.AllInstances.VesionSetString">
            <summary>设置 IndustryCode.set_Vesion(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimIndustrySolution">
            <summary>BCP.Domain.Edmx.IndustrySolution 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.#ctor(BCP.Domain.Edmx.IndustrySolution)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.Constructor">
            <summary>设置 IndustrySolution.IndustrySolution() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.ContentGet">
            <summary>设置 IndustrySolution.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.ContentSetString">
            <summary>设置 IndustrySolution.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.DllFileStreamsGet">
            <summary>设置 IndustrySolution.get_DllFileStreams() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.DllFileStreamsSetICollectionOfDllFileStream">
            <summary>设置 IndustrySolution.set_DllFileStreams(ICollection`1&lt;DllFileStream&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.EventTimeGet">
            <summary>设置 IndustrySolution.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.EventTimeSetInt64">
            <summary>设置 IndustrySolution.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.IdGet">
            <summary>设置 IndustrySolution.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.IdSetInt32">
            <summary>设置 IndustrySolution.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.IndustryCodeGet">
            <summary>设置 IndustrySolution.get_IndustryCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.IndustryCodeIDGet">
            <summary>设置 IndustrySolution.get_IndustryCodeID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.IndustryCodeIDSetNullableOfInt32">
            <summary>设置 IndustrySolution.set_IndustryCodeID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.IndustryCodeSetIndustryCode">
            <summary>设置 IndustrySolution.set_IndustryCode(IndustryCode value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.NameGet">
            <summary>设置 IndustrySolution.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.NameSetString">
            <summary>设置 IndustrySolution.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.NoteGet">
            <summary>设置 IndustrySolution.get_Note() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.NoteSetString">
            <summary>设置 IndustrySolution.set_Note(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.WorkSpacesGet">
            <summary>设置 IndustrySolution.get_WorkSpaces() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.WorkSpacesSetICollectionOfWorkSpace">
            <summary>设置 IndustrySolution.set_WorkSpaces(ICollection`1&lt;WorkSpace&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.ContentGet">
            <summary>设置 IndustrySolution.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.ContentSetString">
            <summary>设置 IndustrySolution.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.DllFileStreamsGet">
            <summary>设置 IndustrySolution.get_DllFileStreams() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.DllFileStreamsSetICollectionOfDllFileStream">
            <summary>设置 IndustrySolution.set_DllFileStreams(ICollection`1&lt;DllFileStream&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.EventTimeGet">
            <summary>设置 IndustrySolution.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.EventTimeSetInt64">
            <summary>设置 IndustrySolution.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.IdGet">
            <summary>设置 IndustrySolution.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.IdSetInt32">
            <summary>设置 IndustrySolution.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.IndustryCodeGet">
            <summary>设置 IndustrySolution.get_IndustryCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.IndustryCodeIDGet">
            <summary>设置 IndustrySolution.get_IndustryCodeID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.IndustryCodeIDSetNullableOfInt32">
            <summary>设置 IndustrySolution.set_IndustryCodeID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.IndustryCodeSetIndustryCode">
            <summary>设置 IndustrySolution.set_IndustryCode(IndustryCode value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.NameGet">
            <summary>设置 IndustrySolution.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.NameSetString">
            <summary>设置 IndustrySolution.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.NoteGet">
            <summary>设置 IndustrySolution.get_Note() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.NoteSetString">
            <summary>设置 IndustrySolution.set_Note(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.WorkSpacesGet">
            <summary>设置 IndustrySolution.get_WorkSpaces() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimIndustrySolution.AllInstances.WorkSpacesSetICollectionOfWorkSpace">
            <summary>设置 IndustrySolution.set_WorkSpaces(ICollection`1&lt;WorkSpace&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimJobChange">
            <summary>BCP.Domain.Edmx.JobChange 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimJobChange.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimJobChange.#ctor(BCP.Domain.Edmx.JobChange)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimJobChange.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimJobChange.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.ChangeTypeGet">
            <summary>设置 JobChange.get_ChangeType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.ChangeTypeSetString">
            <summary>设置 JobChange.set_ChangeType(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.Constructor">
            <summary>设置 JobChange.JobChange() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.ContentGet">
            <summary>设置 JobChange.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.ContentSetString">
            <summary>设置 JobChange.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.CreaterGet">
            <summary>设置 JobChange.get_Creater() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.CreaterSetString">
            <summary>设置 JobChange.set_Creater(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.EventTimeGet">
            <summary>设置 JobChange.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.EventTimeSetInt64">
            <summary>设置 JobChange.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.IdGet">
            <summary>设置 JobChange.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.IdSetInt32">
            <summary>设置 JobChange.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.PostGet">
            <summary>设置 JobChange.get_Post() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.PostIDGet">
            <summary>设置 JobChange.get_PostID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.PostIDSetNullableOfInt32">
            <summary>设置 JobChange.set_PostID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.PostSetPost">
            <summary>设置 JobChange.set_Post(Post value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.StartTimeGet">
            <summary>设置 JobChange.get_StartTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.StartTimeSetDateTime">
            <summary>设置 JobChange.set_StartTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.StateGet">
            <summary>设置 JobChange.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.StateSetBoolean">
            <summary>设置 JobChange.set_State(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.ChangeTypeGet">
            <summary>设置 JobChange.get_ChangeType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.ChangeTypeSetString">
            <summary>设置 JobChange.set_ChangeType(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.ContentGet">
            <summary>设置 JobChange.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.ContentSetString">
            <summary>设置 JobChange.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.CreaterGet">
            <summary>设置 JobChange.get_Creater() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.CreaterSetString">
            <summary>设置 JobChange.set_Creater(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.EventTimeGet">
            <summary>设置 JobChange.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.EventTimeSetInt64">
            <summary>设置 JobChange.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.IdGet">
            <summary>设置 JobChange.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.IdSetInt32">
            <summary>设置 JobChange.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.PostGet">
            <summary>设置 JobChange.get_Post() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.PostIDGet">
            <summary>设置 JobChange.get_PostID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.PostIDSetNullableOfInt32">
            <summary>设置 JobChange.set_PostID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.PostSetPost">
            <summary>设置 JobChange.set_Post(Post value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.StartTimeGet">
            <summary>设置 JobChange.get_StartTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.StartTimeSetDateTime">
            <summary>设置 JobChange.set_StartTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.StateGet">
            <summary>设置 JobChange.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimJobChange.AllInstances.StateSetBoolean">
            <summary>设置 JobChange.set_State(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimLoginLog">
            <summary>BCP.Domain.Edmx.LoginLog 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimLoginLog.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimLoginLog.#ctor(BCP.Domain.Edmx.LoginLog)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimLoginLog.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimLoginLog.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.Constructor">
            <summary>设置 LoginLog.LoginLog() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.CurrentSateGet">
            <summary>设置 LoginLog.get_CurrentSate() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.CurrentSateSetString">
            <summary>设置 LoginLog.set_CurrentSate(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.IDGet">
            <summary>设置 LoginLog.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.IDSetInt32">
            <summary>设置 LoginLog.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.LoginIPGet">
            <summary>设置 LoginLog.get_LoginIP() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.LoginIPSetString">
            <summary>设置 LoginLog.set_LoginIP(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.LoginTimeGet">
            <summary>设置 LoginLog.get_LoginTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.LoginTimeSetString">
            <summary>设置 LoginLog.set_LoginTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.LogoutTimeGet">
            <summary>设置 LoginLog.get_LogoutTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.LogoutTimeSetString">
            <summary>设置 LoginLog.set_LogoutTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.OpenEventsGet">
            <summary>设置 LoginLog.get_OpenEvents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.OpenEventsSetICollectionOfOperationEvent">
            <summary>设置 LoginLog.set_OpenEvents(ICollection`1&lt;OperationEvent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.UserGet">
            <summary>设置 LoginLog.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.UserIDGet">
            <summary>设置 LoginLog.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.UserIDSetNullableOfInt32">
            <summary>设置 LoginLog.set_UserID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.UserSetUser">
            <summary>设置 LoginLog.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimLoginLog.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.AllInstances.CurrentSateGet">
            <summary>设置 LoginLog.get_CurrentSate() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.AllInstances.CurrentSateSetString">
            <summary>设置 LoginLog.set_CurrentSate(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.AllInstances.IDGet">
            <summary>设置 LoginLog.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.AllInstances.IDSetInt32">
            <summary>设置 LoginLog.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.AllInstances.LoginIPGet">
            <summary>设置 LoginLog.get_LoginIP() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.AllInstances.LoginIPSetString">
            <summary>设置 LoginLog.set_LoginIP(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.AllInstances.LoginTimeGet">
            <summary>设置 LoginLog.get_LoginTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.AllInstances.LoginTimeSetString">
            <summary>设置 LoginLog.set_LoginTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.AllInstances.LogoutTimeGet">
            <summary>设置 LoginLog.get_LogoutTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.AllInstances.LogoutTimeSetString">
            <summary>设置 LoginLog.set_LogoutTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.AllInstances.OpenEventsGet">
            <summary>设置 LoginLog.get_OpenEvents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.AllInstances.OpenEventsSetICollectionOfOperationEvent">
            <summary>设置 LoginLog.set_OpenEvents(ICollection`1&lt;OperationEvent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.AllInstances.UserGet">
            <summary>设置 LoginLog.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.AllInstances.UserIDGet">
            <summary>设置 LoginLog.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.AllInstances.UserIDSetNullableOfInt32">
            <summary>设置 LoginLog.set_UserID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimLoginLog.AllInstances.UserSetUser">
            <summary>设置 LoginLog.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimModulProperty">
            <summary>BCP.Domain.Edmx.ModulProperty 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimModulProperty.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimModulProperty.#ctor(BCP.Domain.Edmx.ModulProperty)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimModulProperty.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimModulProperty.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AuthorizationsGet">
            <summary>设置 ModulProperty.get_Authorizations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AuthorizationsSetICollectionOfAuthorization">
            <summary>设置 ModulProperty.set_Authorizations(ICollection`1&lt;Authorization&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.Constructor">
            <summary>设置 ModulProperty.ModulProperty() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.DescriptGet">
            <summary>设置 ModulProperty.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.DescriptSetString">
            <summary>设置 ModulProperty.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.EventTimeGet">
            <summary>设置 ModulProperty.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.EventTimeSetInt64">
            <summary>设置 ModulProperty.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.IdGet">
            <summary>设置 ModulProperty.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.IdSetInt32">
            <summary>设置 ModulProperty.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.NameGet">
            <summary>设置 ModulProperty.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.NameSetString">
            <summary>设置 ModulProperty.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.TypeGet">
            <summary>设置 ModulProperty.get_Type() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.TypeSetString">
            <summary>设置 ModulProperty.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.WorkModulGet">
            <summary>设置 ModulProperty.get_WorkModul() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.WorkModulIdGet">
            <summary>设置 ModulProperty.get_WorkModulId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.WorkModulIdSetInt32">
            <summary>设置 ModulProperty.set_WorkModulId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.WorkModulSetWorkModul">
            <summary>设置 ModulProperty.set_WorkModul(WorkModul value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimModulProperty.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AllInstances.AuthorizationsGet">
            <summary>设置 ModulProperty.get_Authorizations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AllInstances.AuthorizationsSetICollectionOfAuthorization">
            <summary>设置 ModulProperty.set_Authorizations(ICollection`1&lt;Authorization&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AllInstances.DescriptGet">
            <summary>设置 ModulProperty.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AllInstances.DescriptSetString">
            <summary>设置 ModulProperty.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AllInstances.EventTimeGet">
            <summary>设置 ModulProperty.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AllInstances.EventTimeSetInt64">
            <summary>设置 ModulProperty.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AllInstances.IdGet">
            <summary>设置 ModulProperty.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AllInstances.IdSetInt32">
            <summary>设置 ModulProperty.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AllInstances.NameGet">
            <summary>设置 ModulProperty.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AllInstances.NameSetString">
            <summary>设置 ModulProperty.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AllInstances.TypeGet">
            <summary>设置 ModulProperty.get_Type() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AllInstances.TypeSetString">
            <summary>设置 ModulProperty.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AllInstances.WorkModulGet">
            <summary>设置 ModulProperty.get_WorkModul() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AllInstances.WorkModulIdGet">
            <summary>设置 ModulProperty.get_WorkModulId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AllInstances.WorkModulIdSetInt32">
            <summary>设置 ModulProperty.set_WorkModulId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimModulProperty.AllInstances.WorkModulSetWorkModul">
            <summary>设置 ModulProperty.set_WorkModul(WorkModul value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOperationDetail">
            <summary>BCP.Domain.Edmx.OperationDetail 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOperationDetail.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOperationDetail.#ctor(BCP.Domain.Edmx.OperationDetail)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOperationDetail.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOperationDetail.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.Constructor">
            <summary>设置 OperationDetail.OperationDetail() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.HandleTypeGet">
            <summary>设置 OperationDetail.get_HandleType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.HandleTypeSetString">
            <summary>设置 OperationDetail.set_HandleType(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.IdGet">
            <summary>设置 OperationDetail.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.IdSetInt32">
            <summary>设置 OperationDetail.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.NoteGet">
            <summary>设置 OperationDetail.get_Note() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.NoteSetString">
            <summary>设置 OperationDetail.set_Note(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.OpenEventGet">
            <summary>设置 OperationDetail.get_OpenEvent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.OpenEventIdGet">
            <summary>设置 OperationDetail.get_OpenEventId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.OpenEventIdSetNullableOfInt32">
            <summary>设置 OperationDetail.set_OpenEventId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.OpenEventSetOperationEvent">
            <summary>设置 OperationDetail.set_OpenEvent(OperationEvent value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.TabNameGet">
            <summary>设置 OperationDetail.get_TabName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.TabNameSetString">
            <summary>设置 OperationDetail.set_TabName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.TabRecordIdGet">
            <summary>设置 OperationDetail.get_TabRecordId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.TabRecordIdSetString">
            <summary>设置 OperationDetail.set_TabRecordId(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOperationDetail.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.AllInstances.HandleTypeGet">
            <summary>设置 OperationDetail.get_HandleType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.AllInstances.HandleTypeSetString">
            <summary>设置 OperationDetail.set_HandleType(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.AllInstances.IdGet">
            <summary>设置 OperationDetail.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.AllInstances.IdSetInt32">
            <summary>设置 OperationDetail.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.AllInstances.NoteGet">
            <summary>设置 OperationDetail.get_Note() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.AllInstances.NoteSetString">
            <summary>设置 OperationDetail.set_Note(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.AllInstances.OpenEventGet">
            <summary>设置 OperationDetail.get_OpenEvent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.AllInstances.OpenEventIdGet">
            <summary>设置 OperationDetail.get_OpenEventId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.AllInstances.OpenEventIdSetNullableOfInt32">
            <summary>设置 OperationDetail.set_OpenEventId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.AllInstances.OpenEventSetOperationEvent">
            <summary>设置 OperationDetail.set_OpenEvent(OperationEvent value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.AllInstances.TabNameGet">
            <summary>设置 OperationDetail.get_TabName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.AllInstances.TabNameSetString">
            <summary>设置 OperationDetail.set_TabName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.AllInstances.TabRecordIdGet">
            <summary>设置 OperationDetail.get_TabRecordId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationDetail.AllInstances.TabRecordIdSetString">
            <summary>设置 OperationDetail.set_TabRecordId(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOperationEvent">
            <summary>BCP.Domain.Edmx.OperationEvent 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOperationEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOperationEvent.#ctor(BCP.Domain.Edmx.OperationEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOperationEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOperationEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.Constructor">
            <summary>设置 OperationEvent.OperationEvent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.EventTimesGet">
            <summary>设置 OperationEvent.get_EventTimes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.EventTimesSetICollectionOfOperationDetail">
            <summary>设置 OperationEvent.set_EventTimes(ICollection`1&lt;OperationDetail&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.IdGet">
            <summary>设置 OperationEvent.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.IdSetInt32">
            <summary>设置 OperationEvent.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.LoginLogGet">
            <summary>设置 OperationEvent.get_LoginLog() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.LoginLogIDGet">
            <summary>设置 OperationEvent.get_LoginLogID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.LoginLogIDSetNullableOfInt32">
            <summary>设置 OperationEvent.set_LoginLogID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.LoginLogSetLoginLog">
            <summary>设置 OperationEvent.set_LoginLog(LoginLog value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.NoteGet">
            <summary>设置 OperationEvent.get_Note() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.NoteSetString">
            <summary>设置 OperationEvent.set_Note(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.OperModulGet">
            <summary>设置 OperationEvent.get_OperModul() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.OperModulSetString">
            <summary>设置 OperationEvent.set_OperModul(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.OperNameGet">
            <summary>设置 OperationEvent.get_OperName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.OperNameSetString">
            <summary>设置 OperationEvent.set_OperName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.OperSpaceGet">
            <summary>设置 OperationEvent.get_OperSpace() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.OperSpaceSetString">
            <summary>设置 OperationEvent.set_OperSpace(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.OperTimeGet">
            <summary>设置 OperationEvent.get_OperTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.OperTimeSetString">
            <summary>设置 OperationEvent.set_OperTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.OperTypeGet">
            <summary>设置 OperationEvent.get_OperType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.OperTypeSetString">
            <summary>设置 OperationEvent.set_OperType(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.EventTimesGet">
            <summary>设置 OperationEvent.get_EventTimes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.EventTimesSetICollectionOfOperationDetail">
            <summary>设置 OperationEvent.set_EventTimes(ICollection`1&lt;OperationDetail&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.IdGet">
            <summary>设置 OperationEvent.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.IdSetInt32">
            <summary>设置 OperationEvent.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.LoginLogGet">
            <summary>设置 OperationEvent.get_LoginLog() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.LoginLogIDGet">
            <summary>设置 OperationEvent.get_LoginLogID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.LoginLogIDSetNullableOfInt32">
            <summary>设置 OperationEvent.set_LoginLogID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.LoginLogSetLoginLog">
            <summary>设置 OperationEvent.set_LoginLog(LoginLog value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.NoteGet">
            <summary>设置 OperationEvent.get_Note() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.NoteSetString">
            <summary>设置 OperationEvent.set_Note(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.OperModulGet">
            <summary>设置 OperationEvent.get_OperModul() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.OperModulSetString">
            <summary>设置 OperationEvent.set_OperModul(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.OperNameGet">
            <summary>设置 OperationEvent.get_OperName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.OperNameSetString">
            <summary>设置 OperationEvent.set_OperName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.OperSpaceGet">
            <summary>设置 OperationEvent.get_OperSpace() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.OperSpaceSetString">
            <summary>设置 OperationEvent.set_OperSpace(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.OperTimeGet">
            <summary>设置 OperationEvent.get_OperTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.OperTimeSetString">
            <summary>设置 OperationEvent.set_OperTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.OperTypeGet">
            <summary>设置 OperationEvent.get_OperType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOperationEvent.AllInstances.OperTypeSetString">
            <summary>设置 OperationEvent.set_OperType(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment">
            <summary>BCP.Domain.Edmx.OrgaRegisterDocment 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.#ctor(BCP.Domain.Edmx.OrgaRegisterDocment)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.Constructor">
            <summary>设置 OrgaRegisterDocment.OrgaRegisterDocment() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.DocmentContentGet">
            <summary>设置 OrgaRegisterDocment.get_DocmentContent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.DocmentContentSetByteArray">
            <summary>设置 OrgaRegisterDocment.set_DocmentContent(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.DocumentFormatGet">
            <summary>设置 OrgaRegisterDocment.get_DocumentFormat() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.DocumentFormatSetString">
            <summary>设置 OrgaRegisterDocment.set_DocumentFormat(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.DocumentNameGet">
            <summary>设置 OrgaRegisterDocment.get_DocumentName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.DocumentNameSetString">
            <summary>设置 OrgaRegisterDocment.set_DocumentName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.EventTime1Get">
            <summary>设置 OrgaRegisterDocment.get_EventTime1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.EventTime1SetInt64">
            <summary>设置 OrgaRegisterDocment.set_EventTime1(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.EventTimeGet">
            <summary>设置 OrgaRegisterDocment.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.EventTimeSetInt64">
            <summary>设置 OrgaRegisterDocment.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.IDGet">
            <summary>设置 OrgaRegisterDocment.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.IDSetInt32">
            <summary>设置 OrgaRegisterDocment.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.OrganizBasicGet">
            <summary>设置 OrgaRegisterDocment.get_OrganizBasic() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.OrganizBasicIDGet">
            <summary>设置 OrgaRegisterDocment.get_OrganizBasicID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.OrganizBasicIDSetInt32">
            <summary>设置 OrgaRegisterDocment.set_OrganizBasicID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.OrganizBasicSetOrganizBasic">
            <summary>设置 OrgaRegisterDocment.set_OrganizBasic(OrganizBasic value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.RecordeTimeGet">
            <summary>设置 OrgaRegisterDocment.get_RecordeTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.RecordeTimeSetDateTime">
            <summary>设置 OrgaRegisterDocment.set_RecordeTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.RegisterDocumentTypeGet">
            <summary>设置 OrgaRegisterDocment.get_RegisterDocumentType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.RegisterDocumentTypeIDGet">
            <summary>设置 OrgaRegisterDocment.get_RegisterDocumentTypeID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.RegisterDocumentTypeIDSetInt32">
            <summary>设置 OrgaRegisterDocment.set_RegisterDocumentTypeID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.RegisterDocumentTypeSetRegisterDocumentType">
            <summary>设置 OrgaRegisterDocment.set_RegisterDocumentType(RegisterDocumentType value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.DocmentContentGet">
            <summary>设置 OrgaRegisterDocment.get_DocmentContent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.DocmentContentSetByteArray">
            <summary>设置 OrgaRegisterDocment.set_DocmentContent(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.DocumentFormatGet">
            <summary>设置 OrgaRegisterDocment.get_DocumentFormat() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.DocumentFormatSetString">
            <summary>设置 OrgaRegisterDocment.set_DocumentFormat(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.DocumentNameGet">
            <summary>设置 OrgaRegisterDocment.get_DocumentName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.DocumentNameSetString">
            <summary>设置 OrgaRegisterDocment.set_DocumentName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.EventTime1Get">
            <summary>设置 OrgaRegisterDocment.get_EventTime1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.EventTime1SetInt64">
            <summary>设置 OrgaRegisterDocment.set_EventTime1(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.EventTimeGet">
            <summary>设置 OrgaRegisterDocment.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.EventTimeSetInt64">
            <summary>设置 OrgaRegisterDocment.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.IDGet">
            <summary>设置 OrgaRegisterDocment.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.IDSetInt32">
            <summary>设置 OrgaRegisterDocment.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.OrganizBasicGet">
            <summary>设置 OrgaRegisterDocment.get_OrganizBasic() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.OrganizBasicIDGet">
            <summary>设置 OrgaRegisterDocment.get_OrganizBasicID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.OrganizBasicIDSetInt32">
            <summary>设置 OrgaRegisterDocment.set_OrganizBasicID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.OrganizBasicSetOrganizBasic">
            <summary>设置 OrgaRegisterDocment.set_OrganizBasic(OrganizBasic value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.RecordeTimeGet">
            <summary>设置 OrgaRegisterDocment.get_RecordeTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.RecordeTimeSetDateTime">
            <summary>设置 OrgaRegisterDocment.set_RecordeTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.RegisterDocumentTypeGet">
            <summary>设置 OrgaRegisterDocment.get_RegisterDocumentType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.RegisterDocumentTypeIDGet">
            <summary>设置 OrgaRegisterDocment.get_RegisterDocumentTypeID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.RegisterDocumentTypeIDSetInt32">
            <summary>设置 OrgaRegisterDocment.set_RegisterDocumentTypeID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrgaRegisterDocment.AllInstances.RegisterDocumentTypeSetRegisterDocumentType">
            <summary>设置 OrgaRegisterDocment.set_RegisterDocumentType(RegisterDocumentType value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor">
            <summary>BCP.Domain.Edmx.OrganicInvestor 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.#ctor(BCP.Domain.Edmx.OrganicInvestor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AmountGet">
            <summary>设置 OrganicInvestor.get_Amount() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AmountSetDecimal">
            <summary>设置 OrganicInvestor.set_Amount(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.CentisifierTypeGet">
            <summary>设置 OrganicInvestor.get_CentisifierType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.CentisifierTypeSetString">
            <summary>设置 OrganicInvestor.set_CentisifierType(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.Constructor">
            <summary>设置 OrganicInvestor.OrganicInvestor() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.CurrencyGet">
            <summary>设置 OrganicInvestor.get_Currency() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.CurrencySetString">
            <summary>设置 OrganicInvestor.set_Currency(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.EventTimeGet">
            <summary>设置 OrganicInvestor.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.EventTimeSetInt64">
            <summary>设置 OrganicInvestor.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.IDGet">
            <summary>设置 OrganicInvestor.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.IDSetInt32">
            <summary>设置 OrganicInvestor.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.InvestorGet">
            <summary>设置 OrganicInvestor.get_Investor() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.InvestorNameGet">
            <summary>设置 OrganicInvestor.get_InvestorName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.InvestorNameSetString">
            <summary>设置 OrganicInvestor.set_InvestorName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.InvestorNumberGet">
            <summary>设置 OrganicInvestor.get_InvestorNumber() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.InvestorNumberSetInt32">
            <summary>设置 OrganicInvestor.set_InvestorNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.InvestorSetNullableOfInt32">
            <summary>设置 OrganicInvestor.set_Investor(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.OrganizBasic1Get">
            <summary>设置 OrganicInvestor.get_OrganizBasic1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.OrganizBasic1SetOrganizBasic">
            <summary>设置 OrganicInvestor.set_OrganizBasic1(OrganizBasic value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.OrganizBasicGet">
            <summary>设置 OrganicInvestor.get_OrganizBasic() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.OrganizBasicIDGet">
            <summary>设置 OrganicInvestor.get_OrganizBasicID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.OrganizBasicIDSetInt32">
            <summary>设置 OrganicInvestor.set_OrganizBasicID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.OrganizBasicSetOrganizBasic">
            <summary>设置 OrganicInvestor.set_OrganizBasic(OrganizBasic value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.UnitGet">
            <summary>设置 OrganicInvestor.get_Unit() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.UnitSetString">
            <summary>设置 OrganicInvestor.set_Unit(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.AmountGet">
            <summary>设置 OrganicInvestor.get_Amount() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.AmountSetDecimal">
            <summary>设置 OrganicInvestor.set_Amount(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.CentisifierTypeGet">
            <summary>设置 OrganicInvestor.get_CentisifierType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.CentisifierTypeSetString">
            <summary>设置 OrganicInvestor.set_CentisifierType(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.CurrencyGet">
            <summary>设置 OrganicInvestor.get_Currency() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.CurrencySetString">
            <summary>设置 OrganicInvestor.set_Currency(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.EventTimeGet">
            <summary>设置 OrganicInvestor.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.EventTimeSetInt64">
            <summary>设置 OrganicInvestor.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.IDGet">
            <summary>设置 OrganicInvestor.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.IDSetInt32">
            <summary>设置 OrganicInvestor.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.InvestorGet">
            <summary>设置 OrganicInvestor.get_Investor() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.InvestorNameGet">
            <summary>设置 OrganicInvestor.get_InvestorName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.InvestorNameSetString">
            <summary>设置 OrganicInvestor.set_InvestorName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.InvestorNumberGet">
            <summary>设置 OrganicInvestor.get_InvestorNumber() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.InvestorNumberSetInt32">
            <summary>设置 OrganicInvestor.set_InvestorNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.InvestorSetNullableOfInt32">
            <summary>设置 OrganicInvestor.set_Investor(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.OrganizBasic1Get">
            <summary>设置 OrganicInvestor.get_OrganizBasic1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.OrganizBasic1SetOrganizBasic">
            <summary>设置 OrganicInvestor.set_OrganizBasic1(OrganizBasic value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.OrganizBasicGet">
            <summary>设置 OrganicInvestor.get_OrganizBasic() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.OrganizBasicIDGet">
            <summary>设置 OrganicInvestor.get_OrganizBasicID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.OrganizBasicIDSetInt32">
            <summary>设置 OrganicInvestor.set_OrganizBasicID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.OrganizBasicSetOrganizBasic">
            <summary>设置 OrganicInvestor.set_OrganizBasic(OrganizBasic value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.UnitGet">
            <summary>设置 OrganicInvestor.get_Unit() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganicInvestor.AllInstances.UnitSetString">
            <summary>设置 OrganicInvestor.set_Unit(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganizBasic">
            <summary>BCP.Domain.Edmx.OrganizBasic 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.#ctor(BCP.Domain.Edmx.OrganizBasic)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AdministrativecodeGet">
            <summary>设置 OrganizBasic.get_Administrativecode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AdministrativecodeSacIDGet">
            <summary>设置 OrganizBasic.get_AdministrativecodeSacID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AdministrativecodeSacIDSetInt32">
            <summary>设置 OrganizBasic.set_AdministrativecodeSacID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AdministrativecodeSetAdministrativecode">
            <summary>设置 OrganizBasic.set_Administrativecode(Administrativecode value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.ApprovalDateGet">
            <summary>设置 OrganizBasic.get_ApprovalDate() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.ApprovalDateSetNullableOfDateTime">
            <summary>设置 OrganizBasic.set_ApprovalDate(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.BusinessScopeGet">
            <summary>设置 OrganizBasic.get_BusinessScope() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.BusinessScopeSetString">
            <summary>设置 OrganizBasic.set_BusinessScope(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.BussinessAddressDetailGet">
            <summary>设置 OrganizBasic.get_BussinessAddressDetail() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.BussinessAddressDetailSetString">
            <summary>设置 OrganizBasic.set_BussinessAddressDetail(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.BussinessAddressGet">
            <summary>设置 OrganizBasic.get_BussinessAddress() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.BussinessAddressSetString">
            <summary>设置 OrganizBasic.set_BussinessAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.BussinessModelGet">
            <summary>设置 OrganizBasic.get_BussinessModel() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.BussinessModelSetString">
            <summary>设置 OrganizBasic.set_BussinessModel(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.Constructor">
            <summary>设置 OrganizBasic.OrganizBasic() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.DomicileGet">
            <summary>设置 OrganizBasic.get_Domicile() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.DomicileSetString">
            <summary>设置 OrganizBasic.set_Domicile(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.EventTimeGet">
            <summary>设置 OrganizBasic.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.EventTimeSetInt64">
            <summary>设置 OrganizBasic.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.IDGet">
            <summary>设置 OrganizBasic.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.IDSetInt32">
            <summary>设置 OrganizBasic.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.IndustryCodeGet">
            <summary>设置 OrganizBasic.get_IndustryCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.IndustryCodeIDGet">
            <summary>设置 OrganizBasic.get_IndustryCodeID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.IndustryCodeIDSetInt32">
            <summary>设置 OrganizBasic.set_IndustryCodeID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.IndustryCodeSetIndustryCode">
            <summary>设置 OrganizBasic.set_IndustryCode(IndustryCode value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.IsValidGet">
            <summary>设置 OrganizBasic.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.IsValidSetBoolean">
            <summary>设置 OrganizBasic.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.LegaPersonIDGet">
            <summary>设置 OrganizBasic.get_LegaPersonID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.LegaPersonIDSetNullableOfInt32">
            <summary>设置 OrganizBasic.set_LegaPersonID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OperatingPeriodGet">
            <summary>设置 OrganizBasic.get_OperatingPeriod() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OperatingPeriodSetString">
            <summary>设置 OrganizBasic.set_OperatingPeriod(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OrgaRegisterDocmentsGet">
            <summary>设置 OrganizBasic.get_OrgaRegisterDocments() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OrgaRegisterDocmentsSetICollectionOfOrgaRegisterDocment">
            <summary>设置 OrganizBasic.set_OrgaRegisterDocments(ICollection`1&lt;OrgaRegisterDocment&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OrganicInvestors1Get">
            <summary>设置 OrganizBasic.get_OrganicInvestors1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OrganicInvestors1SetICollectionOfOrganicInvestor">
            <summary>设置 OrganizBasic.set_OrganicInvestors1(ICollection`1&lt;OrganicInvestor&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OrganicInvestorsGet">
            <summary>设置 OrganizBasic.get_OrganicInvestors() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OrganicInvestorsSetICollectionOfOrganicInvestor">
            <summary>设置 OrganizBasic.set_OrganicInvestors(ICollection`1&lt;OrganicInvestor&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OrganizBasic1Get">
            <summary>设置 OrganizBasic.get_OrganizBasic1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OrganizBasic1SetOrganizBasic">
            <summary>设置 OrganizBasic.set_OrganizBasic1(OrganizBasic value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OrganizBasicsGet">
            <summary>设置 OrganizBasic.get_OrganizBasics() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 OrganizBasic.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OrganizationGet">
            <summary>设置 OrganizBasic.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OrganizationIDGet">
            <summary>设置 OrganizBasic.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OrganizationIDSetInt32">
            <summary>设置 OrganizBasic.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OrganizationSetOrganization">
            <summary>设置 OrganizBasic.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.Organization_ContacTableGet">
            <summary>设置 OrganizBasic.get_Organization_ContacTable() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.Organization_ContacTableSetICollectionOfOrganization_ContacTable">
            <summary>设置 OrganizBasic.set_Organization_ContacTable(ICollection`1&lt;Organization_ContacTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.Organization_TypeGet">
            <summary>设置 OrganizBasic.get_Organization_Type() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.Organization_TypeIDGet">
            <summary>设置 OrganizBasic.get_Organization_TypeID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.Organization_TypeIDSetInt32">
            <summary>设置 OrganizBasic.set_Organization_TypeID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.Organization_TypeSetOrganization_Type">
            <summary>设置 OrganizBasic.set_Organization_Type(Organization_Type value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OtherInfoGet">
            <summary>设置 OrganizBasic.get_OtherInfo() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OtherInfoSetString">
            <summary>设置 OrganizBasic.set_OtherInfo(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OverrideParentGet">
            <summary>设置 OrganizBasic.get_OverrideParent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.OverrideParentSetNullableOfInt32">
            <summary>设置 OrganizBasic.set_OverrideParent(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.ProductsGet">
            <summary>设置 OrganizBasic.get_Products() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.ProductsSetICollectionOfProduct">
            <summary>设置 OrganizBasic.set_Products(ICollection`1&lt;Product&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.RegisteredCapitalGet">
            <summary>设置 OrganizBasic.get_RegisteredCapital() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.RegisteredCapitalSetString">
            <summary>设置 OrganizBasic.set_RegisteredCapital(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.RegistrationNumberGet">
            <summary>设置 OrganizBasic.get_RegistrationNumber() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.RegistrationNumberSetString">
            <summary>设置 OrganizBasic.set_RegistrationNumber(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.SubordinateGet">
            <summary>设置 OrganizBasic.get_Subordinate() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.SubordinateIDGet">
            <summary>设置 OrganizBasic.get_SubordinateID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.SubordinateIDSetNullableOfInt32">
            <summary>设置 OrganizBasic.set_SubordinateID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.SubordinateSetSubordinate">
            <summary>设置 OrganizBasic.set_Subordinate(Subordinate value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.SupervisorSectionGet">
            <summary>设置 OrganizBasic.get_SupervisorSection() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.SupervisorSectionSetString">
            <summary>设置 OrganizBasic.set_SupervisorSection(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.AdministrativecodeGet">
            <summary>设置 OrganizBasic.get_Administrativecode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.AdministrativecodeSacIDGet">
            <summary>设置 OrganizBasic.get_AdministrativecodeSacID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.AdministrativecodeSacIDSetInt32">
            <summary>设置 OrganizBasic.set_AdministrativecodeSacID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.AdministrativecodeSetAdministrativecode">
            <summary>设置 OrganizBasic.set_Administrativecode(Administrativecode value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.ApprovalDateGet">
            <summary>设置 OrganizBasic.get_ApprovalDate() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.ApprovalDateSetNullableOfDateTime">
            <summary>设置 OrganizBasic.set_ApprovalDate(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.BusinessScopeGet">
            <summary>设置 OrganizBasic.get_BusinessScope() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.BusinessScopeSetString">
            <summary>设置 OrganizBasic.set_BusinessScope(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.BussinessAddressDetailGet">
            <summary>设置 OrganizBasic.get_BussinessAddressDetail() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.BussinessAddressDetailSetString">
            <summary>设置 OrganizBasic.set_BussinessAddressDetail(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.BussinessAddressGet">
            <summary>设置 OrganizBasic.get_BussinessAddress() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.BussinessAddressSetString">
            <summary>设置 OrganizBasic.set_BussinessAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.BussinessModelGet">
            <summary>设置 OrganizBasic.get_BussinessModel() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.BussinessModelSetString">
            <summary>设置 OrganizBasic.set_BussinessModel(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.DomicileGet">
            <summary>设置 OrganizBasic.get_Domicile() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.DomicileSetString">
            <summary>设置 OrganizBasic.set_Domicile(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.EventTimeGet">
            <summary>设置 OrganizBasic.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.EventTimeSetInt64">
            <summary>设置 OrganizBasic.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.IDGet">
            <summary>设置 OrganizBasic.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.IDSetInt32">
            <summary>设置 OrganizBasic.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.IndustryCodeGet">
            <summary>设置 OrganizBasic.get_IndustryCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.IndustryCodeIDGet">
            <summary>设置 OrganizBasic.get_IndustryCodeID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.IndustryCodeIDSetInt32">
            <summary>设置 OrganizBasic.set_IndustryCodeID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.IndustryCodeSetIndustryCode">
            <summary>设置 OrganizBasic.set_IndustryCode(IndustryCode value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.IsValidGet">
            <summary>设置 OrganizBasic.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.IsValidSetBoolean">
            <summary>设置 OrganizBasic.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.LegaPersonIDGet">
            <summary>设置 OrganizBasic.get_LegaPersonID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.LegaPersonIDSetNullableOfInt32">
            <summary>设置 OrganizBasic.set_LegaPersonID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OperatingPeriodGet">
            <summary>设置 OrganizBasic.get_OperatingPeriod() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OperatingPeriodSetString">
            <summary>设置 OrganizBasic.set_OperatingPeriod(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OrgaRegisterDocmentsGet">
            <summary>设置 OrganizBasic.get_OrgaRegisterDocments() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OrgaRegisterDocmentsSetICollectionOfOrgaRegisterDocment">
            <summary>设置 OrganizBasic.set_OrgaRegisterDocments(ICollection`1&lt;OrgaRegisterDocment&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OrganicInvestors1Get">
            <summary>设置 OrganizBasic.get_OrganicInvestors1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OrganicInvestors1SetICollectionOfOrganicInvestor">
            <summary>设置 OrganizBasic.set_OrganicInvestors1(ICollection`1&lt;OrganicInvestor&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OrganicInvestorsGet">
            <summary>设置 OrganizBasic.get_OrganicInvestors() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OrganicInvestorsSetICollectionOfOrganicInvestor">
            <summary>设置 OrganizBasic.set_OrganicInvestors(ICollection`1&lt;OrganicInvestor&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OrganizBasic1Get">
            <summary>设置 OrganizBasic.get_OrganizBasic1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OrganizBasic1SetOrganizBasic">
            <summary>设置 OrganizBasic.set_OrganizBasic1(OrganizBasic value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OrganizBasicsGet">
            <summary>设置 OrganizBasic.get_OrganizBasics() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 OrganizBasic.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OrganizationGet">
            <summary>设置 OrganizBasic.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OrganizationIDGet">
            <summary>设置 OrganizBasic.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OrganizationIDSetInt32">
            <summary>设置 OrganizBasic.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OrganizationSetOrganization">
            <summary>设置 OrganizBasic.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.Organization_ContacTableGet">
            <summary>设置 OrganizBasic.get_Organization_ContacTable() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.Organization_ContacTableSetICollectionOfOrganization_ContacTable">
            <summary>设置 OrganizBasic.set_Organization_ContacTable(ICollection`1&lt;Organization_ContacTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.Organization_TypeGet">
            <summary>设置 OrganizBasic.get_Organization_Type() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.Organization_TypeIDGet">
            <summary>设置 OrganizBasic.get_Organization_TypeID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.Organization_TypeIDSetInt32">
            <summary>设置 OrganizBasic.set_Organization_TypeID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.Organization_TypeSetOrganization_Type">
            <summary>设置 OrganizBasic.set_Organization_Type(Organization_Type value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OtherInfoGet">
            <summary>设置 OrganizBasic.get_OtherInfo() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OtherInfoSetString">
            <summary>设置 OrganizBasic.set_OtherInfo(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OverrideParentGet">
            <summary>设置 OrganizBasic.get_OverrideParent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.OverrideParentSetNullableOfInt32">
            <summary>设置 OrganizBasic.set_OverrideParent(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.ProductsGet">
            <summary>设置 OrganizBasic.get_Products() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.ProductsSetICollectionOfProduct">
            <summary>设置 OrganizBasic.set_Products(ICollection`1&lt;Product&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.RegisteredCapitalGet">
            <summary>设置 OrganizBasic.get_RegisteredCapital() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.RegisteredCapitalSetString">
            <summary>设置 OrganizBasic.set_RegisteredCapital(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.RegistrationNumberGet">
            <summary>设置 OrganizBasic.get_RegistrationNumber() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.RegistrationNumberSetString">
            <summary>设置 OrganizBasic.set_RegistrationNumber(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.SubordinateGet">
            <summary>设置 OrganizBasic.get_Subordinate() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.SubordinateIDGet">
            <summary>设置 OrganizBasic.get_SubordinateID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.SubordinateIDSetNullableOfInt32">
            <summary>设置 OrganizBasic.set_SubordinateID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.SubordinateSetSubordinate">
            <summary>设置 OrganizBasic.set_Subordinate(Subordinate value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.SupervisorSectionGet">
            <summary>设置 OrganizBasic.get_SupervisorSection() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizBasic.AllInstances.SupervisorSectionSetString">
            <summary>设置 OrganizBasic.set_SupervisorSection(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganization">
            <summary>BCP.Domain.Edmx.Organization 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganization.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganization.#ctor(BCP.Domain.Edmx.Organization)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganization.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganization.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.CertificatesGet">
            <summary>设置 Organization.get_Certificates() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.CertificatesSetString">
            <summary>设置 Organization.set_Certificates(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.Constructor">
            <summary>设置 Organization.Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.CustomOrganizationTypesGet">
            <summary>设置 Organization.get_CustomOrganizationTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.CustomOrganizationTypesSetICollectionOfOrganizationCustomType">
            <summary>设置 Organization.set_CustomOrganizationTypes(ICollection`1&lt;OrganizationCustomType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.DocReadersGet">
            <summary>设置 Organization.get_DocReaders() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.DocReadersSetICollectionOfDocReader">
            <summary>设置 Organization.set_DocReaders(ICollection`1&lt;DocReader&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.EmployeesGet">
            <summary>设置 Organization.get_Employees() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.EmployeesSetICollectionOfEmployee">
            <summary>设置 Organization.set_Employees(ICollection`1&lt;Employee&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.EstablishmentDateGet">
            <summary>设置 Organization.get_EstablishmentDate() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.EstablishmentDateSetNullableOfDateTime">
            <summary>设置 Organization.set_EstablishmentDate(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.IDGet">
            <summary>设置 Organization.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.IDSetInt32">
            <summary>设置 Organization.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.IsValidGet">
            <summary>设置 Organization.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.IsValidSetBoolean">
            <summary>设置 Organization.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.MarkerStringGet">
            <summary>设置 Organization.get_MarkerString() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.MarkerStringSetString">
            <summary>设置 Organization.set_MarkerString(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.OrgaNameGet">
            <summary>设置 Organization.get_OrgaName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.OrgaNameSetString">
            <summary>设置 Organization.set_OrgaName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.OrganizBasicsGet">
            <summary>设置 Organization.get_OrganizBasics() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 Organization.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.Organization1Get">
            <summary>设置 Organization.get_Organization1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.Organization1SetOrganization">
            <summary>设置 Organization.set_Organization1(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.OrganizationCodeGet">
            <summary>设置 Organization.get_OrganizationCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.OrganizationCodeSetString">
            <summary>设置 Organization.set_OrganizationCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.OrganizationEventsGet">
            <summary>设置 Organization.get_OrganizationEvents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.OrganizationEventsSetICollectionOfOrganizationEvent">
            <summary>设置 Organization.set_OrganizationEvents(ICollection`1&lt;OrganizationEvent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.OrganizationOtherNamesGet">
            <summary>设置 Organization.get_OrganizationOtherNames() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.OrganizationOtherNamesSetICollectionOfOrganizationOtherName">
            <summary>设置 Organization.set_OrganizationOtherNames(ICollection`1&lt;OrganizationOtherName&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.OrganizationTransitions1Get">
            <summary>设置 Organization.get_OrganizationTransitions1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.OrganizationTransitions1SetICollectionOfOrganizationTransition">
            <summary>设置 Organization.set_OrganizationTransitions1(ICollection`1&lt;OrganizationTransition&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.OrganizationTransitionsGet">
            <summary>设置 Organization.get_OrganizationTransitions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.OrganizationTransitionsSetICollectionOfOrganizationTransition">
            <summary>设置 Organization.set_OrganizationTransitions(ICollection`1&lt;OrganizationTransition&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.OrganizationsGet">
            <summary>设置 Organization.get_Organizations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.OrganizationsSetICollectionOfOrganization">
            <summary>设置 Organization.set_Organizations(ICollection`1&lt;Organization&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.ParentGet">
            <summary>设置 Organization.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.ParentSetNullableOfInt32">
            <summary>设置 Organization.set_Parent(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.PositionsGet">
            <summary>设置 Organization.get_Positions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.PositionsSetICollectionOfPosition">
            <summary>设置 Organization.set_Positions(ICollection`1&lt;Position&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.PostsGet">
            <summary>设置 Organization.get_Posts() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.PostsSetICollectionOfPost">
            <summary>设置 Organization.set_Posts(ICollection`1&lt;Post&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.ProductsGet">
            <summary>设置 Organization.get_Products() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.ProductsSetICollectionOfProduct">
            <summary>设置 Organization.set_Products(ICollection`1&lt;Product&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.TypeGet">
            <summary>设置 Organization.get_Type() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.TypeSetString">
            <summary>设置 Organization.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.WorkSpaceRolesGet">
            <summary>设置 Organization.get_WorkSpaceRoles() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.WorkSpaceRolesSetICollectionOfWorkSpaceRole">
            <summary>设置 Organization.set_WorkSpaceRoles(ICollection`1&lt;WorkSpaceRole&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.physicalAssets1Get">
            <summary>设置 Organization.get_physicalAssets1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.physicalAssets1SetICollectionOfphysicalAsset">
            <summary>设置 Organization.set_physicalAssets1(ICollection`1&lt;physicalAsset&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.physicalAssetsGet">
            <summary>设置 Organization.get_physicalAssets() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.physicalAssetsSetICollectionOfphysicalAsset">
            <summary>设置 Organization.set_physicalAssets(ICollection`1&lt;physicalAsset&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.CertificatesGet">
            <summary>设置 Organization.get_Certificates() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.CertificatesSetString">
            <summary>设置 Organization.set_Certificates(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.CustomOrganizationTypesGet">
            <summary>设置 Organization.get_CustomOrganizationTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.CustomOrganizationTypesSetICollectionOfOrganizationCustomType">
            <summary>设置 Organization.set_CustomOrganizationTypes(ICollection`1&lt;OrganizationCustomType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.DocReadersGet">
            <summary>设置 Organization.get_DocReaders() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.DocReadersSetICollectionOfDocReader">
            <summary>设置 Organization.set_DocReaders(ICollection`1&lt;DocReader&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.EmployeesGet">
            <summary>设置 Organization.get_Employees() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.EmployeesSetICollectionOfEmployee">
            <summary>设置 Organization.set_Employees(ICollection`1&lt;Employee&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.EstablishmentDateGet">
            <summary>设置 Organization.get_EstablishmentDate() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.EstablishmentDateSetNullableOfDateTime">
            <summary>设置 Organization.set_EstablishmentDate(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.IDGet">
            <summary>设置 Organization.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.IDSetInt32">
            <summary>设置 Organization.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.IsValidGet">
            <summary>设置 Organization.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.IsValidSetBoolean">
            <summary>设置 Organization.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.MarkerStringGet">
            <summary>设置 Organization.get_MarkerString() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.MarkerStringSetString">
            <summary>设置 Organization.set_MarkerString(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.OrgaNameGet">
            <summary>设置 Organization.get_OrgaName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.OrgaNameSetString">
            <summary>设置 Organization.set_OrgaName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.OrganizBasicsGet">
            <summary>设置 Organization.get_OrganizBasics() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 Organization.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.Organization1Get">
            <summary>设置 Organization.get_Organization1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.Organization1SetOrganization">
            <summary>设置 Organization.set_Organization1(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.OrganizationCodeGet">
            <summary>设置 Organization.get_OrganizationCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.OrganizationCodeSetString">
            <summary>设置 Organization.set_OrganizationCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.OrganizationEventsGet">
            <summary>设置 Organization.get_OrganizationEvents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.OrganizationEventsSetICollectionOfOrganizationEvent">
            <summary>设置 Organization.set_OrganizationEvents(ICollection`1&lt;OrganizationEvent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.OrganizationOtherNamesGet">
            <summary>设置 Organization.get_OrganizationOtherNames() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.OrganizationOtherNamesSetICollectionOfOrganizationOtherName">
            <summary>设置 Organization.set_OrganizationOtherNames(ICollection`1&lt;OrganizationOtherName&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.OrganizationTransitions1Get">
            <summary>设置 Organization.get_OrganizationTransitions1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.OrganizationTransitions1SetICollectionOfOrganizationTransition">
            <summary>设置 Organization.set_OrganizationTransitions1(ICollection`1&lt;OrganizationTransition&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.OrganizationTransitionsGet">
            <summary>设置 Organization.get_OrganizationTransitions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.OrganizationTransitionsSetICollectionOfOrganizationTransition">
            <summary>设置 Organization.set_OrganizationTransitions(ICollection`1&lt;OrganizationTransition&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.OrganizationsGet">
            <summary>设置 Organization.get_Organizations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.OrganizationsSetICollectionOfOrganization">
            <summary>设置 Organization.set_Organizations(ICollection`1&lt;Organization&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.ParentGet">
            <summary>设置 Organization.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.ParentSetNullableOfInt32">
            <summary>设置 Organization.set_Parent(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.PositionsGet">
            <summary>设置 Organization.get_Positions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.PositionsSetICollectionOfPosition">
            <summary>设置 Organization.set_Positions(ICollection`1&lt;Position&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.PostsGet">
            <summary>设置 Organization.get_Posts() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.PostsSetICollectionOfPost">
            <summary>设置 Organization.set_Posts(ICollection`1&lt;Post&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.ProductsGet">
            <summary>设置 Organization.get_Products() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.ProductsSetICollectionOfProduct">
            <summary>设置 Organization.set_Products(ICollection`1&lt;Product&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.TypeGet">
            <summary>设置 Organization.get_Type() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.TypeSetString">
            <summary>设置 Organization.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.WorkSpaceRolesGet">
            <summary>设置 Organization.get_WorkSpaceRoles() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.WorkSpaceRolesSetICollectionOfWorkSpaceRole">
            <summary>设置 Organization.set_WorkSpaceRoles(ICollection`1&lt;WorkSpaceRole&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.physicalAssets1Get">
            <summary>设置 Organization.get_physicalAssets1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.physicalAssets1SetICollectionOfphysicalAsset">
            <summary>设置 Organization.set_physicalAssets1(ICollection`1&lt;physicalAsset&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.physicalAssetsGet">
            <summary>设置 Organization.get_physicalAssets() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization.AllInstances.physicalAssetsSetICollectionOfphysicalAsset">
            <summary>设置 Organization.set_physicalAssets(ICollection`1&lt;physicalAsset&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType">
            <summary>BCP.Domain.Edmx.OrganizationAssetType 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.#ctor(BCP.Domain.Edmx.OrganizationAssetType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AssetBaseTypeGet">
            <summary>设置 OrganizationAssetType.get_AssetBaseType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AssetBaseTypeIdGet">
            <summary>设置 OrganizationAssetType.get_AssetBaseTypeId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AssetBaseTypeIdSetInt32">
            <summary>设置 OrganizationAssetType.set_AssetBaseTypeId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AssetBaseTypeSetAssetBaseType">
            <summary>设置 OrganizationAssetType.set_AssetBaseType(AssetBaseType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.Constructor">
            <summary>设置 OrganizationAssetType.OrganizationAssetType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.EventTimeGet">
            <summary>设置 OrganizationAssetType.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.EventTimeSetInt64">
            <summary>设置 OrganizationAssetType.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.IdGet">
            <summary>设置 OrganizationAssetType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.IdSetInt32">
            <summary>设置 OrganizationAssetType.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.NameGet">
            <summary>设置 OrganizationAssetType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.NameSetString">
            <summary>设置 OrganizationAssetType.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.NoteGet">
            <summary>设置 OrganizationAssetType.get_Note() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.NoteSetString">
            <summary>设置 OrganizationAssetType.set_Note(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.physicalAssetGet">
            <summary>设置 OrganizationAssetType.get_physicalAsset() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.physicalAssetIdGet">
            <summary>设置 OrganizationAssetType.get_physicalAssetId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.physicalAssetIdSetNullableOfInt32">
            <summary>设置 OrganizationAssetType.set_physicalAssetId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.physicalAssetSetphysicalAsset">
            <summary>设置 OrganizationAssetType.set_physicalAsset(physicalAsset value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AllInstances.AssetBaseTypeGet">
            <summary>设置 OrganizationAssetType.get_AssetBaseType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AllInstances.AssetBaseTypeIdGet">
            <summary>设置 OrganizationAssetType.get_AssetBaseTypeId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AllInstances.AssetBaseTypeIdSetInt32">
            <summary>设置 OrganizationAssetType.set_AssetBaseTypeId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AllInstances.AssetBaseTypeSetAssetBaseType">
            <summary>设置 OrganizationAssetType.set_AssetBaseType(AssetBaseType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AllInstances.EventTimeGet">
            <summary>设置 OrganizationAssetType.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AllInstances.EventTimeSetInt64">
            <summary>设置 OrganizationAssetType.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AllInstances.IdGet">
            <summary>设置 OrganizationAssetType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AllInstances.IdSetInt32">
            <summary>设置 OrganizationAssetType.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AllInstances.NameGet">
            <summary>设置 OrganizationAssetType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AllInstances.NameSetString">
            <summary>设置 OrganizationAssetType.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AllInstances.NoteGet">
            <summary>设置 OrganizationAssetType.get_Note() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AllInstances.NoteSetString">
            <summary>设置 OrganizationAssetType.set_Note(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AllInstances.physicalAssetGet">
            <summary>设置 OrganizationAssetType.get_physicalAsset() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AllInstances.physicalAssetIdGet">
            <summary>设置 OrganizationAssetType.get_physicalAssetId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AllInstances.physicalAssetIdSetNullableOfInt32">
            <summary>设置 OrganizationAssetType.set_physicalAssetId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationAssetType.AllInstances.physicalAssetSetphysicalAsset">
            <summary>设置 OrganizationAssetType.set_physicalAsset(physicalAsset value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType">
            <summary>BCP.Domain.Edmx.OrganizationCustomType 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.#ctor(BCP.Domain.Edmx.OrganizationCustomType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.Constructor">
            <summary>设置 OrganizationCustomType.OrganizationCustomType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.CustomCategoryGet">
            <summary>设置 OrganizationCustomType.get_CustomCategory() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.CustomCategoryIDGet">
            <summary>设置 OrganizationCustomType.get_CustomCategoryID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.CustomCategoryIDSetInt32">
            <summary>设置 OrganizationCustomType.set_CustomCategoryID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.CustomCategorySetCustomCategory">
            <summary>设置 OrganizationCustomType.set_CustomCategory(CustomCategory value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.IDGet">
            <summary>设置 OrganizationCustomType.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.IDSetInt32">
            <summary>设置 OrganizationCustomType.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.NoteGet">
            <summary>设置 OrganizationCustomType.get_Note() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.NoteSetString">
            <summary>设置 OrganizationCustomType.set_Note(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.OrganizationGet">
            <summary>设置 OrganizationCustomType.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.OrganizationIDGet">
            <summary>设置 OrganizationCustomType.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.OrganizationIDSetInt32">
            <summary>设置 OrganizationCustomType.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.OrganizationSetOrganization">
            <summary>设置 OrganizationCustomType.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.AllInstances.CustomCategoryGet">
            <summary>设置 OrganizationCustomType.get_CustomCategory() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.AllInstances.CustomCategoryIDGet">
            <summary>设置 OrganizationCustomType.get_CustomCategoryID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.AllInstances.CustomCategoryIDSetInt32">
            <summary>设置 OrganizationCustomType.set_CustomCategoryID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.AllInstances.CustomCategorySetCustomCategory">
            <summary>设置 OrganizationCustomType.set_CustomCategory(CustomCategory value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.AllInstances.IDGet">
            <summary>设置 OrganizationCustomType.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.AllInstances.IDSetInt32">
            <summary>设置 OrganizationCustomType.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.AllInstances.NoteGet">
            <summary>设置 OrganizationCustomType.get_Note() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.AllInstances.NoteSetString">
            <summary>设置 OrganizationCustomType.set_Note(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.AllInstances.OrganizationGet">
            <summary>设置 OrganizationCustomType.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.AllInstances.OrganizationIDGet">
            <summary>设置 OrganizationCustomType.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.AllInstances.OrganizationIDSetInt32">
            <summary>设置 OrganizationCustomType.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationCustomType.AllInstances.OrganizationSetOrganization">
            <summary>设置 OrganizationCustomType.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent">
            <summary>BCP.Domain.Edmx.OrganizationEvent 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.#ctor(BCP.Domain.Edmx.OrganizationEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.Constructor">
            <summary>设置 OrganizationEvent.OrganizationEvent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.EventContentGet">
            <summary>设置 OrganizationEvent.get_EventContent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.EventContentSetString">
            <summary>设置 OrganizationEvent.set_EventContent(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.EventNameGet">
            <summary>设置 OrganizationEvent.get_EventName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.EventNameSetString">
            <summary>设置 OrganizationEvent.set_EventName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.EventStateGet">
            <summary>设置 OrganizationEvent.get_EventState() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.EventStateSetString">
            <summary>设置 OrganizationEvent.set_EventState(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.EventTypeGet">
            <summary>设置 OrganizationEvent.get_EventType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.EventTypeSetString">
            <summary>设置 OrganizationEvent.set_EventType(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.HanderGet">
            <summary>设置 OrganizationEvent.get_Hander() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.HanderSectionGet">
            <summary>设置 OrganizationEvent.get_HanderSection() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.HanderSectionSetString">
            <summary>设置 OrganizationEvent.set_HanderSection(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.HanderSetString">
            <summary>设置 OrganizationEvent.set_Hander(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.IDGet">
            <summary>设置 OrganizationEvent.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.IDSetInt32">
            <summary>设置 OrganizationEvent.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.OrganizationGet">
            <summary>设置 OrganizationEvent.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.OrganizationIDGet">
            <summary>设置 OrganizationEvent.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.OrganizationIDSetInt32">
            <summary>设置 OrganizationEvent.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.OrganizationSetOrganization">
            <summary>设置 OrganizationEvent.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.ResultGet">
            <summary>设置 OrganizationEvent.get_Result() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.ResultSetString">
            <summary>设置 OrganizationEvent.set_Result(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.EventContentGet">
            <summary>设置 OrganizationEvent.get_EventContent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.EventContentSetString">
            <summary>设置 OrganizationEvent.set_EventContent(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.EventNameGet">
            <summary>设置 OrganizationEvent.get_EventName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.EventNameSetString">
            <summary>设置 OrganizationEvent.set_EventName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.EventStateGet">
            <summary>设置 OrganizationEvent.get_EventState() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.EventStateSetString">
            <summary>设置 OrganizationEvent.set_EventState(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.EventTypeGet">
            <summary>设置 OrganizationEvent.get_EventType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.EventTypeSetString">
            <summary>设置 OrganizationEvent.set_EventType(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.HanderGet">
            <summary>设置 OrganizationEvent.get_Hander() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.HanderSectionGet">
            <summary>设置 OrganizationEvent.get_HanderSection() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.HanderSectionSetString">
            <summary>设置 OrganizationEvent.set_HanderSection(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.HanderSetString">
            <summary>设置 OrganizationEvent.set_Hander(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.IDGet">
            <summary>设置 OrganizationEvent.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.IDSetInt32">
            <summary>设置 OrganizationEvent.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.OrganizationGet">
            <summary>设置 OrganizationEvent.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.OrganizationIDGet">
            <summary>设置 OrganizationEvent.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.OrganizationIDSetInt32">
            <summary>设置 OrganizationEvent.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.OrganizationSetOrganization">
            <summary>设置 OrganizationEvent.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.ResultGet">
            <summary>设置 OrganizationEvent.get_Result() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationEvent.AllInstances.ResultSetString">
            <summary>设置 OrganizationEvent.set_Result(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName">
            <summary>BCP.Domain.Edmx.OrganizationOtherName 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.#ctor(BCP.Domain.Edmx.OrganizationOtherName)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.Constructor">
            <summary>设置 OrganizationOtherName.OrganizationOtherName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.IDGet">
            <summary>设置 OrganizationOtherName.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.IDSetInt32">
            <summary>设置 OrganizationOtherName.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.OrganizationGet">
            <summary>设置 OrganizationOtherName.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.OrganizationIDGet">
            <summary>设置 OrganizationOtherName.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.OrganizationIDSetInt32">
            <summary>设置 OrganizationOtherName.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.OrganizationSetOrganization">
            <summary>设置 OrganizationOtherName.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.OtherNameGet">
            <summary>设置 OrganizationOtherName.get_OtherName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.OtherNameSetString">
            <summary>设置 OrganizationOtherName.set_OtherName(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.AllInstances.IDGet">
            <summary>设置 OrganizationOtherName.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.AllInstances.IDSetInt32">
            <summary>设置 OrganizationOtherName.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.AllInstances.OrganizationGet">
            <summary>设置 OrganizationOtherName.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.AllInstances.OrganizationIDGet">
            <summary>设置 OrganizationOtherName.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.AllInstances.OrganizationIDSetInt32">
            <summary>设置 OrganizationOtherName.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.AllInstances.OrganizationSetOrganization">
            <summary>设置 OrganizationOtherName.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.AllInstances.OtherNameGet">
            <summary>设置 OrganizationOtherName.get_OtherName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationOtherName.AllInstances.OtherNameSetString">
            <summary>设置 OrganizationOtherName.set_OtherName(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition">
            <summary>BCP.Domain.Edmx.OrganizationTransition 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.#ctor(BCP.Domain.Edmx.OrganizationTransition)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.CauseGet">
            <summary>设置 OrganizationTransition.get_Cause() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.CauseSetString">
            <summary>设置 OrganizationTransition.set_Cause(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.Constructor">
            <summary>设置 OrganizationTransition.OrganizationTransition() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.DescriptionGet">
            <summary>设置 OrganizationTransition.get_Description() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.DescriptionSetString">
            <summary>设置 OrganizationTransition.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.FundAlterationGet">
            <summary>设置 OrganizationTransition.get_FundAlteration() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.FundAlterationSetString">
            <summary>设置 OrganizationTransition.set_FundAlteration(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.IDGet">
            <summary>设置 OrganizationTransition.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.IDSetInt32">
            <summary>设置 OrganizationTransition.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.NewOrganGet">
            <summary>设置 OrganizationTransition.get_NewOrgan() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.NewOrganSetNullableOfInt32">
            <summary>设置 OrganizationTransition.set_NewOrgan(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.OldOrganGet">
            <summary>设置 OrganizationTransition.get_OldOrgan() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.OldOrganSetNullableOfInt32">
            <summary>设置 OrganizationTransition.set_OldOrgan(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.Organization1Get">
            <summary>设置 OrganizationTransition.get_Organization1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.Organization1SetOrganization">
            <summary>设置 OrganizationTransition.set_Organization1(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.OrganizationGet">
            <summary>设置 OrganizationTransition.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.OrganizationSetOrganization">
            <summary>设置 OrganizationTransition.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.OthersGet">
            <summary>设置 OrganizationTransition.get_Others() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.OthersSetString">
            <summary>设置 OrganizationTransition.set_Others(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.PropertyAlterationGet">
            <summary>设置 OrganizationTransition.get_PropertyAlteration() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.PropertyAlterationSetString">
            <summary>设置 OrganizationTransition.set_PropertyAlteration(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.TimeGet">
            <summary>设置 OrganizationTransition.get_Time() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.TimeSetDateTime">
            <summary>设置 OrganizationTransition.set_Time(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.CauseGet">
            <summary>设置 OrganizationTransition.get_Cause() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.CauseSetString">
            <summary>设置 OrganizationTransition.set_Cause(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.DescriptionGet">
            <summary>设置 OrganizationTransition.get_Description() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.DescriptionSetString">
            <summary>设置 OrganizationTransition.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.FundAlterationGet">
            <summary>设置 OrganizationTransition.get_FundAlteration() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.FundAlterationSetString">
            <summary>设置 OrganizationTransition.set_FundAlteration(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.IDGet">
            <summary>设置 OrganizationTransition.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.IDSetInt32">
            <summary>设置 OrganizationTransition.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.NewOrganGet">
            <summary>设置 OrganizationTransition.get_NewOrgan() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.NewOrganSetNullableOfInt32">
            <summary>设置 OrganizationTransition.set_NewOrgan(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.OldOrganGet">
            <summary>设置 OrganizationTransition.get_OldOrgan() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.OldOrganSetNullableOfInt32">
            <summary>设置 OrganizationTransition.set_OldOrgan(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.Organization1Get">
            <summary>设置 OrganizationTransition.get_Organization1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.Organization1SetOrganization">
            <summary>设置 OrganizationTransition.set_Organization1(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.OrganizationGet">
            <summary>设置 OrganizationTransition.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.OrganizationSetOrganization">
            <summary>设置 OrganizationTransition.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.OthersGet">
            <summary>设置 OrganizationTransition.get_Others() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.OthersSetString">
            <summary>设置 OrganizationTransition.set_Others(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.PropertyAlterationGet">
            <summary>设置 OrganizationTransition.get_PropertyAlteration() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.PropertyAlterationSetString">
            <summary>设置 OrganizationTransition.set_PropertyAlteration(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.TimeGet">
            <summary>设置 OrganizationTransition.get_Time() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganizationTransition.AllInstances.TimeSetDateTime">
            <summary>设置 OrganizationTransition.set_Time(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable">
            <summary>BCP.Domain.Edmx.Organization_ContacTable 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.#ctor(BCP.Domain.Edmx.Organization_ContacTable)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.Constructor">
            <summary>设置 Organization_ContacTable.Organization_ContacTable() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.EventTimeGet">
            <summary>设置 Organization_ContacTable.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.EventTimeSetInt64">
            <summary>设置 Organization_ContacTable.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.IDGet">
            <summary>设置 Organization_ContacTable.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.IDSetInt32">
            <summary>设置 Organization_ContacTable.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.IsValidGet">
            <summary>设置 Organization_ContacTable.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.IsValidSetBoolean">
            <summary>设置 Organization_ContacTable.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.NameGet">
            <summary>设置 Organization_ContacTable.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.NameSetString">
            <summary>设置 Organization_ContacTable.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.OrganizBasicGet">
            <summary>设置 Organization_ContacTable.get_OrganizBasic() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.OrganizBasicIDGet">
            <summary>设置 Organization_ContacTable.get_OrganizBasicID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.OrganizBasicIDSetInt32">
            <summary>设置 Organization_ContacTable.set_OrganizBasicID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.OrganizBasicSetOrganizBasic">
            <summary>设置 Organization_ContacTable.set_OrganizBasic(OrganizBasic value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.ToolsGet">
            <summary>设置 Organization_ContacTable.get_Tools() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.ToolsSetString">
            <summary>设置 Organization_ContacTable.set_Tools(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.ValueGet">
            <summary>设置 Organization_ContacTable.get_Value() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.ValueSetString">
            <summary>设置 Organization_ContacTable.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.AllInstances.EventTimeGet">
            <summary>设置 Organization_ContacTable.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.AllInstances.EventTimeSetInt64">
            <summary>设置 Organization_ContacTable.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.AllInstances.IDGet">
            <summary>设置 Organization_ContacTable.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.AllInstances.IDSetInt32">
            <summary>设置 Organization_ContacTable.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.AllInstances.IsValidGet">
            <summary>设置 Organization_ContacTable.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.AllInstances.IsValidSetBoolean">
            <summary>设置 Organization_ContacTable.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.AllInstances.NameGet">
            <summary>设置 Organization_ContacTable.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.AllInstances.NameSetString">
            <summary>设置 Organization_ContacTable.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.AllInstances.OrganizBasicGet">
            <summary>设置 Organization_ContacTable.get_OrganizBasic() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.AllInstances.OrganizBasicIDGet">
            <summary>设置 Organization_ContacTable.get_OrganizBasicID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.AllInstances.OrganizBasicIDSetInt32">
            <summary>设置 Organization_ContacTable.set_OrganizBasicID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.AllInstances.OrganizBasicSetOrganizBasic">
            <summary>设置 Organization_ContacTable.set_OrganizBasic(OrganizBasic value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.AllInstances.ToolsGet">
            <summary>设置 Organization_ContacTable.get_Tools() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.AllInstances.ToolsSetString">
            <summary>设置 Organization_ContacTable.set_Tools(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.AllInstances.ValueGet">
            <summary>设置 Organization_ContacTable.get_Value() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_ContacTable.AllInstances.ValueSetString">
            <summary>设置 Organization_ContacTable.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganization_Type">
            <summary>BCP.Domain.Edmx.Organization_Type 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.#ctor(BCP.Domain.Edmx.Organization_Type)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.Constructor">
            <summary>设置 Organization_Type.Organization_Type() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.DescriptGet">
            <summary>设置 Organization_Type.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.DescriptSetString">
            <summary>设置 Organization_Type.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.EventTimeGet">
            <summary>设置 Organization_Type.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.EventTimeSetInt64">
            <summary>设置 Organization_Type.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.IDGet">
            <summary>设置 Organization_Type.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.IDSetInt32">
            <summary>设置 Organization_Type.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.ONameGet">
            <summary>设置 Organization_Type.get_OName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.ONameSetString">
            <summary>设置 Organization_Type.set_OName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.OcodeGet">
            <summary>设置 Organization_Type.get_Ocode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.OcodeSetString">
            <summary>设置 Organization_Type.set_Ocode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.OrganizBasicsGet">
            <summary>设置 Organization_Type.get_OrganizBasics() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 Organization_Type.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.Organization_Type1Get">
            <summary>设置 Organization_Type.get_Organization_Type1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.Organization_Type1SetICollectionOfOrganization_Type">
            <summary>设置 Organization_Type.set_Organization_Type1(ICollection`1&lt;Organization_Type&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.Organization_Type2Get">
            <summary>设置 Organization_Type.get_Organization_Type2() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.Organization_Type2SetOrganization_Type">
            <summary>设置 Organization_Type.set_Organization_Type2(Organization_Type value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.ParentCodeGet">
            <summary>设置 Organization_Type.get_ParentCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.ParentCodeSetString">
            <summary>设置 Organization_Type.set_ParentCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.ParentGet">
            <summary>设置 Organization_Type.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.ParentSetNullableOfInt32">
            <summary>设置 Organization_Type.set_Parent(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.DescriptGet">
            <summary>设置 Organization_Type.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.DescriptSetString">
            <summary>设置 Organization_Type.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.EventTimeGet">
            <summary>设置 Organization_Type.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.EventTimeSetInt64">
            <summary>设置 Organization_Type.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.IDGet">
            <summary>设置 Organization_Type.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.IDSetInt32">
            <summary>设置 Organization_Type.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.ONameGet">
            <summary>设置 Organization_Type.get_OName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.ONameSetString">
            <summary>设置 Organization_Type.set_OName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.OcodeGet">
            <summary>设置 Organization_Type.get_Ocode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.OcodeSetString">
            <summary>设置 Organization_Type.set_Ocode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.OrganizBasicsGet">
            <summary>设置 Organization_Type.get_OrganizBasics() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 Organization_Type.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.Organization_Type1Get">
            <summary>设置 Organization_Type.get_Organization_Type1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.Organization_Type1SetICollectionOfOrganization_Type">
            <summary>设置 Organization_Type.set_Organization_Type1(ICollection`1&lt;Organization_Type&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.Organization_Type2Get">
            <summary>设置 Organization_Type.get_Organization_Type2() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.Organization_Type2SetOrganization_Type">
            <summary>设置 Organization_Type.set_Organization_Type2(Organization_Type value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.ParentCodeGet">
            <summary>设置 Organization_Type.get_ParentCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.ParentCodeSetString">
            <summary>设置 Organization_Type.set_ParentCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.ParentGet">
            <summary>设置 Organization_Type.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimOrganization_Type.AllInstances.ParentSetNullableOfInt32">
            <summary>设置 Organization_Type.set_Parent(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimPosition">
            <summary>BCP.Domain.Edmx.Position 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimPosition.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimPosition.#ctor(BCP.Domain.Edmx.Position)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimPosition.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimPosition.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.Constructor">
            <summary>设置 Position.Position() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.EmployeesGet">
            <summary>设置 Position.get_Employees() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.EmployeesSetICollectionOfEmployee">
            <summary>设置 Position.set_Employees(ICollection`1&lt;Employee&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.IDGet">
            <summary>设置 Position.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.IDSetInt32">
            <summary>设置 Position.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.IsValidGet">
            <summary>设置 Position.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.IsValidSetBoolean">
            <summary>设置 Position.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.NameGet">
            <summary>设置 Position.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.NameSetString">
            <summary>设置 Position.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.OrganizationGet">
            <summary>设置 Position.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.OrganizationIDGet">
            <summary>设置 Position.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.OrganizationIDSetInt32">
            <summary>设置 Position.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.OrganizationSetOrganization">
            <summary>设置 Position.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.Position1Get">
            <summary>设置 Position.get_Position1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.Position1SetPosition">
            <summary>设置 Position.set_Position1(Position value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.PositionIDGet">
            <summary>设置 Position.get_PositionID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.PositionIDSetNullableOfInt32">
            <summary>设置 Position.set_PositionID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.PositionLevelGet">
            <summary>设置 Position.get_PositionLevel() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.PositionLevelSetString">
            <summary>设置 Position.set_PositionLevel(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.PositionTypeGet">
            <summary>设置 Position.get_PositionType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.PositionTypeSetString">
            <summary>设置 Position.set_PositionType(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.PositionsGet">
            <summary>设置 Position.get_Positions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.PositionsSetICollectionOfPosition">
            <summary>设置 Position.set_Positions(ICollection`1&lt;Position&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.PostRequireGet">
            <summary>设置 Position.get_PostRequire() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.PostRequireIDGet">
            <summary>设置 Position.get_PostRequireID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.PostRequireIDSetNullableOfInt32">
            <summary>设置 Position.set_PostRequireID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.PostRequireSetPostRequire">
            <summary>设置 Position.set_PostRequire(PostRequire value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.PostsGet">
            <summary>设置 Position.get_Posts() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.PostsSetICollectionOfPost">
            <summary>设置 Position.set_Posts(ICollection`1&lt;Post&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.TaskNatureGet">
            <summary>设置 Position.get_TaskNature() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.TaskNatureSetString">
            <summary>设置 Position.set_TaskNature(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.EmployeesGet">
            <summary>设置 Position.get_Employees() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.EmployeesSetICollectionOfEmployee">
            <summary>设置 Position.set_Employees(ICollection`1&lt;Employee&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.IDGet">
            <summary>设置 Position.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.IDSetInt32">
            <summary>设置 Position.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.IsValidGet">
            <summary>设置 Position.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.IsValidSetBoolean">
            <summary>设置 Position.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.NameGet">
            <summary>设置 Position.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.NameSetString">
            <summary>设置 Position.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.OrganizationGet">
            <summary>设置 Position.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.OrganizationIDGet">
            <summary>设置 Position.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.OrganizationIDSetInt32">
            <summary>设置 Position.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.OrganizationSetOrganization">
            <summary>设置 Position.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.Position1Get">
            <summary>设置 Position.get_Position1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.Position1SetPosition">
            <summary>设置 Position.set_Position1(Position value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.PositionIDGet">
            <summary>设置 Position.get_PositionID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.PositionIDSetNullableOfInt32">
            <summary>设置 Position.set_PositionID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.PositionLevelGet">
            <summary>设置 Position.get_PositionLevel() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.PositionLevelSetString">
            <summary>设置 Position.set_PositionLevel(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.PositionTypeGet">
            <summary>设置 Position.get_PositionType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.PositionTypeSetString">
            <summary>设置 Position.set_PositionType(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.PositionsGet">
            <summary>设置 Position.get_Positions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.PositionsSetICollectionOfPosition">
            <summary>设置 Position.set_Positions(ICollection`1&lt;Position&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.PostRequireGet">
            <summary>设置 Position.get_PostRequire() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.PostRequireIDGet">
            <summary>设置 Position.get_PostRequireID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.PostRequireIDSetNullableOfInt32">
            <summary>设置 Position.set_PostRequireID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.PostRequireSetPostRequire">
            <summary>设置 Position.set_PostRequire(PostRequire value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.PostsGet">
            <summary>设置 Position.get_Posts() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.PostsSetICollectionOfPost">
            <summary>设置 Position.set_Posts(ICollection`1&lt;Post&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.TaskNatureGet">
            <summary>设置 Position.get_TaskNature() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPosition.AllInstances.TaskNatureSetString">
            <summary>设置 Position.set_TaskNature(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimPost">
            <summary>BCP.Domain.Edmx.Post 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimPost.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimPost.#ctor(BCP.Domain.Edmx.Post)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimPost.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimPost.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.Authorizations1Get">
            <summary>设置 Post.get_Authorizations1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.Authorizations1SetICollectionOfAuthorization">
            <summary>设置 Post.set_Authorizations1(ICollection`1&lt;Authorization&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AuthorizationsGet">
            <summary>设置 Post.get_Authorizations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AuthorizationsSetICollectionOfAuthorization">
            <summary>设置 Post.set_Authorizations(ICollection`1&lt;Authorization&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.Constructor">
            <summary>设置 Post.Post() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.DescriptGet">
            <summary>设置 Post.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.DescriptSetString">
            <summary>设置 Post.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.DocReadersGet">
            <summary>设置 Post.get_DocReaders() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.DocReadersSetICollectionOfDocReader">
            <summary>设置 Post.set_DocReaders(ICollection`1&lt;DocReader&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.DocSendersGet">
            <summary>设置 Post.get_DocSenders() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.DocSendersSetICollectionOfDocSender">
            <summary>设置 Post.set_DocSenders(ICollection`1&lt;DocSender&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.EmployeeGet">
            <summary>设置 Post.get_Employee() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.EmployeeIdGet">
            <summary>设置 Post.get_EmployeeId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.EmployeeIdSetNullableOfInt32">
            <summary>设置 Post.set_EmployeeId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.EmployeeSetEmployee">
            <summary>设置 Post.set_Employee(Employee value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.EventTimeGet">
            <summary>设置 Post.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.EventTimeSetInt64">
            <summary>设置 Post.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.IDGet">
            <summary>设置 Post.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.IDSetInt32">
            <summary>设置 Post.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.IsValidGet">
            <summary>设置 Post.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.IsValidSetBoolean">
            <summary>设置 Post.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.JobChangesGet">
            <summary>设置 Post.get_JobChanges() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.JobChangesSetICollectionOfJobChange">
            <summary>设置 Post.set_JobChanges(ICollection`1&lt;JobChange&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.MarkerStringGet">
            <summary>设置 Post.get_MarkerString() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.MarkerStringSetString">
            <summary>设置 Post.set_MarkerString(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.OrganizationGet">
            <summary>设置 Post.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.OrganizationIDGet">
            <summary>设置 Post.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.OrganizationIDSetInt32">
            <summary>设置 Post.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.OrganizationSetOrganization">
            <summary>设置 Post.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.PositionGet">
            <summary>设置 Post.get_Position() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.PositionIDGet">
            <summary>设置 Post.get_PositionID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.PositionIDSetNullableOfInt32">
            <summary>设置 Post.set_PositionID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.PositionSetPosition">
            <summary>设置 Post.set_Position(Position value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.Post1Get">
            <summary>设置 Post.get_Post1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.Post1SetPost">
            <summary>设置 Post.set_Post1(Post value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.PostIDGet">
            <summary>设置 Post.get_PostID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.PostIDSetNullableOfInt32">
            <summary>设置 Post.set_PostID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.PostNameGet">
            <summary>设置 Post.get_PostName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.PostNameSetString">
            <summary>设置 Post.set_PostName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.PostsGet">
            <summary>设置 Post.get_Posts() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.PostsSetICollectionOfPost">
            <summary>设置 Post.set_Posts(ICollection`1&lt;Post&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.Authorizations1Get">
            <summary>设置 Post.get_Authorizations1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.Authorizations1SetICollectionOfAuthorization">
            <summary>设置 Post.set_Authorizations1(ICollection`1&lt;Authorization&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.AuthorizationsGet">
            <summary>设置 Post.get_Authorizations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.AuthorizationsSetICollectionOfAuthorization">
            <summary>设置 Post.set_Authorizations(ICollection`1&lt;Authorization&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.DescriptGet">
            <summary>设置 Post.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.DescriptSetString">
            <summary>设置 Post.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.DocReadersGet">
            <summary>设置 Post.get_DocReaders() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.DocReadersSetICollectionOfDocReader">
            <summary>设置 Post.set_DocReaders(ICollection`1&lt;DocReader&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.DocSendersGet">
            <summary>设置 Post.get_DocSenders() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.DocSendersSetICollectionOfDocSender">
            <summary>设置 Post.set_DocSenders(ICollection`1&lt;DocSender&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.EmployeeGet">
            <summary>设置 Post.get_Employee() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.EmployeeIdGet">
            <summary>设置 Post.get_EmployeeId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.EmployeeIdSetNullableOfInt32">
            <summary>设置 Post.set_EmployeeId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.EmployeeSetEmployee">
            <summary>设置 Post.set_Employee(Employee value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.EventTimeGet">
            <summary>设置 Post.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.EventTimeSetInt64">
            <summary>设置 Post.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.IDGet">
            <summary>设置 Post.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.IDSetInt32">
            <summary>设置 Post.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.IsValidGet">
            <summary>设置 Post.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.IsValidSetBoolean">
            <summary>设置 Post.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.JobChangesGet">
            <summary>设置 Post.get_JobChanges() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.JobChangesSetICollectionOfJobChange">
            <summary>设置 Post.set_JobChanges(ICollection`1&lt;JobChange&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.MarkerStringGet">
            <summary>设置 Post.get_MarkerString() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.MarkerStringSetString">
            <summary>设置 Post.set_MarkerString(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.OrganizationGet">
            <summary>设置 Post.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.OrganizationIDGet">
            <summary>设置 Post.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.OrganizationIDSetInt32">
            <summary>设置 Post.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.OrganizationSetOrganization">
            <summary>设置 Post.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.PositionGet">
            <summary>设置 Post.get_Position() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.PositionIDGet">
            <summary>设置 Post.get_PositionID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.PositionIDSetNullableOfInt32">
            <summary>设置 Post.set_PositionID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.PositionSetPosition">
            <summary>设置 Post.set_Position(Position value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.Post1Get">
            <summary>设置 Post.get_Post1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.Post1SetPost">
            <summary>设置 Post.set_Post1(Post value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.PostIDGet">
            <summary>设置 Post.get_PostID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.PostIDSetNullableOfInt32">
            <summary>设置 Post.set_PostID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.PostNameGet">
            <summary>设置 Post.get_PostName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.PostNameSetString">
            <summary>设置 Post.set_PostName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.PostsGet">
            <summary>设置 Post.get_Posts() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPost.AllInstances.PostsSetICollectionOfPost">
            <summary>设置 Post.set_Posts(ICollection`1&lt;Post&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimPostRequire">
            <summary>BCP.Domain.Edmx.PostRequire 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimPostRequire.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimPostRequire.#ctor(BCP.Domain.Edmx.PostRequire)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimPostRequire.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimPostRequire.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.Constructor">
            <summary>设置 PostRequire.PostRequire() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.DescriptionGet">
            <summary>设置 PostRequire.get_Description() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.DescriptionSetString">
            <summary>设置 PostRequire.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.EducationRequirementGet">
            <summary>设置 PostRequire.get_EducationRequirement() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.EducationRequirementSetString">
            <summary>设置 PostRequire.set_EducationRequirement(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.IDGet">
            <summary>设置 PostRequire.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.IDSetInt32">
            <summary>设置 PostRequire.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.NameGet">
            <summary>设置 PostRequire.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.NameSetString">
            <summary>设置 PostRequire.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.PositionsGet">
            <summary>设置 PostRequire.get_Positions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.PositionsSetICollectionOfPosition">
            <summary>设置 PostRequire.set_Positions(ICollection`1&lt;Position&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.RanksGet">
            <summary>设置 PostRequire.get_Ranks() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.RanksSetString">
            <summary>设置 PostRequire.set_Ranks(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.SkillRequirementGet">
            <summary>设置 PostRequire.get_SkillRequirement() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.SkillRequirementSetString">
            <summary>设置 PostRequire.set_SkillRequirement(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.SpecializedGet">
            <summary>设置 PostRequire.get_Specialized() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.SpecializedIDGet">
            <summary>设置 PostRequire.get_SpecializedID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.SpecializedIDSetInt32">
            <summary>设置 PostRequire.set_SpecializedID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.SpecializedSetSpecialized">
            <summary>设置 PostRequire.set_Specialized(Specialized value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.StateGet">
            <summary>设置 PostRequire.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.StateSetString">
            <summary>设置 PostRequire.set_State(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.DescriptionGet">
            <summary>设置 PostRequire.get_Description() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.DescriptionSetString">
            <summary>设置 PostRequire.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.EducationRequirementGet">
            <summary>设置 PostRequire.get_EducationRequirement() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.EducationRequirementSetString">
            <summary>设置 PostRequire.set_EducationRequirement(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.IDGet">
            <summary>设置 PostRequire.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.IDSetInt32">
            <summary>设置 PostRequire.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.NameGet">
            <summary>设置 PostRequire.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.NameSetString">
            <summary>设置 PostRequire.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.PositionsGet">
            <summary>设置 PostRequire.get_Positions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.PositionsSetICollectionOfPosition">
            <summary>设置 PostRequire.set_Positions(ICollection`1&lt;Position&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.RanksGet">
            <summary>设置 PostRequire.get_Ranks() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.RanksSetString">
            <summary>设置 PostRequire.set_Ranks(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.SkillRequirementGet">
            <summary>设置 PostRequire.get_SkillRequirement() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.SkillRequirementSetString">
            <summary>设置 PostRequire.set_SkillRequirement(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.SpecializedGet">
            <summary>设置 PostRequire.get_Specialized() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.SpecializedIDGet">
            <summary>设置 PostRequire.get_SpecializedID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.SpecializedIDSetInt32">
            <summary>设置 PostRequire.set_SpecializedID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.SpecializedSetSpecialized">
            <summary>设置 PostRequire.set_Specialized(Specialized value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.StateGet">
            <summary>设置 PostRequire.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimPostRequire.AllInstances.StateSetString">
            <summary>设置 PostRequire.set_State(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimProduct">
            <summary>BCP.Domain.Edmx.Product 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProduct.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProduct.#ctor(BCP.Domain.Edmx.Product)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProduct.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProduct.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.Constructor">
            <summary>设置 Product.Product() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.EventTimeGet">
            <summary>设置 Product.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.EventTimeSetInt64">
            <summary>设置 Product.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.FCodeGet">
            <summary>设置 Product.get_FCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.FCodeSetString">
            <summary>设置 Product.set_FCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.IdGet">
            <summary>设置 Product.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.IdSetInt32">
            <summary>设置 Product.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.OrganizBasicGet">
            <summary>设置 Product.get_OrganizBasic() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.OrganizBasicIDGet">
            <summary>设置 Product.get_OrganizBasicID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.OrganizBasicIDSetNullableOfInt32">
            <summary>设置 Product.set_OrganizBasicID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.OrganizBasicSetOrganizBasic">
            <summary>设置 Product.set_OrganizBasic(OrganizBasic value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.OrganizationGet">
            <summary>设置 Product.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.OrganizationIDGet">
            <summary>设置 Product.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.OrganizationIDSetNullableOfInt32">
            <summary>设置 Product.set_OrganizationID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.OrganizationSetOrganization">
            <summary>设置 Product.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.PCodeGet">
            <summary>设置 Product.get_PCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.PCodeSetString">
            <summary>设置 Product.set_PCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.PModelGet">
            <summary>设置 Product.get_PModel() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.PModelSetString">
            <summary>设置 Product.set_PModel(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.PnameGet">
            <summary>设置 Product.get_Pname() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.PnameSetString">
            <summary>设置 Product.set_Pname(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.ProductCompositions1Get">
            <summary>设置 Product.get_ProductCompositions1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.ProductCompositions1SetICollectionOfProductComposition">
            <summary>设置 Product.set_ProductCompositions1(ICollection`1&lt;ProductComposition&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.ProductCustomTypesGet">
            <summary>设置 Product.get_ProductCustomTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.ProductCustomTypesSetICollectionOfProductCustomType">
            <summary>设置 Product.set_ProductCustomTypes(ICollection`1&lt;ProductCustomType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.ProductEventsGet">
            <summary>设置 Product.get_ProductEvents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.ProductEventsSetICollectionOfProductEvent">
            <summary>设置 Product.set_ProductEvents(ICollection`1&lt;ProductEvent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.ProductStandardGet">
            <summary>设置 Product.get_ProductStandard() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.ProductStandardIDGet">
            <summary>设置 Product.get_ProductStandardID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.ProductStandardIDSetInt32">
            <summary>设置 Product.set_ProductStandardID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.ProductStandardSetProductStandard">
            <summary>设置 Product.set_ProductStandard(ProductStandard value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.SCodeGet">
            <summary>设置 Product.get_SCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.SCodeSetString">
            <summary>设置 Product.set_SCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.UnitsGet">
            <summary>设置 Product.get_Units() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.UnitsSetString">
            <summary>设置 Product.set_Units(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.physicalAssetsGet">
            <summary>设置 Product.get_physicalAssets() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.physicalAssetsSetICollectionOfphysicalAsset">
            <summary>设置 Product.set_physicalAssets(ICollection`1&lt;physicalAsset&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.EventTimeGet">
            <summary>设置 Product.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.EventTimeSetInt64">
            <summary>设置 Product.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.FCodeGet">
            <summary>设置 Product.get_FCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.FCodeSetString">
            <summary>设置 Product.set_FCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.IdGet">
            <summary>设置 Product.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.IdSetInt32">
            <summary>设置 Product.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.OrganizBasicGet">
            <summary>设置 Product.get_OrganizBasic() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.OrganizBasicIDGet">
            <summary>设置 Product.get_OrganizBasicID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.OrganizBasicIDSetNullableOfInt32">
            <summary>设置 Product.set_OrganizBasicID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.OrganizBasicSetOrganizBasic">
            <summary>设置 Product.set_OrganizBasic(OrganizBasic value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.OrganizationGet">
            <summary>设置 Product.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.OrganizationIDGet">
            <summary>设置 Product.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.OrganizationIDSetNullableOfInt32">
            <summary>设置 Product.set_OrganizationID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.OrganizationSetOrganization">
            <summary>设置 Product.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.PCodeGet">
            <summary>设置 Product.get_PCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.PCodeSetString">
            <summary>设置 Product.set_PCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.PModelGet">
            <summary>设置 Product.get_PModel() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.PModelSetString">
            <summary>设置 Product.set_PModel(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.PnameGet">
            <summary>设置 Product.get_Pname() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.PnameSetString">
            <summary>设置 Product.set_Pname(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.ProductCompositions1Get">
            <summary>设置 Product.get_ProductCompositions1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.ProductCompositions1SetICollectionOfProductComposition">
            <summary>设置 Product.set_ProductCompositions1(ICollection`1&lt;ProductComposition&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.ProductCustomTypesGet">
            <summary>设置 Product.get_ProductCustomTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.ProductCustomTypesSetICollectionOfProductCustomType">
            <summary>设置 Product.set_ProductCustomTypes(ICollection`1&lt;ProductCustomType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.ProductEventsGet">
            <summary>设置 Product.get_ProductEvents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.ProductEventsSetICollectionOfProductEvent">
            <summary>设置 Product.set_ProductEvents(ICollection`1&lt;ProductEvent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.ProductStandardGet">
            <summary>设置 Product.get_ProductStandard() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.ProductStandardIDGet">
            <summary>设置 Product.get_ProductStandardID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.ProductStandardIDSetInt32">
            <summary>设置 Product.set_ProductStandardID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.ProductStandardSetProductStandard">
            <summary>设置 Product.set_ProductStandard(ProductStandard value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.SCodeGet">
            <summary>设置 Product.get_SCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.SCodeSetString">
            <summary>设置 Product.set_SCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.UnitsGet">
            <summary>设置 Product.get_Units() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.UnitsSetString">
            <summary>设置 Product.set_Units(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.physicalAssetsGet">
            <summary>设置 Product.get_physicalAssets() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProduct.AllInstances.physicalAssetsSetICollectionOfphysicalAsset">
            <summary>设置 Product.set_physicalAssets(ICollection`1&lt;physicalAsset&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimProductComposition">
            <summary>BCP.Domain.Edmx.ProductComposition 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductComposition.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductComposition.#ctor(BCP.Domain.Edmx.ProductComposition)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductComposition.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductComposition.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.ChildProductIdGet">
            <summary>设置 ProductComposition.get_ChildProductId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.ChildProductIdSetInt32">
            <summary>设置 ProductComposition.set_ChildProductId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.Constructor">
            <summary>设置 ProductComposition.ProductComposition() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.EventTimeGet">
            <summary>设置 ProductComposition.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.EventTimeSetInt64">
            <summary>设置 ProductComposition.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.FunctionGet">
            <summary>设置 ProductComposition.get_Function() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.FunctionSetString">
            <summary>设置 ProductComposition.set_Function(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.IdGet">
            <summary>设置 ProductComposition.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.IdSetInt32">
            <summary>设置 ProductComposition.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.Product1Get">
            <summary>设置 ProductComposition.get_Product1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.Product1SetProduct">
            <summary>设置 ProductComposition.set_Product1(Product value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.ProductComposition1Get">
            <summary>设置 ProductComposition.get_ProductComposition1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.ProductComposition1SetProductComposition">
            <summary>设置 ProductComposition.set_ProductComposition1(ProductComposition value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.ProductCompositionIdGet">
            <summary>设置 ProductComposition.get_ProductCompositionId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.ProductCompositionIdSetInt32">
            <summary>设置 ProductComposition.set_ProductCompositionId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.ProductCompositionsGet">
            <summary>设置 ProductComposition.get_ProductCompositions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.ProductCompositionsSetICollectionOfProductComposition">
            <summary>设置 ProductComposition.set_ProductCompositions(ICollection`1&lt;ProductComposition&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.ValueGet">
            <summary>设置 ProductComposition.get_Value() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.ValueSetString">
            <summary>设置 ProductComposition.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.descriptGet">
            <summary>设置 ProductComposition.get_descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.descriptSetString">
            <summary>设置 ProductComposition.set_descript(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.ChildProductIdGet">
            <summary>设置 ProductComposition.get_ChildProductId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.ChildProductIdSetInt32">
            <summary>设置 ProductComposition.set_ChildProductId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.EventTimeGet">
            <summary>设置 ProductComposition.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.EventTimeSetInt64">
            <summary>设置 ProductComposition.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.FunctionGet">
            <summary>设置 ProductComposition.get_Function() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.FunctionSetString">
            <summary>设置 ProductComposition.set_Function(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.IdGet">
            <summary>设置 ProductComposition.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.IdSetInt32">
            <summary>设置 ProductComposition.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.Product1Get">
            <summary>设置 ProductComposition.get_Product1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.Product1SetProduct">
            <summary>设置 ProductComposition.set_Product1(Product value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.ProductComposition1Get">
            <summary>设置 ProductComposition.get_ProductComposition1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.ProductComposition1SetProductComposition">
            <summary>设置 ProductComposition.set_ProductComposition1(ProductComposition value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.ProductCompositionIdGet">
            <summary>设置 ProductComposition.get_ProductCompositionId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.ProductCompositionIdSetInt32">
            <summary>设置 ProductComposition.set_ProductCompositionId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.ProductCompositionsGet">
            <summary>设置 ProductComposition.get_ProductCompositions() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.ProductCompositionsSetICollectionOfProductComposition">
            <summary>设置 ProductComposition.set_ProductCompositions(ICollection`1&lt;ProductComposition&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.ValueGet">
            <summary>设置 ProductComposition.get_Value() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.ValueSetString">
            <summary>设置 ProductComposition.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.descriptGet">
            <summary>设置 ProductComposition.get_descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductComposition.AllInstances.descriptSetString">
            <summary>设置 ProductComposition.set_descript(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory">
            <summary>BCP.Domain.Edmx.ProductCustomCategory 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.#ctor(BCP.Domain.Edmx.ProductCustomCategory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.CategoryNameGet">
            <summary>设置 ProductCustomCategory.get_CategoryName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.CategoryNameSetString">
            <summary>设置 ProductCustomCategory.set_CategoryName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.Constructor">
            <summary>设置 ProductCustomCategory.ProductCustomCategory() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.ContentGet">
            <summary>设置 ProductCustomCategory.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.ContentSetString">
            <summary>设置 ProductCustomCategory.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.IdGet">
            <summary>设置 ProductCustomCategory.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.IdSetInt32">
            <summary>设置 ProductCustomCategory.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.ProductCustomCategoriesGet">
            <summary>设置 ProductCustomCategory.get_ProductCustomCategories() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.ProductCustomCategoriesSetICollectionOfProductCustomCategory">
            <summary>设置 ProductCustomCategory.set_ProductCustomCategories(ICollection`1&lt;ProductCustomCategory&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.ProductCustomCategory1Get">
            <summary>设置 ProductCustomCategory.get_ProductCustomCategory1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.ProductCustomCategory1SetProductCustomCategory">
            <summary>设置 ProductCustomCategory.set_ProductCustomCategory1(ProductCustomCategory value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.ProductCustomCategoryIdGet">
            <summary>设置 ProductCustomCategory.get_ProductCustomCategoryId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.ProductCustomCategoryIdSetInt32">
            <summary>设置 ProductCustomCategory.set_ProductCustomCategoryId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.ProductCustomTypesGet">
            <summary>设置 ProductCustomCategory.get_ProductCustomTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.ProductCustomTypesSetICollectionOfProductCustomType">
            <summary>设置 ProductCustomCategory.set_ProductCustomTypes(ICollection`1&lt;ProductCustomType&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.AllInstances.CategoryNameGet">
            <summary>设置 ProductCustomCategory.get_CategoryName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.AllInstances.CategoryNameSetString">
            <summary>设置 ProductCustomCategory.set_CategoryName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.AllInstances.ContentGet">
            <summary>设置 ProductCustomCategory.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.AllInstances.ContentSetString">
            <summary>设置 ProductCustomCategory.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.AllInstances.IdGet">
            <summary>设置 ProductCustomCategory.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.AllInstances.IdSetInt32">
            <summary>设置 ProductCustomCategory.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.AllInstances.ProductCustomCategoriesGet">
            <summary>设置 ProductCustomCategory.get_ProductCustomCategories() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.AllInstances.ProductCustomCategoriesSetICollectionOfProductCustomCategory">
            <summary>设置 ProductCustomCategory.set_ProductCustomCategories(ICollection`1&lt;ProductCustomCategory&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.AllInstances.ProductCustomCategory1Get">
            <summary>设置 ProductCustomCategory.get_ProductCustomCategory1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.AllInstances.ProductCustomCategory1SetProductCustomCategory">
            <summary>设置 ProductCustomCategory.set_ProductCustomCategory1(ProductCustomCategory value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.AllInstances.ProductCustomCategoryIdGet">
            <summary>设置 ProductCustomCategory.get_ProductCustomCategoryId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.AllInstances.ProductCustomCategoryIdSetInt32">
            <summary>设置 ProductCustomCategory.set_ProductCustomCategoryId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.AllInstances.ProductCustomTypesGet">
            <summary>设置 ProductCustomCategory.get_ProductCustomTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomCategory.AllInstances.ProductCustomTypesSetICollectionOfProductCustomType">
            <summary>设置 ProductCustomCategory.set_ProductCustomTypes(ICollection`1&lt;ProductCustomType&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimProductCustomType">
            <summary>BCP.Domain.Edmx.ProductCustomType 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductCustomType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductCustomType.#ctor(BCP.Domain.Edmx.ProductCustomType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductCustomType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductCustomType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.Constructor">
            <summary>设置 ProductCustomType.ProductCustomType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.DescriptGet">
            <summary>设置 ProductCustomType.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.DescriptSetString">
            <summary>设置 ProductCustomType.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.EventTimeGet">
            <summary>设置 ProductCustomType.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.EventTimeSetInt64">
            <summary>设置 ProductCustomType.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.IdGet">
            <summary>设置 ProductCustomType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.IdSetInt32">
            <summary>设置 ProductCustomType.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.ProductCustomCategoryGet">
            <summary>设置 ProductCustomType.get_ProductCustomCategory() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.ProductCustomCategoryIdGet">
            <summary>设置 ProductCustomType.get_ProductCustomCategoryId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.ProductCustomCategoryIdSetInt32">
            <summary>设置 ProductCustomType.set_ProductCustomCategoryId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.ProductCustomCategorySetProductCustomCategory">
            <summary>设置 ProductCustomType.set_ProductCustomCategory(ProductCustomCategory value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.ProductGet">
            <summary>设置 ProductCustomType.get_Product() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.ProductIdGet">
            <summary>设置 ProductCustomType.get_ProductId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.ProductIdSetInt32">
            <summary>设置 ProductCustomType.set_ProductId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.ProductSetProduct">
            <summary>设置 ProductCustomType.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimProductCustomType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.AllInstances.DescriptGet">
            <summary>设置 ProductCustomType.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.AllInstances.DescriptSetString">
            <summary>设置 ProductCustomType.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.AllInstances.EventTimeGet">
            <summary>设置 ProductCustomType.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.AllInstances.EventTimeSetInt64">
            <summary>设置 ProductCustomType.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.AllInstances.IdGet">
            <summary>设置 ProductCustomType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.AllInstances.IdSetInt32">
            <summary>设置 ProductCustomType.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.AllInstances.ProductCustomCategoryGet">
            <summary>设置 ProductCustomType.get_ProductCustomCategory() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.AllInstances.ProductCustomCategoryIdGet">
            <summary>设置 ProductCustomType.get_ProductCustomCategoryId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.AllInstances.ProductCustomCategoryIdSetInt32">
            <summary>设置 ProductCustomType.set_ProductCustomCategoryId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.AllInstances.ProductCustomCategorySetProductCustomCategory">
            <summary>设置 ProductCustomType.set_ProductCustomCategory(ProductCustomCategory value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.AllInstances.ProductGet">
            <summary>设置 ProductCustomType.get_Product() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.AllInstances.ProductIdGet">
            <summary>设置 ProductCustomType.get_ProductId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.AllInstances.ProductIdSetInt32">
            <summary>设置 ProductCustomType.set_ProductId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductCustomType.AllInstances.ProductSetProduct">
            <summary>设置 ProductCustomType.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimProductEvent">
            <summary>BCP.Domain.Edmx.ProductEvent 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductEvent.#ctor(BCP.Domain.Edmx.ProductEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.Constructor">
            <summary>设置 ProductEvent.ProductEvent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.ContentGet">
            <summary>设置 ProductEvent.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.ContentSetString">
            <summary>设置 ProductEvent.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.CreaterGet">
            <summary>设置 ProductEvent.get_Creater() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.CreaterSetInt32">
            <summary>设置 ProductEvent.set_Creater(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.EventNameGet">
            <summary>设置 ProductEvent.get_EventName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.EventNameSetString">
            <summary>设置 ProductEvent.set_EventName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.EventTime1Get">
            <summary>设置 ProductEvent.get_EventTime1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.EventTime1SetInt64">
            <summary>设置 ProductEvent.set_EventTime1(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.EventTimeGet">
            <summary>设置 ProductEvent.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.EventTimeSetDateTime">
            <summary>设置 ProductEvent.set_EventTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.IdGet">
            <summary>设置 ProductEvent.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.IdSetInt32">
            <summary>设置 ProductEvent.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.ProductGet">
            <summary>设置 ProductEvent.get_Product() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.ProductIdGet">
            <summary>设置 ProductEvent.get_ProductId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.ProductIdSetInt32">
            <summary>设置 ProductEvent.set_ProductId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.ProductSetProduct">
            <summary>设置 ProductEvent.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimProductEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.AllInstances.ContentGet">
            <summary>设置 ProductEvent.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.AllInstances.ContentSetString">
            <summary>设置 ProductEvent.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.AllInstances.CreaterGet">
            <summary>设置 ProductEvent.get_Creater() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.AllInstances.CreaterSetInt32">
            <summary>设置 ProductEvent.set_Creater(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.AllInstances.EventNameGet">
            <summary>设置 ProductEvent.get_EventName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.AllInstances.EventNameSetString">
            <summary>设置 ProductEvent.set_EventName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.AllInstances.EventTime1Get">
            <summary>设置 ProductEvent.get_EventTime1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.AllInstances.EventTime1SetInt64">
            <summary>设置 ProductEvent.set_EventTime1(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.AllInstances.EventTimeGet">
            <summary>设置 ProductEvent.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.AllInstances.EventTimeSetDateTime">
            <summary>设置 ProductEvent.set_EventTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.AllInstances.IdGet">
            <summary>设置 ProductEvent.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.AllInstances.IdSetInt32">
            <summary>设置 ProductEvent.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.AllInstances.ProductGet">
            <summary>设置 ProductEvent.get_Product() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.AllInstances.ProductIdGet">
            <summary>设置 ProductEvent.get_ProductId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.AllInstances.ProductIdSetInt32">
            <summary>设置 ProductEvent.set_ProductId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductEvent.AllInstances.ProductSetProduct">
            <summary>设置 ProductEvent.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimProductStandard">
            <summary>BCP.Domain.Edmx.ProductStandard 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductStandard.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductStandard.#ctor(BCP.Domain.Edmx.ProductStandard)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductStandard.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimProductStandard.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.Constructor">
            <summary>设置 ProductStandard.ProductStandard() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.DescriptGet">
            <summary>设置 ProductStandard.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.DescriptSetString">
            <summary>设置 ProductStandard.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.EventTimeGet">
            <summary>设置 ProductStandard.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.EventTimeSetInt64">
            <summary>设置 ProductStandard.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.IDGet">
            <summary>设置 ProductStandard.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.IDSetInt32">
            <summary>设置 ProductStandard.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.NameGet">
            <summary>设置 ProductStandard.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.NameSetString">
            <summary>设置 ProductStandard.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.ParentCodeGet">
            <summary>设置 ProductStandard.get_ParentCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.ParentCodeSetString">
            <summary>设置 ProductStandard.set_ParentCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.ParentGet">
            <summary>设置 ProductStandard.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.ParentSetNullableOfInt32">
            <summary>设置 ProductStandard.set_Parent(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.ProductCodeGet">
            <summary>设置 ProductStandard.get_ProductCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.ProductCodeSetString">
            <summary>设置 ProductStandard.set_ProductCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.ProductStandard1Get">
            <summary>设置 ProductStandard.get_ProductStandard1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.ProductStandard1SetProductStandard">
            <summary>设置 ProductStandard.set_ProductStandard1(ProductStandard value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.ProductStandardsGet">
            <summary>设置 ProductStandard.get_ProductStandards() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.ProductStandardsSetICollectionOfProductStandard">
            <summary>设置 ProductStandard.set_ProductStandards(ICollection`1&lt;ProductStandard&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.ProductsGet">
            <summary>设置 ProductStandard.get_Products() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.ProductsSetICollectionOfProduct">
            <summary>设置 ProductStandard.set_Products(ICollection`1&lt;Product&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.VesionGet">
            <summary>设置 ProductStandard.get_Vesion() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.VesionSetString">
            <summary>设置 ProductStandard.set_Vesion(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.measureUnitGet">
            <summary>设置 ProductStandard.get_measureUnit() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.measureUnitSetString">
            <summary>设置 ProductStandard.set_measureUnit(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.DescriptGet">
            <summary>设置 ProductStandard.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.DescriptSetString">
            <summary>设置 ProductStandard.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.EventTimeGet">
            <summary>设置 ProductStandard.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.EventTimeSetInt64">
            <summary>设置 ProductStandard.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.IDGet">
            <summary>设置 ProductStandard.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.IDSetInt32">
            <summary>设置 ProductStandard.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.NameGet">
            <summary>设置 ProductStandard.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.NameSetString">
            <summary>设置 ProductStandard.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.ParentCodeGet">
            <summary>设置 ProductStandard.get_ParentCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.ParentCodeSetString">
            <summary>设置 ProductStandard.set_ParentCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.ParentGet">
            <summary>设置 ProductStandard.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.ParentSetNullableOfInt32">
            <summary>设置 ProductStandard.set_Parent(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.ProductCodeGet">
            <summary>设置 ProductStandard.get_ProductCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.ProductCodeSetString">
            <summary>设置 ProductStandard.set_ProductCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.ProductStandard1Get">
            <summary>设置 ProductStandard.get_ProductStandard1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.ProductStandard1SetProductStandard">
            <summary>设置 ProductStandard.set_ProductStandard1(ProductStandard value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.ProductStandardsGet">
            <summary>设置 ProductStandard.get_ProductStandards() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.ProductStandardsSetICollectionOfProductStandard">
            <summary>设置 ProductStandard.set_ProductStandards(ICollection`1&lt;ProductStandard&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.ProductsGet">
            <summary>设置 ProductStandard.get_Products() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.ProductsSetICollectionOfProduct">
            <summary>设置 ProductStandard.set_Products(ICollection`1&lt;Product&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.VesionGet">
            <summary>设置 ProductStandard.get_Vesion() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.VesionSetString">
            <summary>设置 ProductStandard.set_Vesion(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.measureUnitGet">
            <summary>设置 ProductStandard.get_measureUnit() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimProductStandard.AllInstances.measureUnitSetString">
            <summary>设置 ProductStandard.set_measureUnit(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType">
            <summary>BCP.Domain.Edmx.RegisterDocumentType 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.#ctor(BCP.Domain.Edmx.RegisterDocumentType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.Constructor">
            <summary>设置 RegisterDocumentType.RegisterDocumentType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.EventTime1Get">
            <summary>设置 RegisterDocumentType.get_EventTime1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.EventTime1SetInt64">
            <summary>设置 RegisterDocumentType.set_EventTime1(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.EventTime2Get">
            <summary>设置 RegisterDocumentType.get_EventTime2() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.EventTime2SetInt64">
            <summary>设置 RegisterDocumentType.set_EventTime2(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.EventTimeGet">
            <summary>设置 RegisterDocumentType.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.EventTimeSetInt64">
            <summary>设置 RegisterDocumentType.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.IDGet">
            <summary>设置 RegisterDocumentType.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.IDSetInt32">
            <summary>设置 RegisterDocumentType.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.OrgaRegisterDocmentsGet">
            <summary>设置 RegisterDocumentType.get_OrgaRegisterDocments() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.OrgaRegisterDocmentsSetICollectionOfOrgaRegisterDocment">
            <summary>设置 RegisterDocumentType.set_OrgaRegisterDocments(ICollection`1&lt;OrgaRegisterDocment&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.TypeNameGet">
            <summary>设置 RegisterDocumentType.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.TypeNameSetString">
            <summary>设置 RegisterDocumentType.set_TypeName(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.AllInstances.EventTime1Get">
            <summary>设置 RegisterDocumentType.get_EventTime1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.AllInstances.EventTime1SetInt64">
            <summary>设置 RegisterDocumentType.set_EventTime1(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.AllInstances.EventTime2Get">
            <summary>设置 RegisterDocumentType.get_EventTime2() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.AllInstances.EventTime2SetInt64">
            <summary>设置 RegisterDocumentType.set_EventTime2(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.AllInstances.EventTimeGet">
            <summary>设置 RegisterDocumentType.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.AllInstances.EventTimeSetInt64">
            <summary>设置 RegisterDocumentType.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.AllInstances.IDGet">
            <summary>设置 RegisterDocumentType.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.AllInstances.IDSetInt32">
            <summary>设置 RegisterDocumentType.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.AllInstances.OrgaRegisterDocmentsGet">
            <summary>设置 RegisterDocumentType.get_OrgaRegisterDocments() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.AllInstances.OrgaRegisterDocmentsSetICollectionOfOrgaRegisterDocment">
            <summary>设置 RegisterDocumentType.set_OrgaRegisterDocments(ICollection`1&lt;OrgaRegisterDocment&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.AllInstances.TypeNameGet">
            <summary>设置 RegisterDocumentType.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimRegisterDocumentType.AllInstances.TypeNameSetString">
            <summary>设置 RegisterDocumentType.set_TypeName(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimSecurityinfo">
            <summary>BCP.Domain.Edmx.Securityinfo 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.#ctor(BCP.Domain.Edmx.Securityinfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.Constructor">
            <summary>设置 Securityinfo.Securityinfo() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.DescriptGet">
            <summary>设置 Securityinfo.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.DescriptSetString">
            <summary>设置 Securityinfo.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.DocumentManagesGet">
            <summary>设置 Securityinfo.get_DocumentManages() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.DocumentManagesSetICollectionOfDocumentManage">
            <summary>设置 Securityinfo.set_DocumentManages(ICollection`1&lt;DocumentManage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.EventTimeGet">
            <summary>设置 Securityinfo.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.EventTimeSetInt64">
            <summary>设置 Securityinfo.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.IDGet">
            <summary>设置 Securityinfo.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.IDSetInt32">
            <summary>设置 Securityinfo.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.LevelGet">
            <summary>设置 Securityinfo.get_Level() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.LevelSetInt32">
            <summary>设置 Securityinfo.set_Level(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.SecurityNameGet">
            <summary>设置 Securityinfo.get_SecurityName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.SecurityNameSetString">
            <summary>设置 Securityinfo.set_SecurityName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.Securityinfo1Get">
            <summary>设置 Securityinfo.get_Securityinfo1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.Securityinfo1SetSecurityinfo">
            <summary>设置 Securityinfo.set_Securityinfo1(Securityinfo value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.SecurityinfoIDGet">
            <summary>设置 Securityinfo.get_SecurityinfoID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.SecurityinfoIDSetNullableOfInt32">
            <summary>设置 Securityinfo.set_SecurityinfoID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.SecurityinfoesGet">
            <summary>设置 Securityinfo.get_Securityinfoes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.SecurityinfoesSetICollectionOfSecurityinfo">
            <summary>设置 Securityinfo.set_Securityinfoes(ICollection`1&lt;Securityinfo&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.DescriptGet">
            <summary>设置 Securityinfo.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.DescriptSetString">
            <summary>设置 Securityinfo.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.DocumentManagesGet">
            <summary>设置 Securityinfo.get_DocumentManages() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.DocumentManagesSetICollectionOfDocumentManage">
            <summary>设置 Securityinfo.set_DocumentManages(ICollection`1&lt;DocumentManage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.EventTimeGet">
            <summary>设置 Securityinfo.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.EventTimeSetInt64">
            <summary>设置 Securityinfo.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.IDGet">
            <summary>设置 Securityinfo.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.IDSetInt32">
            <summary>设置 Securityinfo.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.LevelGet">
            <summary>设置 Securityinfo.get_Level() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.LevelSetInt32">
            <summary>设置 Securityinfo.set_Level(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.SecurityNameGet">
            <summary>设置 Securityinfo.get_SecurityName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.SecurityNameSetString">
            <summary>设置 Securityinfo.set_SecurityName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.Securityinfo1Get">
            <summary>设置 Securityinfo.get_Securityinfo1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.Securityinfo1SetSecurityinfo">
            <summary>设置 Securityinfo.set_Securityinfo1(Securityinfo value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.SecurityinfoIDGet">
            <summary>设置 Securityinfo.get_SecurityinfoID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.SecurityinfoIDSetNullableOfInt32">
            <summary>设置 Securityinfo.set_SecurityinfoID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.SecurityinfoesGet">
            <summary>设置 Securityinfo.get_Securityinfoes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSecurityinfo.AllInstances.SecurityinfoesSetICollectionOfSecurityinfo">
            <summary>设置 Securityinfo.set_Securityinfoes(ICollection`1&lt;Securityinfo&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimSpecialized">
            <summary>BCP.Domain.Edmx.Specialized 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimSpecialized.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimSpecialized.#ctor(BCP.Domain.Edmx.Specialized)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimSpecialized.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimSpecialized.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.CodeGet">
            <summary>设置 Specialized.get_Code() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.CodeSetString">
            <summary>设置 Specialized.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.Constructor">
            <summary>设置 Specialized.Specialized() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.DescriptGet">
            <summary>设置 Specialized.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.DescriptSetString">
            <summary>设置 Specialized.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.IDGet">
            <summary>设置 Specialized.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.IDSetInt32">
            <summary>设置 Specialized.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.ParentCodeGet">
            <summary>设置 Specialized.get_ParentCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.ParentCodeSetString">
            <summary>设置 Specialized.set_ParentCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.ParentGet">
            <summary>设置 Specialized.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.ParentSetNullableOfInt32">
            <summary>设置 Specialized.set_Parent(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.PostbasicsGet">
            <summary>设置 Specialized.get_Postbasics() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.PostbasicsSetICollectionOfPostRequire">
            <summary>设置 Specialized.set_Postbasics(ICollection`1&lt;PostRequire&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.SpecialNameGet">
            <summary>设置 Specialized.get_SpecialName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.SpecialNameSetString">
            <summary>设置 Specialized.set_SpecialName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.Specialized1Get">
            <summary>设置 Specialized.get_Specialized1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.Specialized1SetSpecialized">
            <summary>设置 Specialized.set_Specialized1(Specialized value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.SpecializedsGet">
            <summary>设置 Specialized.get_Specializeds() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.SpecializedsSetICollectionOfSpecialized">
            <summary>设置 Specialized.set_Specializeds(ICollection`1&lt;Specialized&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.CodeGet">
            <summary>设置 Specialized.get_Code() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.CodeSetString">
            <summary>设置 Specialized.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.DescriptGet">
            <summary>设置 Specialized.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.DescriptSetString">
            <summary>设置 Specialized.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.IDGet">
            <summary>设置 Specialized.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.IDSetInt32">
            <summary>设置 Specialized.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.ParentCodeGet">
            <summary>设置 Specialized.get_ParentCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.ParentCodeSetString">
            <summary>设置 Specialized.set_ParentCode(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.ParentGet">
            <summary>设置 Specialized.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.ParentSetNullableOfInt32">
            <summary>设置 Specialized.set_Parent(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.PostbasicsGet">
            <summary>设置 Specialized.get_Postbasics() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.PostbasicsSetICollectionOfPostRequire">
            <summary>设置 Specialized.set_Postbasics(ICollection`1&lt;PostRequire&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.SpecialNameGet">
            <summary>设置 Specialized.get_SpecialName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.SpecialNameSetString">
            <summary>设置 Specialized.set_SpecialName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.Specialized1Get">
            <summary>设置 Specialized.get_Specialized1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.Specialized1SetSpecialized">
            <summary>设置 Specialized.set_Specialized1(Specialized value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.SpecializedsGet">
            <summary>设置 Specialized.get_Specializeds() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSpecialized.AllInstances.SpecializedsSetICollectionOfSpecialized">
            <summary>设置 Specialized.set_Specializeds(ICollection`1&lt;Specialized&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimSubordinate">
            <summary>BCP.Domain.Edmx.Subordinate 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimSubordinate.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimSubordinate.#ctor(BCP.Domain.Edmx.Subordinate)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimSubordinate.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimSubordinate.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.CodeGet">
            <summary>设置 Subordinate.get_Code() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.CodeSetString">
            <summary>设置 Subordinate.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.Constructor">
            <summary>设置 Subordinate.Subordinate() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.DescriptGet">
            <summary>设置 Subordinate.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.DescriptSetString">
            <summary>设置 Subordinate.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.EventTimeGet">
            <summary>设置 Subordinate.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.EventTimeSetInt64">
            <summary>设置 Subordinate.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.IDGet">
            <summary>设置 Subordinate.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.IDSetInt32">
            <summary>设置 Subordinate.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.NameGet">
            <summary>设置 Subordinate.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.NameSetString">
            <summary>设置 Subordinate.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.OrganizBasicsGet">
            <summary>设置 Subordinate.get_OrganizBasics() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 Subordinate.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimSubordinate.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.AllInstances.CodeGet">
            <summary>设置 Subordinate.get_Code() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.AllInstances.CodeSetString">
            <summary>设置 Subordinate.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.AllInstances.DescriptGet">
            <summary>设置 Subordinate.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.AllInstances.DescriptSetString">
            <summary>设置 Subordinate.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.AllInstances.EventTimeGet">
            <summary>设置 Subordinate.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.AllInstances.EventTimeSetInt64">
            <summary>设置 Subordinate.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.AllInstances.IDGet">
            <summary>设置 Subordinate.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.AllInstances.IDSetInt32">
            <summary>设置 Subordinate.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.AllInstances.NameGet">
            <summary>设置 Subordinate.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.AllInstances.NameSetString">
            <summary>设置 Subordinate.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.AllInstances.OrganizBasicsGet">
            <summary>设置 Subordinate.get_OrganizBasics() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimSubordinate.AllInstances.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 Subordinate.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimUser">
            <summary>BCP.Domain.Edmx.User 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUser.#ctor(BCP.Domain.Edmx.User)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.ActualNameGet">
            <summary>设置 User.get_ActualName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.ActualNameSetString">
            <summary>设置 User.set_ActualName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.Authorizations1Get">
            <summary>设置 User.get_Authorizations1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.Authorizations1SetICollectionOfAuthorization">
            <summary>设置 User.set_Authorizations1(ICollection`1&lt;Authorization&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AuthorizationsGet">
            <summary>设置 User.get_Authorizations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AuthorizationsSetICollectionOfAuthorization">
            <summary>设置 User.set_Authorizations(ICollection`1&lt;Authorization&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.Constructor">
            <summary>设置 User.User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.CreateTimeGet">
            <summary>设置 User.get_CreateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.CreateTimeSetNullableOfDateTime">
            <summary>设置 User.set_CreateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.CreateUserIdGet">
            <summary>设置 User.get_CreateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.CreateUserIdSetNullableOfInt32">
            <summary>设置 User.set_CreateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.CustomGroupUsersGet">
            <summary>设置 User.get_CustomGroupUsers() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.CustomGroupUsersSetICollectionOfCustomGroupUser">
            <summary>设置 User.set_CustomGroupUsers(ICollection`1&lt;CustomGroupUser&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.CustomerGoupsGet">
            <summary>设置 User.get_CustomerGoups() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.CustomerGoupsSetICollectionOfCustomGroup">
            <summary>设置 User.set_CustomerGoups(ICollection`1&lt;CustomGroup&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.DocReadersGet">
            <summary>设置 User.get_DocReaders() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.DocReadersSetICollectionOfDocReader">
            <summary>设置 User.set_DocReaders(ICollection`1&lt;DocReader&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.DocSendersGet">
            <summary>设置 User.get_DocSenders() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.DocSendersSetICollectionOfDocSender">
            <summary>设置 User.set_DocSenders(ICollection`1&lt;DocSender&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.DomainGet">
            <summary>设置 User.get_Domain() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.DomainIdGet">
            <summary>设置 User.get_DomainId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.DomainIdSetString">
            <summary>设置 User.set_DomainId(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.DomainSetString">
            <summary>设置 User.set_Domain(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.EmployeesGet">
            <summary>设置 User.get_Employees() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.EmployeesSetICollectionOfEmployee">
            <summary>设置 User.set_Employees(ICollection`1&lt;Employee&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.GroupNamesGet">
            <summary>设置 User.get_GroupNames() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.GroupNamesSetICollectionOfGroup">
            <summary>设置 User.set_GroupNames(ICollection`1&lt;Group&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.IDGet">
            <summary>设置 User.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.IDSetInt32">
            <summary>设置 User.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.LimitTimeGet">
            <summary>设置 User.get_LimitTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.LimitTimeSetDateTime">
            <summary>设置 User.set_LimitTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.LoginLogsGet">
            <summary>设置 User.get_LoginLogs() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.LoginLogsSetICollectionOfLoginLog">
            <summary>设置 User.set_LoginLogs(ICollection`1&lt;LoginLog&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.MessageGroupsGet">
            <summary>设置 User.get_MessageGroups() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.MessageGroupsSetICollectionOfGroupMember">
            <summary>设置 User.set_MessageGroups(ICollection`1&lt;GroupMember&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.NotesGet">
            <summary>设置 User.get_Notes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.NotesSetString">
            <summary>设置 User.set_Notes(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.PasswordGet">
            <summary>设置 User.get_Password() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.PasswordSetString">
            <summary>设置 User.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.StateGet">
            <summary>设置 User.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.StateSetInt32">
            <summary>设置 User.set_State(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.UpdateTimeGet">
            <summary>设置 User.get_UpdateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.UpdateTimeSetNullableOfDateTime">
            <summary>设置 User.set_UpdateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.UpdateUserIdGet">
            <summary>设置 User.get_UpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.UpdateUserIdSetNullableOfInt32">
            <summary>设置 User.set_UpdateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.UserMessagesGet">
            <summary>设置 User.get_UserMessages() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.UserMessagesSetICollectionOfUserMessage">
            <summary>设置 User.set_UserMessages(ICollection`1&lt;UserMessage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.UserNameGet">
            <summary>设置 User.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.UserNameSetString">
            <summary>设置 User.set_UserName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.UserRelateTables1Get">
            <summary>设置 User.get_UserRelateTables1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.UserRelateTables1SetICollectionOfUserRelateTable">
            <summary>设置 User.set_UserRelateTables1(ICollection`1&lt;UserRelateTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.UserRelateTablesGet">
            <summary>设置 User.get_UserRelateTables() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.UserRelateTablesSetICollectionOfUserRelateTable">
            <summary>设置 User.set_UserRelateTables(ICollection`1&lt;UserRelateTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.User_ContacTableGet">
            <summary>设置 User.get_User_ContacTable() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.User_ContacTableSetICollectionOfUser_ContacTable">
            <summary>设置 User.set_User_ContacTable(ICollection`1&lt;User_ContacTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.WorkSpaceRolesGet">
            <summary>设置 User.get_WorkSpaceRoles() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.WorkSpaceRolesSetICollectionOfWorkSpaceRole">
            <summary>设置 User.set_WorkSpaceRoles(ICollection`1&lt;WorkSpaceRole&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.ActualNameGet">
            <summary>设置 User.get_ActualName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.ActualNameSetString">
            <summary>设置 User.set_ActualName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.Authorizations1Get">
            <summary>设置 User.get_Authorizations1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.Authorizations1SetICollectionOfAuthorization">
            <summary>设置 User.set_Authorizations1(ICollection`1&lt;Authorization&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.AuthorizationsGet">
            <summary>设置 User.get_Authorizations() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.AuthorizationsSetICollectionOfAuthorization">
            <summary>设置 User.set_Authorizations(ICollection`1&lt;Authorization&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.CreateTimeGet">
            <summary>设置 User.get_CreateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.CreateTimeSetNullableOfDateTime">
            <summary>设置 User.set_CreateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.CreateUserIdGet">
            <summary>设置 User.get_CreateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.CreateUserIdSetNullableOfInt32">
            <summary>设置 User.set_CreateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.CustomGroupUsersGet">
            <summary>设置 User.get_CustomGroupUsers() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.CustomGroupUsersSetICollectionOfCustomGroupUser">
            <summary>设置 User.set_CustomGroupUsers(ICollection`1&lt;CustomGroupUser&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.CustomerGoupsGet">
            <summary>设置 User.get_CustomerGoups() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.CustomerGoupsSetICollectionOfCustomGroup">
            <summary>设置 User.set_CustomerGoups(ICollection`1&lt;CustomGroup&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.DocReadersGet">
            <summary>设置 User.get_DocReaders() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.DocReadersSetICollectionOfDocReader">
            <summary>设置 User.set_DocReaders(ICollection`1&lt;DocReader&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.DocSendersGet">
            <summary>设置 User.get_DocSenders() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.DocSendersSetICollectionOfDocSender">
            <summary>设置 User.set_DocSenders(ICollection`1&lt;DocSender&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.DomainGet">
            <summary>设置 User.get_Domain() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.DomainIdGet">
            <summary>设置 User.get_DomainId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.DomainIdSetString">
            <summary>设置 User.set_DomainId(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.DomainSetString">
            <summary>设置 User.set_Domain(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.EmployeesGet">
            <summary>设置 User.get_Employees() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.EmployeesSetICollectionOfEmployee">
            <summary>设置 User.set_Employees(ICollection`1&lt;Employee&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.GroupNamesGet">
            <summary>设置 User.get_GroupNames() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.GroupNamesSetICollectionOfGroup">
            <summary>设置 User.set_GroupNames(ICollection`1&lt;Group&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.IDGet">
            <summary>设置 User.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.IDSetInt32">
            <summary>设置 User.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.LimitTimeGet">
            <summary>设置 User.get_LimitTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.LimitTimeSetDateTime">
            <summary>设置 User.set_LimitTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.LoginLogsGet">
            <summary>设置 User.get_LoginLogs() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.LoginLogsSetICollectionOfLoginLog">
            <summary>设置 User.set_LoginLogs(ICollection`1&lt;LoginLog&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.MessageGroupsGet">
            <summary>设置 User.get_MessageGroups() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.MessageGroupsSetICollectionOfGroupMember">
            <summary>设置 User.set_MessageGroups(ICollection`1&lt;GroupMember&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.NotesGet">
            <summary>设置 User.get_Notes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.NotesSetString">
            <summary>设置 User.set_Notes(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.PasswordGet">
            <summary>设置 User.get_Password() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.PasswordSetString">
            <summary>设置 User.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.StateGet">
            <summary>设置 User.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.StateSetInt32">
            <summary>设置 User.set_State(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.UpdateTimeGet">
            <summary>设置 User.get_UpdateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.UpdateTimeSetNullableOfDateTime">
            <summary>设置 User.set_UpdateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.UpdateUserIdGet">
            <summary>设置 User.get_UpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.UpdateUserIdSetNullableOfInt32">
            <summary>设置 User.set_UpdateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.UserMessagesGet">
            <summary>设置 User.get_UserMessages() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.UserMessagesSetICollectionOfUserMessage">
            <summary>设置 User.set_UserMessages(ICollection`1&lt;UserMessage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.UserNameGet">
            <summary>设置 User.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.UserNameSetString">
            <summary>设置 User.set_UserName(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.UserRelateTables1Get">
            <summary>设置 User.get_UserRelateTables1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.UserRelateTables1SetICollectionOfUserRelateTable">
            <summary>设置 User.set_UserRelateTables1(ICollection`1&lt;UserRelateTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.UserRelateTablesGet">
            <summary>设置 User.get_UserRelateTables() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.UserRelateTablesSetICollectionOfUserRelateTable">
            <summary>设置 User.set_UserRelateTables(ICollection`1&lt;UserRelateTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.User_ContacTableGet">
            <summary>设置 User.get_User_ContacTable() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.User_ContacTableSetICollectionOfUser_ContacTable">
            <summary>设置 User.set_User_ContacTable(ICollection`1&lt;User_ContacTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.WorkSpaceRolesGet">
            <summary>设置 User.get_WorkSpaceRoles() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser.AllInstances.WorkSpaceRolesSetICollectionOfWorkSpaceRole">
            <summary>设置 User.set_WorkSpaceRoles(ICollection`1&lt;WorkSpaceRole&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimUserMessage">
            <summary>BCP.Domain.Edmx.UserMessage 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUserMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUserMessage.#ctor(BCP.Domain.Edmx.UserMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUserMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUserMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.Constructor">
            <summary>设置 UserMessage.UserMessage() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.ContentGet">
            <summary>设置 UserMessage.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.ContentSetString">
            <summary>设置 UserMessage.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.CreateTimeGet">
            <summary>设置 UserMessage.get_CreateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.CreateTimeSetNullableOfDateTime">
            <summary>设置 UserMessage.set_CreateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.CreateUserIdGet">
            <summary>设置 UserMessage.get_CreateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.CreateUserIdSetNullableOfInt32">
            <summary>设置 UserMessage.set_CreateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.FromUserIdGet">
            <summary>设置 UserMessage.get_FromUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.FromUserIdSetNullableOfInt32">
            <summary>设置 UserMessage.set_FromUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.IdGet">
            <summary>设置 UserMessage.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.IdSetInt32">
            <summary>设置 UserMessage.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.MessageTypeGet">
            <summary>设置 UserMessage.get_MessageType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.MessageTypeSetInt32">
            <summary>设置 UserMessage.set_MessageType(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.NotesGet">
            <summary>设置 UserMessage.get_Notes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.NotesSetString">
            <summary>设置 UserMessage.set_Notes(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.StateGet">
            <summary>设置 UserMessage.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.StateSetNullableOfInt32">
            <summary>设置 UserMessage.set_State(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.ToUserIdGet">
            <summary>设置 UserMessage.get_ToUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.ToUserIdSetNullableOfInt32">
            <summary>设置 UserMessage.set_ToUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.UpdateTimeGet">
            <summary>设置 UserMessage.get_UpdateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.UpdateTimeSetNullableOfDateTime">
            <summary>设置 UserMessage.set_UpdateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.UpdateUserIdGet">
            <summary>设置 UserMessage.get_UpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.UpdateUserIdSetString">
            <summary>设置 UserMessage.set_UpdateUserId(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.UserGet">
            <summary>设置 UserMessage.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.UserSetUser">
            <summary>设置 UserMessage.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.ContentGet">
            <summary>设置 UserMessage.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.ContentSetString">
            <summary>设置 UserMessage.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.CreateTimeGet">
            <summary>设置 UserMessage.get_CreateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.CreateTimeSetNullableOfDateTime">
            <summary>设置 UserMessage.set_CreateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.CreateUserIdGet">
            <summary>设置 UserMessage.get_CreateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.CreateUserIdSetNullableOfInt32">
            <summary>设置 UserMessage.set_CreateUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.FromUserIdGet">
            <summary>设置 UserMessage.get_FromUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.FromUserIdSetNullableOfInt32">
            <summary>设置 UserMessage.set_FromUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.IdGet">
            <summary>设置 UserMessage.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.IdSetInt32">
            <summary>设置 UserMessage.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.MessageTypeGet">
            <summary>设置 UserMessage.get_MessageType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.MessageTypeSetInt32">
            <summary>设置 UserMessage.set_MessageType(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.NotesGet">
            <summary>设置 UserMessage.get_Notes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.NotesSetString">
            <summary>设置 UserMessage.set_Notes(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.StateGet">
            <summary>设置 UserMessage.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.StateSetNullableOfInt32">
            <summary>设置 UserMessage.set_State(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.ToUserIdGet">
            <summary>设置 UserMessage.get_ToUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.ToUserIdSetNullableOfInt32">
            <summary>设置 UserMessage.set_ToUserId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.UpdateTimeGet">
            <summary>设置 UserMessage.get_UpdateTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.UpdateTimeSetNullableOfDateTime">
            <summary>设置 UserMessage.set_UpdateTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.UpdateUserIdGet">
            <summary>设置 UserMessage.get_UpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.UpdateUserIdSetString">
            <summary>设置 UserMessage.set_UpdateUserId(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.UserGet">
            <summary>设置 UserMessage.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserMessage.AllInstances.UserSetUser">
            <summary>设置 UserMessage.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimUserRelateTable">
            <summary>BCP.Domain.Edmx.UserRelateTable 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.#ctor(BCP.Domain.Edmx.UserRelateTable)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.Constructor">
            <summary>设置 UserRelateTable.UserRelateTable() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.EventTimeGet">
            <summary>设置 UserRelateTable.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.EventTimeSetInt64">
            <summary>设置 UserRelateTable.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.IDGet">
            <summary>设置 UserRelateTable.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.IDSetInt32">
            <summary>设置 UserRelateTable.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.NotesGet">
            <summary>设置 UserRelateTable.get_Notes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.NotesSetString">
            <summary>设置 UserRelateTable.set_Notes(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.RelateObjectGet">
            <summary>设置 UserRelateTable.get_RelateObject() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.RelateObjectSetString">
            <summary>设置 UserRelateTable.set_RelateObject(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.User1Get">
            <summary>设置 UserRelateTable.get_User1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.User1SetUser">
            <summary>设置 UserRelateTable.set_User1(User value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.UserGet">
            <summary>设置 UserRelateTable.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.UserID1Get">
            <summary>设置 UserRelateTable.get_UserID1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.UserID1SetInt32">
            <summary>设置 UserRelateTable.set_UserID1(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.UserIDGet">
            <summary>设置 UserRelateTable.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.UserIDSetInt32">
            <summary>设置 UserRelateTable.set_UserID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.UserRelateTypeGet">
            <summary>设置 UserRelateTable.get_UserRelateType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.UserRelateTypeIDGet">
            <summary>设置 UserRelateTable.get_UserRelateTypeID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.UserRelateTypeIDSetInt32">
            <summary>设置 UserRelateTable.set_UserRelateTypeID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.UserRelateTypeSetUserRelateType">
            <summary>设置 UserRelateTable.set_UserRelateType(UserRelateType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.UserSetUser">
            <summary>设置 UserRelateTable.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.EventTimeGet">
            <summary>设置 UserRelateTable.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.EventTimeSetInt64">
            <summary>设置 UserRelateTable.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.IDGet">
            <summary>设置 UserRelateTable.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.IDSetInt32">
            <summary>设置 UserRelateTable.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.NotesGet">
            <summary>设置 UserRelateTable.get_Notes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.NotesSetString">
            <summary>设置 UserRelateTable.set_Notes(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.RelateObjectGet">
            <summary>设置 UserRelateTable.get_RelateObject() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.RelateObjectSetString">
            <summary>设置 UserRelateTable.set_RelateObject(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.User1Get">
            <summary>设置 UserRelateTable.get_User1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.User1SetUser">
            <summary>设置 UserRelateTable.set_User1(User value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.UserGet">
            <summary>设置 UserRelateTable.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.UserID1Get">
            <summary>设置 UserRelateTable.get_UserID1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.UserID1SetInt32">
            <summary>设置 UserRelateTable.set_UserID1(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.UserIDGet">
            <summary>设置 UserRelateTable.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.UserIDSetInt32">
            <summary>设置 UserRelateTable.set_UserID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.UserRelateTypeGet">
            <summary>设置 UserRelateTable.get_UserRelateType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.UserRelateTypeIDGet">
            <summary>设置 UserRelateTable.get_UserRelateTypeID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.UserRelateTypeIDSetInt32">
            <summary>设置 UserRelateTable.set_UserRelateTypeID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.UserRelateTypeSetUserRelateType">
            <summary>设置 UserRelateTable.set_UserRelateType(UserRelateType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateTable.AllInstances.UserSetUser">
            <summary>设置 UserRelateTable.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimUserRelateType">
            <summary>BCP.Domain.Edmx.UserRelateType 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUserRelateType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUserRelateType.#ctor(BCP.Domain.Edmx.UserRelateType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUserRelateType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUserRelateType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.Constructor">
            <summary>设置 UserRelateType.UserRelateType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.DescriptGet">
            <summary>设置 UserRelateType.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.DescriptSetString">
            <summary>设置 UserRelateType.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.EventTimeGet">
            <summary>设置 UserRelateType.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.EventTimeSetInt64">
            <summary>设置 UserRelateType.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.IDGet">
            <summary>设置 UserRelateType.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.IDSetInt32">
            <summary>设置 UserRelateType.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.NameGet">
            <summary>设置 UserRelateType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.NameSetString">
            <summary>设置 UserRelateType.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.ParentGet">
            <summary>设置 UserRelateType.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.ParentSetNullableOfInt32">
            <summary>设置 UserRelateType.set_Parent(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.UserRelateTablesGet">
            <summary>设置 UserRelateType.get_UserRelateTables() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.UserRelateTablesSetICollectionOfUserRelateTable">
            <summary>设置 UserRelateType.set_UserRelateTables(ICollection`1&lt;UserRelateTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.UserRelateType1Get">
            <summary>设置 UserRelateType.get_UserRelateType1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.UserRelateType1SetUserRelateType">
            <summary>设置 UserRelateType.set_UserRelateType1(UserRelateType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.UserRelateTypesGet">
            <summary>设置 UserRelateType.get_UserRelateTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.UserRelateTypesSetICollectionOfUserRelateType">
            <summary>设置 UserRelateType.set_UserRelateTypes(ICollection`1&lt;UserRelateType&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimUserRelateType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.AllInstances.DescriptGet">
            <summary>设置 UserRelateType.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.AllInstances.DescriptSetString">
            <summary>设置 UserRelateType.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.AllInstances.EventTimeGet">
            <summary>设置 UserRelateType.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.AllInstances.EventTimeSetInt64">
            <summary>设置 UserRelateType.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.AllInstances.IDGet">
            <summary>设置 UserRelateType.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.AllInstances.IDSetInt32">
            <summary>设置 UserRelateType.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.AllInstances.NameGet">
            <summary>设置 UserRelateType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.AllInstances.NameSetString">
            <summary>设置 UserRelateType.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.AllInstances.ParentGet">
            <summary>设置 UserRelateType.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.AllInstances.ParentSetNullableOfInt32">
            <summary>设置 UserRelateType.set_Parent(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.AllInstances.UserRelateTablesGet">
            <summary>设置 UserRelateType.get_UserRelateTables() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.AllInstances.UserRelateTablesSetICollectionOfUserRelateTable">
            <summary>设置 UserRelateType.set_UserRelateTables(ICollection`1&lt;UserRelateTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.AllInstances.UserRelateType1Get">
            <summary>设置 UserRelateType.get_UserRelateType1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.AllInstances.UserRelateType1SetUserRelateType">
            <summary>设置 UserRelateType.set_UserRelateType1(UserRelateType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.AllInstances.UserRelateTypesGet">
            <summary>设置 UserRelateType.get_UserRelateTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUserRelateType.AllInstances.UserRelateTypesSetICollectionOfUserRelateType">
            <summary>设置 UserRelateType.set_UserRelateTypes(ICollection`1&lt;UserRelateType&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable">
            <summary>BCP.Domain.Edmx.User_ContacTable 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.#ctor(BCP.Domain.Edmx.User_ContacTable)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.Constructor">
            <summary>设置 User_ContacTable.User_ContacTable() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.EventTimeGet">
            <summary>设置 User_ContacTable.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.EventTimeSetInt64">
            <summary>设置 User_ContacTable.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.IDGet">
            <summary>设置 User_ContacTable.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.IDSetInt32">
            <summary>设置 User_ContacTable.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.NameGet">
            <summary>设置 User_ContacTable.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.NameSetString">
            <summary>设置 User_ContacTable.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.ToolsGet">
            <summary>设置 User_ContacTable.get_Tools() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.ToolsSetString">
            <summary>设置 User_ContacTable.set_Tools(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.UserGet">
            <summary>设置 User_ContacTable.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.UserIDGet">
            <summary>设置 User_ContacTable.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.UserIDSetNullableOfInt32">
            <summary>设置 User_ContacTable.set_UserID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.UserSetUser">
            <summary>设置 User_ContacTable.set_User(User value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.ValueGet">
            <summary>设置 User_ContacTable.get_Value() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.ValueSetString">
            <summary>设置 User_ContacTable.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.AllInstances.EventTimeGet">
            <summary>设置 User_ContacTable.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.AllInstances.EventTimeSetInt64">
            <summary>设置 User_ContacTable.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.AllInstances.IDGet">
            <summary>设置 User_ContacTable.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.AllInstances.IDSetInt32">
            <summary>设置 User_ContacTable.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.AllInstances.NameGet">
            <summary>设置 User_ContacTable.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.AllInstances.NameSetString">
            <summary>设置 User_ContacTable.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.AllInstances.ToolsGet">
            <summary>设置 User_ContacTable.get_Tools() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.AllInstances.ToolsSetString">
            <summary>设置 User_ContacTable.set_Tools(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.AllInstances.UserGet">
            <summary>设置 User_ContacTable.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.AllInstances.UserIDGet">
            <summary>设置 User_ContacTable.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.AllInstances.UserIDSetNullableOfInt32">
            <summary>设置 User_ContacTable.set_UserID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.AllInstances.UserSetUser">
            <summary>设置 User_ContacTable.set_User(User value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.AllInstances.ValueGet">
            <summary>设置 User_ContacTable.get_Value() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimUser_ContacTable.AllInstances.ValueSetString">
            <summary>设置 User_ContacTable.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimWorkMessage">
            <summary>BCP.Domain.Edmx.WorkMessage 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkMessage.#ctor(BCP.Domain.Edmx.WorkMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AuthorizationGet">
            <summary>设置 WorkMessage.get_Authorization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AuthorizationIdGet">
            <summary>设置 WorkMessage.get_AuthorizationId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AuthorizationIdSetInt32">
            <summary>设置 WorkMessage.set_AuthorizationId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AuthorizationSetAuthorization">
            <summary>设置 WorkMessage.set_Authorization(Authorization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.Constructor">
            <summary>设置 WorkMessage.WorkMessage() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.ContentGet">
            <summary>设置 WorkMessage.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.ContentSetString">
            <summary>设置 WorkMessage.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.EnvironmentGet">
            <summary>设置 WorkMessage.get_Environment() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.EnvironmentSetString">
            <summary>设置 WorkMessage.set_Environment(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.EventTimeGet">
            <summary>设置 WorkMessage.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.EventTimeSetInt64">
            <summary>设置 WorkMessage.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.IdGet">
            <summary>设置 WorkMessage.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.IdSetInt32">
            <summary>设置 WorkMessage.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.ReposeGet">
            <summary>设置 WorkMessage.get_Repose() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.ReposeSetString">
            <summary>设置 WorkMessage.set_Repose(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.RequestGet">
            <summary>设置 WorkMessage.get_Request() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.RequestSetString">
            <summary>设置 WorkMessage.set_Request(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.StateGet">
            <summary>设置 WorkMessage.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.StateSetString">
            <summary>设置 WorkMessage.set_State(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.AuthorizationGet">
            <summary>设置 WorkMessage.get_Authorization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.AuthorizationIdGet">
            <summary>设置 WorkMessage.get_AuthorizationId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.AuthorizationIdSetInt32">
            <summary>设置 WorkMessage.set_AuthorizationId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.AuthorizationSetAuthorization">
            <summary>设置 WorkMessage.set_Authorization(Authorization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.ContentGet">
            <summary>设置 WorkMessage.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.ContentSetString">
            <summary>设置 WorkMessage.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.EnvironmentGet">
            <summary>设置 WorkMessage.get_Environment() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.EnvironmentSetString">
            <summary>设置 WorkMessage.set_Environment(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.EventTimeGet">
            <summary>设置 WorkMessage.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.EventTimeSetInt64">
            <summary>设置 WorkMessage.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.IdGet">
            <summary>设置 WorkMessage.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.IdSetInt32">
            <summary>设置 WorkMessage.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.ReposeGet">
            <summary>设置 WorkMessage.get_Repose() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.ReposeSetString">
            <summary>设置 WorkMessage.set_Repose(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.RequestGet">
            <summary>设置 WorkMessage.get_Request() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.RequestSetString">
            <summary>设置 WorkMessage.set_Request(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.StateGet">
            <summary>设置 WorkMessage.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkMessage.AllInstances.StateSetString">
            <summary>设置 WorkMessage.set_State(String value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimWorkModul">
            <summary>BCP.Domain.Edmx.WorkModul 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkModul.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkModul.#ctor(BCP.Domain.Edmx.WorkModul)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkModul.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkModul.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.ActivityTypeGet">
            <summary>设置 WorkModul.get_ActivityType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.ActivityTypeSetString">
            <summary>设置 WorkModul.set_ActivityType(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.Constructor">
            <summary>设置 WorkModul.WorkModul() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.ContentGet">
            <summary>设置 WorkModul.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.ContentSetString">
            <summary>设置 WorkModul.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.DllFileStreamGet">
            <summary>设置 WorkModul.get_DllFileStream() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.DllFileStreamIDGet">
            <summary>设置 WorkModul.get_DllFileStreamID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.DllFileStreamIDSetNullableOfInt32">
            <summary>设置 WorkModul.set_DllFileStreamID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.DllFileStreamSetDllFileStream">
            <summary>设置 WorkModul.set_DllFileStream(DllFileStream value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.EventTimeGet">
            <summary>设置 WorkModul.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.EventTimeSetInt64">
            <summary>设置 WorkModul.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.FunctionGroupIDGet">
            <summary>设置 WorkModul.get_FunctionGroupID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.FunctionGroupIDSetNullableOfInt32">
            <summary>设置 WorkModul.set_FunctionGroupID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.IdGet">
            <summary>设置 WorkModul.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.IdSetInt32">
            <summary>设置 WorkModul.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.ModulPropertiesGet">
            <summary>设置 WorkModul.get_ModulProperties() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.ModulPropertiesSetICollectionOfModulProperty">
            <summary>设置 WorkModul.set_ModulProperties(ICollection`1&lt;ModulProperty&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.NameGet">
            <summary>设置 WorkModul.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.NameSetString">
            <summary>设置 WorkModul.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.WorkModul1Get">
            <summary>设置 WorkModul.get_WorkModul1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.WorkModul1SetWorkModul">
            <summary>设置 WorkModul.set_WorkModul1(WorkModul value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.WorkModulIdGet">
            <summary>设置 WorkModul.get_WorkModulId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.WorkModulIdSetNullableOfInt32">
            <summary>设置 WorkModul.set_WorkModulId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.WorkModulsGet">
            <summary>设置 WorkModul.get_WorkModuls() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.WorkModulsSetICollectionOfWorkModul">
            <summary>设置 WorkModul.set_WorkModuls(ICollection`1&lt;WorkModul&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.WorkSpaceRolesGet">
            <summary>设置 WorkModul.get_WorkSpaceRoles() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.WorkSpaceRolesSetICollectionOfWorkSpaceRole">
            <summary>设置 WorkModul.set_WorkSpaceRoles(ICollection`1&lt;WorkSpaceRole&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.ActivityTypeGet">
            <summary>设置 WorkModul.get_ActivityType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.ActivityTypeSetString">
            <summary>设置 WorkModul.set_ActivityType(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.ContentGet">
            <summary>设置 WorkModul.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.ContentSetString">
            <summary>设置 WorkModul.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.DllFileStreamGet">
            <summary>设置 WorkModul.get_DllFileStream() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.DllFileStreamIDGet">
            <summary>设置 WorkModul.get_DllFileStreamID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.DllFileStreamIDSetNullableOfInt32">
            <summary>设置 WorkModul.set_DllFileStreamID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.DllFileStreamSetDllFileStream">
            <summary>设置 WorkModul.set_DllFileStream(DllFileStream value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.EventTimeGet">
            <summary>设置 WorkModul.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.EventTimeSetInt64">
            <summary>设置 WorkModul.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.FunctionGroupIDGet">
            <summary>设置 WorkModul.get_FunctionGroupID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.FunctionGroupIDSetNullableOfInt32">
            <summary>设置 WorkModul.set_FunctionGroupID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.IdGet">
            <summary>设置 WorkModul.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.IdSetInt32">
            <summary>设置 WorkModul.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.ModulPropertiesGet">
            <summary>设置 WorkModul.get_ModulProperties() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.ModulPropertiesSetICollectionOfModulProperty">
            <summary>设置 WorkModul.set_ModulProperties(ICollection`1&lt;ModulProperty&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.NameGet">
            <summary>设置 WorkModul.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.NameSetString">
            <summary>设置 WorkModul.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.WorkModul1Get">
            <summary>设置 WorkModul.get_WorkModul1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.WorkModul1SetWorkModul">
            <summary>设置 WorkModul.set_WorkModul1(WorkModul value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.WorkModulIdGet">
            <summary>设置 WorkModul.get_WorkModulId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.WorkModulIdSetNullableOfInt32">
            <summary>设置 WorkModul.set_WorkModulId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.WorkModulsGet">
            <summary>设置 WorkModul.get_WorkModuls() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.WorkModulsSetICollectionOfWorkModul">
            <summary>设置 WorkModul.set_WorkModuls(ICollection`1&lt;WorkModul&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.WorkSpaceRolesGet">
            <summary>设置 WorkModul.get_WorkSpaceRoles() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkModul.AllInstances.WorkSpaceRolesSetICollectionOfWorkSpaceRole">
            <summary>设置 WorkModul.set_WorkSpaceRoles(ICollection`1&lt;WorkSpaceRole&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimWorkSpace">
            <summary>BCP.Domain.Edmx.WorkSpace 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkSpace.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkSpace.#ctor(BCP.Domain.Edmx.WorkSpace)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkSpace.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkSpace.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.CommentGet">
            <summary>设置 WorkSpace.get_Comment() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.CommentSetString">
            <summary>设置 WorkSpace.set_Comment(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.Constructor">
            <summary>设置 WorkSpace.WorkSpace() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.ContentGet">
            <summary>设置 WorkSpace.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.ContentSetString">
            <summary>设置 WorkSpace.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.DescriptGet">
            <summary>设置 WorkSpace.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.DescriptSetString">
            <summary>设置 WorkSpace.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.DocReadersGet">
            <summary>设置 WorkSpace.get_DocReaders() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.DocReadersSetICollectionOfDocReader">
            <summary>设置 WorkSpace.set_DocReaders(ICollection`1&lt;DocReader&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.EventTimeGet">
            <summary>设置 WorkSpace.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.EventTimeSetInt64">
            <summary>设置 WorkSpace.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.IDGet">
            <summary>设置 WorkSpace.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.IDSetInt32">
            <summary>设置 WorkSpace.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.IndustrySolutionGet">
            <summary>设置 WorkSpace.get_IndustrySolution() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.IndustrySolutionIdGet">
            <summary>设置 WorkSpace.get_IndustrySolutionId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.IndustrySolutionIdSetNullableOfInt32">
            <summary>设置 WorkSpace.set_IndustrySolutionId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.IndustrySolutionSetIndustrySolution">
            <summary>设置 WorkSpace.set_IndustrySolution(IndustrySolution value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.IsValidGet">
            <summary>设置 WorkSpace.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.IsValidSetBoolean">
            <summary>设置 WorkSpace.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.MarkerStringGet">
            <summary>设置 WorkSpace.get_MarkerString() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.MarkerStringSetString">
            <summary>设置 WorkSpace.set_MarkerString(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.NameGet">
            <summary>设置 WorkSpace.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.NameSetString">
            <summary>设置 WorkSpace.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.WorkModulGet">
            <summary>设置 WorkSpace.get_WorkModul() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.WorkModulIdGet">
            <summary>设置 WorkSpace.get_WorkModulId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.WorkModulIdSetNullableOfInt32">
            <summary>设置 WorkSpace.set_WorkModulId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.WorkModulSetWorkModul">
            <summary>设置 WorkSpace.set_WorkModul(WorkModul value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.WorkSpace1Get">
            <summary>设置 WorkSpace.get_WorkSpace1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.WorkSpace1SetWorkSpace">
            <summary>设置 WorkSpace.set_WorkSpace1(WorkSpace value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.WorkSpaceIDGet">
            <summary>设置 WorkSpace.get_WorkSpaceID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.WorkSpaceIDSetNullableOfInt32">
            <summary>设置 WorkSpace.set_WorkSpaceID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.WorkSpaceRolesGet">
            <summary>设置 WorkSpace.get_WorkSpaceRoles() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.WorkSpaceRolesSetICollectionOfWorkSpaceRole">
            <summary>设置 WorkSpace.set_WorkSpaceRoles(ICollection`1&lt;WorkSpaceRole&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.WorkSpaceTypesGet">
            <summary>设置 WorkSpace.get_WorkSpaceTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.WorkSpaceTypesSetICollectionOfWorkSpaceType">
            <summary>设置 WorkSpace.set_WorkSpaceTypes(ICollection`1&lt;WorkSpaceType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.WorkSpacesGet">
            <summary>设置 WorkSpace.get_WorkSpaces() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.WorkSpacesSetICollectionOfWorkSpace">
            <summary>设置 WorkSpace.set_WorkSpaces(ICollection`1&lt;WorkSpace&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.CommentGet">
            <summary>设置 WorkSpace.get_Comment() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.CommentSetString">
            <summary>设置 WorkSpace.set_Comment(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.ContentGet">
            <summary>设置 WorkSpace.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.ContentSetString">
            <summary>设置 WorkSpace.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.DescriptGet">
            <summary>设置 WorkSpace.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.DescriptSetString">
            <summary>设置 WorkSpace.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.DocReadersGet">
            <summary>设置 WorkSpace.get_DocReaders() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.DocReadersSetICollectionOfDocReader">
            <summary>设置 WorkSpace.set_DocReaders(ICollection`1&lt;DocReader&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.EventTimeGet">
            <summary>设置 WorkSpace.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.EventTimeSetInt64">
            <summary>设置 WorkSpace.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.IDGet">
            <summary>设置 WorkSpace.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.IDSetInt32">
            <summary>设置 WorkSpace.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.IndustrySolutionGet">
            <summary>设置 WorkSpace.get_IndustrySolution() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.IndustrySolutionIdGet">
            <summary>设置 WorkSpace.get_IndustrySolutionId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.IndustrySolutionIdSetNullableOfInt32">
            <summary>设置 WorkSpace.set_IndustrySolutionId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.IndustrySolutionSetIndustrySolution">
            <summary>设置 WorkSpace.set_IndustrySolution(IndustrySolution value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.IsValidGet">
            <summary>设置 WorkSpace.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.IsValidSetBoolean">
            <summary>设置 WorkSpace.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.MarkerStringGet">
            <summary>设置 WorkSpace.get_MarkerString() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.MarkerStringSetString">
            <summary>设置 WorkSpace.set_MarkerString(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.NameGet">
            <summary>设置 WorkSpace.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.NameSetString">
            <summary>设置 WorkSpace.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.WorkModulGet">
            <summary>设置 WorkSpace.get_WorkModul() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.WorkModulIdGet">
            <summary>设置 WorkSpace.get_WorkModulId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.WorkModulIdSetNullableOfInt32">
            <summary>设置 WorkSpace.set_WorkModulId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.WorkModulSetWorkModul">
            <summary>设置 WorkSpace.set_WorkModul(WorkModul value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.WorkSpace1Get">
            <summary>设置 WorkSpace.get_WorkSpace1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.WorkSpace1SetWorkSpace">
            <summary>设置 WorkSpace.set_WorkSpace1(WorkSpace value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.WorkSpaceIDGet">
            <summary>设置 WorkSpace.get_WorkSpaceID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.WorkSpaceIDSetNullableOfInt32">
            <summary>设置 WorkSpace.set_WorkSpaceID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.WorkSpaceRolesGet">
            <summary>设置 WorkSpace.get_WorkSpaceRoles() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.WorkSpaceRolesSetICollectionOfWorkSpaceRole">
            <summary>设置 WorkSpace.set_WorkSpaceRoles(ICollection`1&lt;WorkSpaceRole&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.WorkSpaceTypesGet">
            <summary>设置 WorkSpace.get_WorkSpaceTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.WorkSpaceTypesSetICollectionOfWorkSpaceType">
            <summary>设置 WorkSpace.set_WorkSpaceTypes(ICollection`1&lt;WorkSpaceType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.WorkSpacesGet">
            <summary>设置 WorkSpace.get_WorkSpaces() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpace.AllInstances.WorkSpacesSetICollectionOfWorkSpace">
            <summary>设置 WorkSpace.set_WorkSpaces(ICollection`1&lt;WorkSpace&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType">
            <summary>BCP.Domain.Edmx.WorkSpaceBaseType 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.#ctor(BCP.Domain.Edmx.WorkSpaceBaseType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.Constructor">
            <summary>设置 WorkSpaceBaseType.WorkSpaceBaseType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.DocumentManagesGet">
            <summary>设置 WorkSpaceBaseType.get_DocumentManages() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.DocumentManagesSetICollectionOfDocumentManage">
            <summary>设置 WorkSpaceBaseType.set_DocumentManages(ICollection`1&lt;DocumentManage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.EventTimeGet">
            <summary>设置 WorkSpaceBaseType.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.EventTimeSetInt64">
            <summary>设置 WorkSpaceBaseType.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.IdGet">
            <summary>设置 WorkSpaceBaseType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.IdSetInt32">
            <summary>设置 WorkSpaceBaseType.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.NameGet">
            <summary>设置 WorkSpaceBaseType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.NameSetString">
            <summary>设置 WorkSpaceBaseType.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.NoteGet">
            <summary>设置 WorkSpaceBaseType.get_Note() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.NoteSetString">
            <summary>设置 WorkSpaceBaseType.set_Note(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.WorkSpaceBaseType1Get">
            <summary>设置 WorkSpaceBaseType.get_WorkSpaceBaseType1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.WorkSpaceBaseType1SetWorkSpaceBaseType">
            <summary>设置 WorkSpaceBaseType.set_WorkSpaceBaseType1(WorkSpaceBaseType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.WorkSpaceBaseTypeIdGet">
            <summary>设置 WorkSpaceBaseType.get_WorkSpaceBaseTypeId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.WorkSpaceBaseTypeIdSetNullableOfInt32">
            <summary>设置 WorkSpaceBaseType.set_WorkSpaceBaseTypeId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.WorkSpaceBaseTypesGet">
            <summary>设置 WorkSpaceBaseType.get_WorkSpaceBaseTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.WorkSpaceBaseTypesSetICollectionOfWorkSpaceBaseType">
            <summary>设置 WorkSpaceBaseType.set_WorkSpaceBaseTypes(ICollection`1&lt;WorkSpaceBaseType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.WorkSpaceTypesGet">
            <summary>设置 WorkSpaceBaseType.get_WorkSpaceTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.WorkSpaceTypesSetICollectionOfWorkSpaceType">
            <summary>设置 WorkSpaceBaseType.set_WorkSpaceTypes(ICollection`1&lt;WorkSpaceType&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.DocumentManagesGet">
            <summary>设置 WorkSpaceBaseType.get_DocumentManages() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.DocumentManagesSetICollectionOfDocumentManage">
            <summary>设置 WorkSpaceBaseType.set_DocumentManages(ICollection`1&lt;DocumentManage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.EventTimeGet">
            <summary>设置 WorkSpaceBaseType.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.EventTimeSetInt64">
            <summary>设置 WorkSpaceBaseType.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.IdGet">
            <summary>设置 WorkSpaceBaseType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.IdSetInt32">
            <summary>设置 WorkSpaceBaseType.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.NameGet">
            <summary>设置 WorkSpaceBaseType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.NameSetString">
            <summary>设置 WorkSpaceBaseType.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.NoteGet">
            <summary>设置 WorkSpaceBaseType.get_Note() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.NoteSetString">
            <summary>设置 WorkSpaceBaseType.set_Note(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.WorkSpaceBaseType1Get">
            <summary>设置 WorkSpaceBaseType.get_WorkSpaceBaseType1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.WorkSpaceBaseType1SetWorkSpaceBaseType">
            <summary>设置 WorkSpaceBaseType.set_WorkSpaceBaseType1(WorkSpaceBaseType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.WorkSpaceBaseTypeIdGet">
            <summary>设置 WorkSpaceBaseType.get_WorkSpaceBaseTypeId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.WorkSpaceBaseTypeIdSetNullableOfInt32">
            <summary>设置 WorkSpaceBaseType.set_WorkSpaceBaseTypeId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.WorkSpaceBaseTypesGet">
            <summary>设置 WorkSpaceBaseType.get_WorkSpaceBaseTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.WorkSpaceBaseTypesSetICollectionOfWorkSpaceBaseType">
            <summary>设置 WorkSpaceBaseType.set_WorkSpaceBaseTypes(ICollection`1&lt;WorkSpaceBaseType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.WorkSpaceTypesGet">
            <summary>设置 WorkSpaceBaseType.get_WorkSpaceTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceBaseType.AllInstances.WorkSpaceTypesSetICollectionOfWorkSpaceType">
            <summary>设置 WorkSpaceBaseType.set_WorkSpaceTypes(ICollection`1&lt;WorkSpaceType&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole">
            <summary>BCP.Domain.Edmx.WorkSpaceRole 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.#ctor(BCP.Domain.Edmx.WorkSpaceRole)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.Constructor">
            <summary>设置 WorkSpaceRole.WorkSpaceRole() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.DescriptGet">
            <summary>设置 WorkSpaceRole.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.DescriptSetString">
            <summary>设置 WorkSpaceRole.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.IdGet">
            <summary>设置 WorkSpaceRole.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.IdSetInt32">
            <summary>设置 WorkSpaceRole.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.OrganizationGet">
            <summary>设置 WorkSpaceRole.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.OrganizationIDGet">
            <summary>设置 WorkSpaceRole.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.OrganizationIDSetInt32">
            <summary>设置 WorkSpaceRole.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.OrganizationSetOrganization">
            <summary>设置 WorkSpaceRole.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.TypeGet">
            <summary>设置 WorkSpaceRole.get_Type() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.TypeSetString">
            <summary>设置 WorkSpaceRole.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.UserGet">
            <summary>设置 WorkSpaceRole.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.UserIDGet">
            <summary>设置 WorkSpaceRole.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.UserIDSetNullableOfInt32">
            <summary>设置 WorkSpaceRole.set_UserID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.UserSetUser">
            <summary>设置 WorkSpaceRole.set_User(User value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.WorkModulGet">
            <summary>设置 WorkSpaceRole.get_WorkModul() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.WorkModulIdGet">
            <summary>设置 WorkSpaceRole.get_WorkModulId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.WorkModulIdSetNullableOfInt32">
            <summary>设置 WorkSpaceRole.set_WorkModulId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.WorkModulSetWorkModul">
            <summary>设置 WorkSpaceRole.set_WorkModul(WorkModul value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.WorkSpaceGet">
            <summary>设置 WorkSpaceRole.get_WorkSpace() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.WorkSpaceIDGet">
            <summary>设置 WorkSpaceRole.get_WorkSpaceID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.WorkSpaceIDSetInt32">
            <summary>设置 WorkSpaceRole.set_WorkSpaceID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.WorkSpaceSetWorkSpace">
            <summary>设置 WorkSpaceRole.set_WorkSpace(WorkSpace value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.DescriptGet">
            <summary>设置 WorkSpaceRole.get_Descript() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.DescriptSetString">
            <summary>设置 WorkSpaceRole.set_Descript(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.IdGet">
            <summary>设置 WorkSpaceRole.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.IdSetInt32">
            <summary>设置 WorkSpaceRole.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.OrganizationGet">
            <summary>设置 WorkSpaceRole.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.OrganizationIDGet">
            <summary>设置 WorkSpaceRole.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.OrganizationIDSetInt32">
            <summary>设置 WorkSpaceRole.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.OrganizationSetOrganization">
            <summary>设置 WorkSpaceRole.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.TypeGet">
            <summary>设置 WorkSpaceRole.get_Type() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.TypeSetString">
            <summary>设置 WorkSpaceRole.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.UserGet">
            <summary>设置 WorkSpaceRole.get_User() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.UserIDGet">
            <summary>设置 WorkSpaceRole.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.UserIDSetNullableOfInt32">
            <summary>设置 WorkSpaceRole.set_UserID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.UserSetUser">
            <summary>设置 WorkSpaceRole.set_User(User value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.WorkModulGet">
            <summary>设置 WorkSpaceRole.get_WorkModul() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.WorkModulIdGet">
            <summary>设置 WorkSpaceRole.get_WorkModulId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.WorkModulIdSetNullableOfInt32">
            <summary>设置 WorkSpaceRole.set_WorkModulId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.WorkModulSetWorkModul">
            <summary>设置 WorkSpaceRole.set_WorkModul(WorkModul value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.WorkSpaceGet">
            <summary>设置 WorkSpaceRole.get_WorkSpace() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.WorkSpaceIDGet">
            <summary>设置 WorkSpaceRole.get_WorkSpaceID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.WorkSpaceIDSetInt32">
            <summary>设置 WorkSpaceRole.set_WorkSpaceID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceRole.AllInstances.WorkSpaceSetWorkSpace">
            <summary>设置 WorkSpaceRole.set_WorkSpace(WorkSpace value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType">
            <summary>BCP.Domain.Edmx.WorkSpaceType 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.#ctor(BCP.Domain.Edmx.WorkSpaceType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.ByPropertyGet">
            <summary>设置 WorkSpaceType.get_ByProperty() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.ByPropertySetString">
            <summary>设置 WorkSpaceType.set_ByProperty(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.Constructor">
            <summary>设置 WorkSpaceType.WorkSpaceType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.EventTimeGet">
            <summary>设置 WorkSpaceType.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.EventTimeSetInt64">
            <summary>设置 WorkSpaceType.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.IdGet">
            <summary>设置 WorkSpaceType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.IdSetInt32">
            <summary>设置 WorkSpaceType.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.WorkSpaceBaseTypeGet">
            <summary>设置 WorkSpaceType.get_WorkSpaceBaseType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.WorkSpaceBaseTypeIdGet">
            <summary>设置 WorkSpaceType.get_WorkSpaceBaseTypeId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.WorkSpaceBaseTypeIdSetNullableOfInt32">
            <summary>设置 WorkSpaceType.set_WorkSpaceBaseTypeId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.WorkSpaceBaseTypeSetWorkSpaceBaseType">
            <summary>设置 WorkSpaceType.set_WorkSpaceBaseType(WorkSpaceBaseType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.WorkSpaceGet">
            <summary>设置 WorkSpaceType.get_WorkSpace() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.WorkSpaceIDGet">
            <summary>设置 WorkSpaceType.get_WorkSpaceID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.WorkSpaceIDSetNullableOfInt32">
            <summary>设置 WorkSpaceType.set_WorkSpaceID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.WorkSpaceSetWorkSpace">
            <summary>设置 WorkSpaceType.set_WorkSpace(WorkSpace value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.AllInstances.ByPropertyGet">
            <summary>设置 WorkSpaceType.get_ByProperty() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.AllInstances.ByPropertySetString">
            <summary>设置 WorkSpaceType.set_ByProperty(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.AllInstances.EventTimeGet">
            <summary>设置 WorkSpaceType.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.AllInstances.EventTimeSetInt64">
            <summary>设置 WorkSpaceType.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.AllInstances.IdGet">
            <summary>设置 WorkSpaceType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.AllInstances.IdSetInt32">
            <summary>设置 WorkSpaceType.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.AllInstances.WorkSpaceBaseTypeGet">
            <summary>设置 WorkSpaceType.get_WorkSpaceBaseType() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.AllInstances.WorkSpaceBaseTypeIdGet">
            <summary>设置 WorkSpaceType.get_WorkSpaceBaseTypeId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.AllInstances.WorkSpaceBaseTypeIdSetNullableOfInt32">
            <summary>设置 WorkSpaceType.set_WorkSpaceBaseTypeId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.AllInstances.WorkSpaceBaseTypeSetWorkSpaceBaseType">
            <summary>设置 WorkSpaceType.set_WorkSpaceBaseType(WorkSpaceBaseType value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.AllInstances.WorkSpaceGet">
            <summary>设置 WorkSpaceType.get_WorkSpace() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.AllInstances.WorkSpaceIDGet">
            <summary>设置 WorkSpaceType.get_WorkSpaceID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.AllInstances.WorkSpaceIDSetNullableOfInt32">
            <summary>设置 WorkSpaceType.set_WorkSpaceID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimWorkSpaceType.AllInstances.WorkSpaceSetWorkSpace">
            <summary>设置 WorkSpaceType.set_WorkSpace(WorkSpace value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimZipCode">
            <summary>BCP.Domain.Edmx.ZipCode 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimZipCode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimZipCode.#ctor(BCP.Domain.Edmx.ZipCode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimZipCode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimZipCode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimZipCode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimZipCode.CodeGet">
            <summary>设置 ZipCode.get_Code() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimZipCode.CodeSetString">
            <summary>设置 ZipCode.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimZipCode.Constructor">
            <summary>设置 ZipCode.ZipCode() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimZipCode.EventTimeGet">
            <summary>设置 ZipCode.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimZipCode.EventTimeSetInt64">
            <summary>设置 ZipCode.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimZipCode.IDGet">
            <summary>设置 ZipCode.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimZipCode.IDSetInt32">
            <summary>设置 ZipCode.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimZipCode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimZipCode.AllInstances.CodeGet">
            <summary>设置 ZipCode.get_Code() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimZipCode.AllInstances.CodeSetString">
            <summary>设置 ZipCode.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimZipCode.AllInstances.EventTimeGet">
            <summary>设置 ZipCode.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimZipCode.AllInstances.EventTimeSetInt64">
            <summary>设置 ZipCode.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimZipCode.AllInstances.IDGet">
            <summary>设置 ZipCode.get_ID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimZipCode.AllInstances.IDSetInt32">
            <summary>设置 ZipCode.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimphysicalAsset">
            <summary>BCP.Domain.Edmx.physicalAsset 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.#ctor(BCP.Domain.Edmx.physicalAsset)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AssetMaintenancesGet">
            <summary>设置 physicalAsset.get_AssetMaintenances() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AssetMaintenancesSetICollectionOfAssetMaintenance">
            <summary>设置 physicalAsset.set_AssetMaintenances(ICollection`1&lt;AssetMaintenance&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AssetUsesGet">
            <summary>设置 physicalAsset.get_AssetUses() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AssetUsesSetICollectionOfAssetUse">
            <summary>设置 physicalAsset.set_AssetUses(ICollection`1&lt;AssetUse&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.BuyTimeGet">
            <summary>设置 physicalAsset.get_BuyTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.BuyTimeSetString">
            <summary>设置 physicalAsset.set_BuyTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.Constructor">
            <summary>设置 physicalAsset.physicalAsset() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.EventTimeGet">
            <summary>设置 physicalAsset.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.EventTimeSetInt64">
            <summary>设置 physicalAsset.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.IdGet">
            <summary>设置 physicalAsset.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.IdSetInt32">
            <summary>设置 physicalAsset.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.MaintenancePeriodGet">
            <summary>设置 physicalAsset.get_MaintenancePeriod() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.MaintenancePeriodSetNullableOfDateTimeOffset">
            <summary>设置 physicalAsset.set_MaintenancePeriod(Nullable`1&lt;DateTimeOffset&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.Organization1Get">
            <summary>设置 physicalAsset.get_Organization1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.Organization1SetOrganization">
            <summary>设置 physicalAsset.set_Organization1(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.OrganizationAssetTypesGet">
            <summary>设置 physicalAsset.get_OrganizationAssetTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.OrganizationAssetTypesSetICollectionOfOrganizationAssetType">
            <summary>设置 physicalAsset.set_OrganizationAssetTypes(ICollection`1&lt;OrganizationAssetType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.OrganizationGet">
            <summary>设置 physicalAsset.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.OrganizationIDGet">
            <summary>设置 physicalAsset.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.OrganizationIDSetInt32">
            <summary>设置 physicalAsset.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.OrganizationSetOrganization">
            <summary>设置 physicalAsset.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.PlaceOfBuyGet">
            <summary>设置 physicalAsset.get_PlaceOfBuy() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.PlaceOfBuySetString">
            <summary>设置 physicalAsset.set_PlaceOfBuy(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.ProductGet">
            <summary>设置 physicalAsset.get_Product() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.ProductIdGet">
            <summary>设置 physicalAsset.get_ProductId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.ProductIdSetInt32">
            <summary>设置 physicalAsset.set_ProductId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.ProductSetProduct">
            <summary>设置 physicalAsset.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.StateGet">
            <summary>设置 physicalAsset.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.StateSetString">
            <summary>设置 physicalAsset.set_State(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.SupplierGet">
            <summary>设置 physicalAsset.get_Supplier() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.SupplierSetNullableOfInt32">
            <summary>设置 physicalAsset.set_Supplier(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.ValidityGet">
            <summary>设置 physicalAsset.get_Validity() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.ValiditySetString">
            <summary>设置 physicalAsset.set_Validity(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.ValueGet">
            <summary>设置 physicalAsset.get_Value() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.ValueSetDecimal">
            <summary>设置 physicalAsset.set_Value(Decimal value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.AssetMaintenancesGet">
            <summary>设置 physicalAsset.get_AssetMaintenances() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.AssetMaintenancesSetICollectionOfAssetMaintenance">
            <summary>设置 physicalAsset.set_AssetMaintenances(ICollection`1&lt;AssetMaintenance&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.AssetUsesGet">
            <summary>设置 physicalAsset.get_AssetUses() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.AssetUsesSetICollectionOfAssetUse">
            <summary>设置 physicalAsset.set_AssetUses(ICollection`1&lt;AssetUse&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.BuyTimeGet">
            <summary>设置 physicalAsset.get_BuyTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.BuyTimeSetString">
            <summary>设置 physicalAsset.set_BuyTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.EventTimeGet">
            <summary>设置 physicalAsset.get_EventTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.EventTimeSetInt64">
            <summary>设置 physicalAsset.set_EventTime(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.IdGet">
            <summary>设置 physicalAsset.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.IdSetInt32">
            <summary>设置 physicalAsset.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.MaintenancePeriodGet">
            <summary>设置 physicalAsset.get_MaintenancePeriod() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.MaintenancePeriodSetNullableOfDateTimeOffset">
            <summary>设置 physicalAsset.set_MaintenancePeriod(Nullable`1&lt;DateTimeOffset&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.Organization1Get">
            <summary>设置 physicalAsset.get_Organization1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.Organization1SetOrganization">
            <summary>设置 physicalAsset.set_Organization1(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.OrganizationAssetTypesGet">
            <summary>设置 physicalAsset.get_OrganizationAssetTypes() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.OrganizationAssetTypesSetICollectionOfOrganizationAssetType">
            <summary>设置 physicalAsset.set_OrganizationAssetTypes(ICollection`1&lt;OrganizationAssetType&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.OrganizationGet">
            <summary>设置 physicalAsset.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.OrganizationIDGet">
            <summary>设置 physicalAsset.get_OrganizationID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.OrganizationIDSetInt32">
            <summary>设置 physicalAsset.set_OrganizationID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.OrganizationSetOrganization">
            <summary>设置 physicalAsset.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.PlaceOfBuyGet">
            <summary>设置 physicalAsset.get_PlaceOfBuy() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.PlaceOfBuySetString">
            <summary>设置 physicalAsset.set_PlaceOfBuy(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.ProductGet">
            <summary>设置 physicalAsset.get_Product() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.ProductIdGet">
            <summary>设置 physicalAsset.get_ProductId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.ProductIdSetInt32">
            <summary>设置 physicalAsset.set_ProductId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.ProductSetProduct">
            <summary>设置 physicalAsset.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.StateGet">
            <summary>设置 physicalAsset.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.StateSetString">
            <summary>设置 physicalAsset.set_State(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.SupplierGet">
            <summary>设置 physicalAsset.get_Supplier() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.SupplierSetNullableOfInt32">
            <summary>设置 physicalAsset.set_Supplier(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.ValidityGet">
            <summary>设置 physicalAsset.get_Validity() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.ValiditySetString">
            <summary>设置 physicalAsset.set_Validity(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.ValueGet">
            <summary>设置 physicalAsset.get_Value() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimphysicalAsset.AllInstances.ValueSetDecimal">
            <summary>设置 physicalAsset.set_Value(Decimal value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimworkTask">
            <summary>BCP.Domain.Edmx.workTask 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimworkTask.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimworkTask.#ctor(BCP.Domain.Edmx.workTask)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimworkTask.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.ShimworkTask.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.BegeinTimeGet">
            <summary>设置 workTask.get_BegeinTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.BegeinTimeSetString">
            <summary>设置 workTask.set_BegeinTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.Constructor">
            <summary>设置 workTask.workTask() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.ContentGet">
            <summary>设置 workTask.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.ContentSetString">
            <summary>设置 workTask.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.DocumentContentsGet">
            <summary>设置 workTask.get_DocumentContents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.DocumentContentsSetICollectionOfDocumentContent">
            <summary>设置 workTask.set_DocumentContents(ICollection`1&lt;DocumentContent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.DocumentManageGet">
            <summary>设置 workTask.get_DocumentManage() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.DocumentManageIDGet">
            <summary>设置 workTask.get_DocumentManageID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.DocumentManageIDSetNullableOfInt32">
            <summary>设置 workTask.set_DocumentManageID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.DocumentManageSetDocumentManage">
            <summary>设置 workTask.set_DocumentManage(DocumentManage value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.EndTimeGet">
            <summary>设置 workTask.get_EndTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.EndTimeSetString">
            <summary>设置 workTask.set_EndTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.IdGet">
            <summary>设置 workTask.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.IdSetInt32">
            <summary>设置 workTask.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.StateGet">
            <summary>设置 workTask.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.StateSetString">
            <summary>设置 workTask.set_State(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.nameGet">
            <summary>设置 workTask.get_name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.nameSetString">
            <summary>设置 workTask.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.workTask1Get">
            <summary>设置 workTask.get_workTask1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.workTask1SetworkTask">
            <summary>设置 workTask.set_workTask1(workTask value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.workTaskIdGet">
            <summary>设置 workTask.get_workTaskId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.workTaskIdSetNullableOfInt32">
            <summary>设置 workTask.set_workTaskId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.workTasksGet">
            <summary>设置 workTask.get_workTasks() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.workTasksSetICollectionOfworkTask">
            <summary>设置 workTask.set_workTasks(ICollection`1&lt;workTask&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.BegeinTimeGet">
            <summary>设置 workTask.get_BegeinTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.BegeinTimeSetString">
            <summary>设置 workTask.set_BegeinTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.ContentGet">
            <summary>设置 workTask.get_Content() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.ContentSetString">
            <summary>设置 workTask.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.DocumentContentsGet">
            <summary>设置 workTask.get_DocumentContents() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.DocumentContentsSetICollectionOfDocumentContent">
            <summary>设置 workTask.set_DocumentContents(ICollection`1&lt;DocumentContent&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.DocumentManageGet">
            <summary>设置 workTask.get_DocumentManage() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.DocumentManageIDGet">
            <summary>设置 workTask.get_DocumentManageID() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.DocumentManageIDSetNullableOfInt32">
            <summary>设置 workTask.set_DocumentManageID(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.DocumentManageSetDocumentManage">
            <summary>设置 workTask.set_DocumentManage(DocumentManage value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.EndTimeGet">
            <summary>设置 workTask.get_EndTime() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.EndTimeSetString">
            <summary>设置 workTask.set_EndTime(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.IdGet">
            <summary>设置 workTask.get_Id() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.IdSetInt32">
            <summary>设置 workTask.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.StateGet">
            <summary>设置 workTask.get_State() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.StateSetString">
            <summary>设置 workTask.set_State(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.nameGet">
            <summary>设置 workTask.get_name() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.nameSetString">
            <summary>设置 workTask.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.workTask1Get">
            <summary>设置 workTask.get_workTask1() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.workTask1SetworkTask">
            <summary>设置 workTask.set_workTask1(workTask value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.workTaskIdGet">
            <summary>设置 workTask.get_workTaskId() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.workTaskIdSetNullableOfInt32">
            <summary>设置 workTask.set_workTaskId(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.workTasksGet">
            <summary>设置 workTask.get_workTasks() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.ShimworkTask.AllInstances.workTasksSetICollectionOfworkTask">
            <summary>设置 workTask.set_workTasks(ICollection`1&lt;workTask&gt; value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubAdministrativecode">
            <summary>BCP.Domain.Edmx.Administrativecode 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAdministrativecode.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAdministrativecode.Administrativecode1Get">
            <summary>设置 Administrativecode.get_Administrativecode1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAdministrativecode.Administrativecode1SetAdministrativecode">
            <summary>设置 Administrativecode.set_Administrativecode1(Administrativecode value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAdministrativecode.AdministrativecodesGet">
            <summary>设置 Administrativecode.get_Administrativecodes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAdministrativecode.AdministrativecodesSetICollectionOfAdministrativecode">
            <summary>设置 Administrativecode.set_Administrativecodes(ICollection`1&lt;Administrativecode&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAdministrativecode.AttachBackingFieldToAdministrativecode1">
            <summary>附加委托以将 StubAdministrativecode.Administrativecode1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAdministrativecode.AttachBackingFieldToAdministrativecodes">
            <summary>附加委托以将 StubAdministrativecode.Administrativecodes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAdministrativecode.AttachBackingFieldToOrganizBasics">
            <summary>附加委托以将 StubAdministrativecode.OrganizBasics 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAdministrativecode.InitializeStub">
            <summary>初始化 type StubAdministrativecode 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAdministrativecode.OrganizBasicsGet">
            <summary>设置 Administrativecode.get_OrganizBasics() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAdministrativecode.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 Administrativecode.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAdministrativecode.Administrativecode1">
            <summary>设置 Administrativecode.get_Administrativecode1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAdministrativecode.Administrativecodes">
            <summary>设置 Administrativecode.get_Administrativecodes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAdministrativecode.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAdministrativecode.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAdministrativecode.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAdministrativecode.OrganizBasics">
            <summary>设置 Administrativecode.get_OrganizBasics() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubAssetBaseType">
            <summary>BCP.Domain.Edmx.AssetBaseType 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAssetBaseType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAssetBaseType.AssetType1Get">
            <summary>设置 AssetBaseType.get_AssetType1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAssetBaseType.AssetType1SetAssetBaseType">
            <summary>设置 AssetBaseType.set_AssetType1(AssetBaseType value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAssetBaseType.AssetTypesGet">
            <summary>设置 AssetBaseType.get_AssetTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAssetBaseType.AssetTypesSetICollectionOfAssetBaseType">
            <summary>设置 AssetBaseType.set_AssetTypes(ICollection`1&lt;AssetBaseType&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAssetBaseType.AttachBackingFieldToAssetType1">
            <summary>附加委托以将 StubAssetBaseType.AssetType1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAssetBaseType.AttachBackingFieldToAssetTypes">
            <summary>附加委托以将 StubAssetBaseType.AssetTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAssetBaseType.AttachBackingFieldToOrganizationAssetTypes">
            <summary>附加委托以将 StubAssetBaseType.OrganizationAssetTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAssetBaseType.InitializeStub">
            <summary>初始化 type StubAssetBaseType 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAssetBaseType.OrganizationAssetTypesGet">
            <summary>设置 AssetBaseType.get_OrganizationAssetTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAssetBaseType.OrganizationAssetTypesSetICollectionOfOrganizationAssetType">
            <summary>设置 AssetBaseType.set_OrganizationAssetTypes(ICollection`1&lt;OrganizationAssetType&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAssetBaseType.AssetType1">
            <summary>设置 AssetBaseType.get_AssetType1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAssetBaseType.AssetTypes">
            <summary>设置 AssetBaseType.get_AssetTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAssetBaseType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAssetBaseType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAssetBaseType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAssetBaseType.OrganizationAssetTypes">
            <summary>设置 AssetBaseType.get_OrganizationAssetTypes() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubAssetMaintenance">
            <summary>BCP.Domain.Edmx.AssetMaintenance 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAssetMaintenance.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAssetMaintenance.AttachBackingFieldTophysicalAsset">
            <summary>附加委托以将 StubAssetMaintenance.physicalAsset 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAssetMaintenance.InitializeStub">
            <summary>初始化 type StubAssetMaintenance 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAssetMaintenance.PhysicalAssetGet">
            <summary>设置 AssetMaintenance.get_physicalAsset() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAssetMaintenance.PhysicalAssetSetphysicalAsset">
            <summary>设置 AssetMaintenance.set_physicalAsset(physicalAsset value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAssetMaintenance.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAssetMaintenance.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAssetMaintenance.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAssetMaintenance.physicalAsset">
            <summary>设置 AssetMaintenance.get_physicalAsset() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubAssetUse">
            <summary>BCP.Domain.Edmx.AssetUse 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAssetUse.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAssetUse.AttachBackingFieldTophysicalAsset">
            <summary>附加委托以将 StubAssetUse.physicalAsset 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAssetUse.InitializeStub">
            <summary>初始化 type StubAssetUse 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAssetUse.PhysicalAssetGet">
            <summary>设置 AssetUse.get_physicalAsset() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAssetUse.PhysicalAssetSetphysicalAsset">
            <summary>设置 AssetUse.set_physicalAsset(physicalAsset value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAssetUse.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAssetUse.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAssetUse.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAssetUse.physicalAsset">
            <summary>设置 AssetUse.get_physicalAsset() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubAuthorization">
            <summary>BCP.Domain.Edmx.Authorization 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAuthorization.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAuthorization.AttachBackingFieldToModulProperty">
            <summary>附加委托以将 StubAuthorization.ModulProperty 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAuthorization.AttachBackingFieldToPost">
            <summary>附加委托以将 StubAuthorization.Post 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAuthorization.AttachBackingFieldToPost1">
            <summary>附加委托以将 StubAuthorization.Post1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAuthorization.AttachBackingFieldToUser">
            <summary>附加委托以将 StubAuthorization.User 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAuthorization.AttachBackingFieldToUser1">
            <summary>附加委托以将 StubAuthorization.User1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAuthorization.AttachBackingFieldToWorkMessages">
            <summary>附加委托以将 StubAuthorization.WorkMessages 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubAuthorization.InitializeStub">
            <summary>初始化 type StubAuthorization 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAuthorization.ModulPropertyGet">
            <summary>设置 Authorization.get_ModulProperty() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAuthorization.ModulPropertySetModulProperty">
            <summary>设置 Authorization.set_ModulProperty(ModulProperty value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAuthorization.Post1Get">
            <summary>设置 Authorization.get_Post1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAuthorization.Post1SetPost">
            <summary>设置 Authorization.set_Post1(Post value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAuthorization.PostGet">
            <summary>设置 Authorization.get_Post() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAuthorization.PostSetPost">
            <summary>设置 Authorization.set_Post(Post value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAuthorization.User1Get">
            <summary>设置 Authorization.get_User1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAuthorization.User1SetUser">
            <summary>设置 Authorization.set_User1(User value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAuthorization.UserGet">
            <summary>设置 Authorization.get_User() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAuthorization.UserSetUser">
            <summary>设置 Authorization.set_User(User value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAuthorization.WorkMessagesGet">
            <summary>设置 Authorization.get_WorkMessages() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubAuthorization.WorkMessagesSetICollectionOfWorkMessage">
            <summary>设置 Authorization.set_WorkMessages(ICollection`1&lt;WorkMessage&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAuthorization.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAuthorization.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAuthorization.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAuthorization.ModulProperty">
            <summary>设置 Authorization.get_ModulProperty() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAuthorization.Post">
            <summary>设置 Authorization.get_Post() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAuthorization.Post1">
            <summary>设置 Authorization.get_Post1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAuthorization.User">
            <summary>设置 Authorization.get_User() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAuthorization.User1">
            <summary>设置 Authorization.get_User1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubAuthorization.WorkMessages">
            <summary>设置 Authorization.get_WorkMessages() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubBussnessVer">
            <summary>BCP.Domain.Edmx.BussnessVer 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubBussnessVer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubBussnessVer.InitializeStub">
            <summary>初始化 type StubBussnessVer 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubBussnessVer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubBussnessVer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubBussnessVer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubCustomCategory">
            <summary>BCP.Domain.Edmx.CustomCategory 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomCategory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomCategory.AttachBackingFieldToCustomCategories">
            <summary>附加委托以将 StubCustomCategory.CustomCategories 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomCategory.AttachBackingFieldToCustomCategory1">
            <summary>附加委托以将 StubCustomCategory.CustomCategory1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomCategory.AttachBackingFieldToCustomOrganizationTypes">
            <summary>附加委托以将 StubCustomCategory.CustomOrganizationTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomCategory.CustomCategoriesGet">
            <summary>设置 CustomCategory.get_CustomCategories() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomCategory.CustomCategoriesSetICollectionOfCustomCategory">
            <summary>设置 CustomCategory.set_CustomCategories(ICollection`1&lt;CustomCategory&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomCategory.CustomCategory1Get">
            <summary>设置 CustomCategory.get_CustomCategory1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomCategory.CustomCategory1SetCustomCategory">
            <summary>设置 CustomCategory.set_CustomCategory1(CustomCategory value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomCategory.CustomOrganizationTypesGet">
            <summary>设置 CustomCategory.get_CustomOrganizationTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomCategory.CustomOrganizationTypesSetICollectionOfOrganizationCustomType">
            <summary>设置 CustomCategory.set_CustomOrganizationTypes(ICollection`1&lt;OrganizationCustomType&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomCategory.InitializeStub">
            <summary>初始化 type StubCustomCategory 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomCategory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomCategory.CustomCategories">
            <summary>设置 CustomCategory.get_CustomCategories() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomCategory.CustomCategory1">
            <summary>设置 CustomCategory.get_CustomCategory1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomCategory.CustomOrganizationTypes">
            <summary>设置 CustomCategory.get_CustomOrganizationTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomCategory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomCategory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubCustomGroup">
            <summary>BCP.Domain.Edmx.CustomGroup 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomGroup.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomGroup.AttachBackingFieldToCustomGroupUsers">
            <summary>附加委托以将 StubCustomGroup.CustomGroupUsers 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomGroup.AttachBackingFieldToUser">
            <summary>附加委托以将 StubCustomGroup.User 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomGroup.CustomGroupUsersGet">
            <summary>设置 CustomGroup.get_CustomGroupUsers() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomGroup.CustomGroupUsersSetICollectionOfCustomGroupUser">
            <summary>设置 CustomGroup.set_CustomGroupUsers(ICollection`1&lt;CustomGroupUser&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomGroup.InitializeStub">
            <summary>初始化 type StubCustomGroup 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomGroup.UserGet">
            <summary>设置 CustomGroup.get_User() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomGroup.UserSetUser">
            <summary>设置 CustomGroup.set_User(User value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomGroup.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomGroup.CustomGroupUsers">
            <summary>设置 CustomGroup.get_CustomGroupUsers() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomGroup.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomGroup.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomGroup.User">
            <summary>设置 CustomGroup.get_User() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubCustomGroupUser">
            <summary>BCP.Domain.Edmx.CustomGroupUser 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomGroupUser.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomGroupUser.AttachBackingFieldToCustomGroup">
            <summary>附加委托以将 StubCustomGroupUser.CustomGroup 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomGroupUser.AttachBackingFieldToUser">
            <summary>附加委托以将 StubCustomGroupUser.User 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomGroupUser.CustomGroupGet">
            <summary>设置 CustomGroupUser.get_CustomGroup() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomGroupUser.CustomGroupSetCustomGroup">
            <summary>设置 CustomGroupUser.set_CustomGroup(CustomGroup value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomGroupUser.InitializeStub">
            <summary>初始化 type StubCustomGroupUser 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomGroupUser.UserGet">
            <summary>设置 CustomGroupUser.get_User() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomGroupUser.UserSetUser">
            <summary>设置 CustomGroupUser.set_User(User value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomGroupUser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomGroupUser.CustomGroup">
            <summary>设置 CustomGroupUser.get_CustomGroup() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomGroupUser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomGroupUser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomGroupUser.User">
            <summary>设置 CustomGroupUser.get_User() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubCustomTabData">
            <summary>BCP.Domain.Edmx.CustomTabData 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomTabData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomTabData.AttachBackingFieldToCustomTable">
            <summary>附加委托以将 StubCustomTabData.CustomTable 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomTabData.AttachBackingFieldToDocumentManage">
            <summary>附加委托以将 StubCustomTabData.DocumentManage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomTabData.CustomTableGet">
            <summary>设置 CustomTabData.get_CustomTable() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomTabData.CustomTableSetCustomTable">
            <summary>设置 CustomTabData.set_CustomTable(CustomTable value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomTabData.DocumentManageGet">
            <summary>设置 CustomTabData.get_DocumentManage() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomTabData.DocumentManageSetDocumentManage">
            <summary>设置 CustomTabData.set_DocumentManage(DocumentManage value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomTabData.InitializeStub">
            <summary>初始化 type StubCustomTabData 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomTabData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomTabData.CustomTable">
            <summary>设置 CustomTabData.get_CustomTable() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomTabData.DocumentManage">
            <summary>设置 CustomTabData.get_DocumentManage() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomTabData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomTabData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubCustomTable">
            <summary>BCP.Domain.Edmx.CustomTable 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomTable.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomTable.AttachBackingFieldToCustomTabDatas">
            <summary>附加委托以将 StubCustomTable.CustomTabDatas 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomTable.CustomTabDatasGet">
            <summary>设置 CustomTable.get_CustomTabDatas() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubCustomTable.CustomTabDatasSetICollectionOfCustomTabData">
            <summary>设置 CustomTable.set_CustomTabDatas(ICollection`1&lt;CustomTabData&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubCustomTable.InitializeStub">
            <summary>初始化 type StubCustomTable 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomTable.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomTable.CustomTabDatas">
            <summary>设置 CustomTable.get_CustomTabDatas() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomTable.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubCustomTable.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubDataContext">
            <summary>BCP.Domain.Edmx.DataContext 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.AdministrativecodesGet">
            <summary>设置 DataContext.get_Administrativecodes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.AdministrativecodesSetDbSetOfAdministrativecode">
            <summary>设置 DataContext.set_Administrativecodes(DbSet`1&lt;Administrativecode&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.AssetBaseTypesGet">
            <summary>设置 DataContext.get_AssetBaseTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.AssetBaseTypesSetDbSetOfAssetBaseType">
            <summary>设置 DataContext.set_AssetBaseTypes(DbSet`1&lt;AssetBaseType&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.AssetMaintenancesGet">
            <summary>设置 DataContext.get_AssetMaintenances() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.AssetMaintenancesSetDbSetOfAssetMaintenance">
            <summary>设置 DataContext.set_AssetMaintenances(DbSet`1&lt;AssetMaintenance&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.AssetUsesGet">
            <summary>设置 DataContext.get_AssetUses() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.AssetUsesSetDbSetOfAssetUse">
            <summary>设置 DataContext.set_AssetUses(DbSet`1&lt;AssetUse&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToAdministrativecodes">
            <summary>附加委托以将 StubDataContext.Administrativecodes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToAssetBaseTypes">
            <summary>附加委托以将 StubDataContext.AssetBaseTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToAssetMaintenances">
            <summary>附加委托以将 StubDataContext.AssetMaintenances 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToAssetUses">
            <summary>附加委托以将 StubDataContext.AssetUses 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToAuthorizations">
            <summary>附加委托以将 StubDataContext.Authorizations 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToBussnessVers">
            <summary>附加委托以将 StubDataContext.BussnessVers 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToCustomCategories">
            <summary>附加委托以将 StubDataContext.CustomCategories 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToCustomTabDatas">
            <summary>附加委托以将 StubDataContext.CustomTabDatas 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToCustomTables">
            <summary>附加委托以将 StubDataContext.CustomTables 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToDllFileStreams">
            <summary>附加委托以将 StubDataContext.DllFileStreams 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToDocCheckStates">
            <summary>附加委托以将 StubDataContext.DocCheckStates 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToDocComents">
            <summary>附加委托以将 StubDataContext.DocComents 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToDocLocations">
            <summary>附加委托以将 StubDataContext.DocLocations 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToDocManageStates">
            <summary>附加委托以将 StubDataContext.DocManageStates 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToDocReaders">
            <summary>附加委托以将 StubDataContext.DocReaders 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToDocSenders">
            <summary>附加委托以将 StubDataContext.DocSenders 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToDocTypes">
            <summary>附加委托以将 StubDataContext.DocTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToDocumentContents">
            <summary>附加委托以将 StubDataContext.DocumentContents 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToDocumentManages">
            <summary>附加委托以将 StubDataContext.DocumentManages 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToDocumentTypes">
            <summary>附加委托以将 StubDataContext.DocumentTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToEmployees1">
            <summary>附加委托以将 StubDataContext.Employees1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToIPCodes">
            <summary>附加委托以将 StubDataContext.IPCodes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToIndustryCodes">
            <summary>附加委托以将 StubDataContext.IndustryCodes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToIndustrySolutions">
            <summary>附加委托以将 StubDataContext.IndustrySolutions 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToJobChanges">
            <summary>附加委托以将 StubDataContext.JobChanges 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToLoginLogs">
            <summary>附加委托以将 StubDataContext.LoginLogs 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToModulProperties">
            <summary>附加委托以将 StubDataContext.ModulProperties 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToOperationDetails">
            <summary>附加委托以将 StubDataContext.OperationDetails 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToOperationEvents">
            <summary>附加委托以将 StubDataContext.OperationEvents 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToOrgaRegisterDocments">
            <summary>附加委托以将 StubDataContext.OrgaRegisterDocments 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToOrganicInvestors">
            <summary>附加委托以将 StubDataContext.OrganicInvestors 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToOrganizBasics">
            <summary>附加委托以将 StubDataContext.OrganizBasics 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToOrganizationAssetTypes">
            <summary>附加委托以将 StubDataContext.OrganizationAssetTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToOrganizationCustomTypes">
            <summary>附加委托以将 StubDataContext.OrganizationCustomTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToOrganizationEvents">
            <summary>附加委托以将 StubDataContext.OrganizationEvents 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToOrganizationOtherNames">
            <summary>附加委托以将 StubDataContext.OrganizationOtherNames 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToOrganizationTransitions">
            <summary>附加委托以将 StubDataContext.OrganizationTransitions 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToOrganization_ContactTables">
            <summary>附加委托以将 StubDataContext.Organization_ContactTables 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToOrganization_Type">
            <summary>附加委托以将 StubDataContext.Organization_Type 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToOrganizations">
            <summary>附加委托以将 StubDataContext.Organizations 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToPositions">
            <summary>附加委托以将 StubDataContext.Positions 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToPostRequires">
            <summary>附加委托以将 StubDataContext.PostRequires 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToPosts">
            <summary>附加委托以将 StubDataContext.Posts 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToProductCompositions">
            <summary>附加委托以将 StubDataContext.ProductCompositions 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToProductCustomCategories">
            <summary>附加委托以将 StubDataContext.ProductCustomCategories 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToProductCustomTypes">
            <summary>附加委托以将 StubDataContext.ProductCustomTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToProductEvents">
            <summary>附加委托以将 StubDataContext.ProductEvents 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToProductStandards">
            <summary>附加委托以将 StubDataContext.ProductStandards 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToProducts">
            <summary>附加委托以将 StubDataContext.Products 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToRegisterDocumentTypes">
            <summary>附加委托以将 StubDataContext.RegisterDocumentTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToSecurityinfoes">
            <summary>附加委托以将 StubDataContext.Securityinfoes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToSpecializeds">
            <summary>附加委托以将 StubDataContext.Specializeds 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToSubordinates">
            <summary>附加委托以将 StubDataContext.Subordinates 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToUserRelateTables">
            <summary>附加委托以将 StubDataContext.UserRelateTables 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToUserRelateTypes">
            <summary>附加委托以将 StubDataContext.UserRelateTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToUser_ContactTable">
            <summary>附加委托以将 StubDataContext.User_ContactTable 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToWorkMessages">
            <summary>附加委托以将 StubDataContext.WorkMessages 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToWorkModuls">
            <summary>附加委托以将 StubDataContext.WorkModuls 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToWorkSpaceBaseTypes">
            <summary>附加委托以将 StubDataContext.WorkSpaceBaseTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToWorkSpaceRoles">
            <summary>附加委托以将 StubDataContext.WorkSpaceRoles 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToWorkSpaceTypes">
            <summary>附加委托以将 StubDataContext.WorkSpaceTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToWorkSpaces">
            <summary>附加委托以将 StubDataContext.WorkSpaces 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToZipCodes">
            <summary>附加委托以将 StubDataContext.ZipCodes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldTophysicalAssets">
            <summary>附加委托以将 StubDataContext.physicalAssets 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldTosys_CustomGroupUser">
            <summary>附加委托以将 StubDataContext.sys_CustomGroupUser 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldTosys_CustomerGoup">
            <summary>附加委托以将 StubDataContext.sys_CustomerGoup 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldTosys_Group">
            <summary>附加委托以将 StubDataContext.sys_Group 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldTosys_GroupMember">
            <summary>附加委托以将 StubDataContext.sys_GroupMember 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldTosys_GroupMessager">
            <summary>附加委托以将 StubDataContext.sys_GroupMessager 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldTosys_User">
            <summary>附加委托以将 StubDataContext.sys_User 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldTosys_UserMessage">
            <summary>附加委托以将 StubDataContext.sys_UserMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.AttachBackingFieldToworkTasks">
            <summary>附加委托以将 StubDataContext.workTasks 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.AuthorizationsGet">
            <summary>设置 DataContext.get_Authorizations() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.AuthorizationsSetDbSetOfAuthorization">
            <summary>设置 DataContext.set_Authorizations(DbSet`1&lt;Authorization&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.BussnessVersGet">
            <summary>设置 DataContext.get_BussnessVers() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.BussnessVersSetDbSetOfBussnessVer">
            <summary>设置 DataContext.set_BussnessVers(DbSet`1&lt;BussnessVer&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ContactTableGetUser">
            <summary>设置 DataContext.get_User_ContactTable() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ContactTableSetUserDbSetOfUser_ContacTable">
            <summary>设置 DataContext.set_User_ContactTable(DbSet`1&lt;User_ContacTable&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ContactTablesGetOrganization">
            <summary>设置 DataContext.get_Organization_ContactTables() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ContactTablesSetOrganizationDbSetOfOrganization_ContacTable">
            <summary>设置 DataContext.set_Organization_ContactTables(DbSet`1&lt;Organization_ContacTable&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.CustomCategoriesGet">
            <summary>设置 DataContext.get_CustomCategories() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.CustomCategoriesSetDbSetOfCustomCategory">
            <summary>设置 DataContext.set_CustomCategories(DbSet`1&lt;CustomCategory&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.CustomGroupUserGetSys">
            <summary>设置 DataContext.get_sys_CustomGroupUser() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.CustomGroupUserSetSysDbSetOfCustomGroupUser">
            <summary>设置 DataContext.set_sys_CustomGroupUser(DbSet`1&lt;CustomGroupUser&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.CustomTabDatasGet">
            <summary>设置 DataContext.get_CustomTabDatas() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.CustomTabDatasSetDbSetOfCustomTabData">
            <summary>设置 DataContext.set_CustomTabDatas(DbSet`1&lt;CustomTabData&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.CustomTablesGet">
            <summary>设置 DataContext.get_CustomTables() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.CustomTablesSetDbSetOfCustomTable">
            <summary>设置 DataContext.set_CustomTables(DbSet`1&lt;CustomTable&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.CustomerGoupGetSys">
            <summary>设置 DataContext.get_sys_CustomerGoup() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.CustomerGoupSetSysDbSetOfCustomGroup">
            <summary>设置 DataContext.set_sys_CustomerGoup(DbSet`1&lt;CustomGroup&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.Dispose(System.Boolean)">
            <summary>设置 DbContext.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DisposeBoolean">
            <summary>设置 DbContext.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DllFileStreamsGet">
            <summary>设置 DataContext.get_DllFileStreams() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DllFileStreamsSetDbSetOfDllFileStream">
            <summary>设置 DataContext.set_DllFileStreams(DbSet`1&lt;DllFileStream&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocCheckStatesGet">
            <summary>设置 DataContext.get_DocCheckStates() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocCheckStatesSetDbSetOfDocCheckState">
            <summary>设置 DataContext.set_DocCheckStates(DbSet`1&lt;DocCheckState&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocComentsGet">
            <summary>设置 DataContext.get_DocComents() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocComentsSetDbSetOfDocComent">
            <summary>设置 DataContext.set_DocComents(DbSet`1&lt;DocComent&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocLocationsGet">
            <summary>设置 DataContext.get_DocLocations() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocLocationsSetDbSetOfDocLocation">
            <summary>设置 DataContext.set_DocLocations(DbSet`1&lt;DocLocation&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocManageStatesGet">
            <summary>设置 DataContext.get_DocManageStates() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocManageStatesSetDbSetOfDocManageState">
            <summary>设置 DataContext.set_DocManageStates(DbSet`1&lt;DocManageState&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocReadersGet">
            <summary>设置 DataContext.get_DocReaders() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocReadersSetDbSetOfDocReader">
            <summary>设置 DataContext.set_DocReaders(DbSet`1&lt;DocReader&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocSendersGet">
            <summary>设置 DataContext.get_DocSenders() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocSendersSetDbSetOfDocSender">
            <summary>设置 DataContext.set_DocSenders(DbSet`1&lt;DocSender&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocTypesGet">
            <summary>设置 DataContext.get_DocTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocTypesSetDbSetOfDocType">
            <summary>设置 DataContext.set_DocTypes(DbSet`1&lt;DocType&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocumentContentsGet">
            <summary>设置 DataContext.get_DocumentContents() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocumentContentsSetDbSetOfDocumentContent">
            <summary>设置 DataContext.set_DocumentContents(DbSet`1&lt;DocumentContent&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocumentManagesGet">
            <summary>设置 DataContext.get_DocumentManages() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocumentManagesSetDbSetOfDocumentManage">
            <summary>设置 DataContext.set_DocumentManages(DbSet`1&lt;DocumentManage&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocumentTypesGet">
            <summary>设置 DataContext.get_DocumentTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.DocumentTypesSetDbSetOfDocumentType">
            <summary>设置 DataContext.set_DocumentTypes(DbSet`1&lt;DocumentType&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.Employees1Get">
            <summary>设置 DataContext.get_Employees1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.Employees1SetDbSetOfEmployee">
            <summary>设置 DataContext.set_Employees1(DbSet`1&lt;Employee&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.Equals(System.Object)">
            <summary>设置 DbContext.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.EqualsObject">
            <summary>设置 DbContext.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.GetHashCode">
            <summary>设置 DbContext.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.GetHashCode01">
            <summary>设置 DbContext.GetHashCode() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.GroupGetSys">
            <summary>设置 DataContext.get_sys_Group() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.GroupMemberGetSys">
            <summary>设置 DataContext.get_sys_GroupMember() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.GroupMemberSetSysDbSetOfGroupMember">
            <summary>设置 DataContext.set_sys_GroupMember(DbSet`1&lt;GroupMember&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.GroupMessagerGetSys">
            <summary>设置 DataContext.get_sys_GroupMessager() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.GroupMessagerSetSysDbSetOfGroupMessager">
            <summary>设置 DataContext.set_sys_GroupMessager(DbSet`1&lt;GroupMessager&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.GroupSetSysDbSetOfGroup">
            <summary>设置 DataContext.set_sys_Group(DbSet`1&lt;Group&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.IPCodesGet">
            <summary>设置 DataContext.get_IPCodes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.IPCodesSetDbSetOfIPCode">
            <summary>设置 DataContext.set_IPCodes(DbSet`1&lt;IPCode&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.IndustryCodesGet">
            <summary>设置 DataContext.get_IndustryCodes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.IndustryCodesSetDbSetOfIndustryCode">
            <summary>设置 DataContext.set_IndustryCodes(DbSet`1&lt;IndustryCode&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.IndustrySolutionsGet">
            <summary>设置 DataContext.get_IndustrySolutions() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.IndustrySolutionsSetDbSetOfIndustrySolution">
            <summary>设置 DataContext.set_IndustrySolutions(DbSet`1&lt;IndustrySolution&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.InitializeStub">
            <summary>初始化 type StubDataContext 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.JobChangesGet">
            <summary>设置 DataContext.get_JobChanges() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.JobChangesSetDbSetOfJobChange">
            <summary>设置 DataContext.set_JobChanges(DbSet`1&lt;JobChange&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.LoginLogsGet">
            <summary>设置 DataContext.get_LoginLogs() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.LoginLogsSetDbSetOfLoginLog">
            <summary>设置 DataContext.set_LoginLogs(DbSet`1&lt;LoginLog&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ModulPropertiesGet">
            <summary>设置 DataContext.get_ModulProperties() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ModulPropertiesSetDbSetOfModulProperty">
            <summary>设置 DataContext.set_ModulProperties(DbSet`1&lt;ModulProperty&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>设置 DataContext.OnModelCreating(DbModelBuilder modelBuilder) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OnModelCreatingDbModelBuilder">
            <summary>设置 DataContext.OnModelCreating(DbModelBuilder modelBuilder) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OperationDetailsGet">
            <summary>设置 DataContext.get_OperationDetails() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OperationDetailsSetDbSetOfOperationDetail">
            <summary>设置 DataContext.set_OperationDetails(DbSet`1&lt;OperationDetail&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OperationEventsGet">
            <summary>设置 DataContext.get_OperationEvents() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OperationEventsSetDbSetOfOperationEvent">
            <summary>设置 DataContext.set_OperationEvents(DbSet`1&lt;OperationEvent&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrgaRegisterDocmentsGet">
            <summary>设置 DataContext.get_OrgaRegisterDocments() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrgaRegisterDocmentsSetDbSetOfOrgaRegisterDocment">
            <summary>设置 DataContext.set_OrgaRegisterDocments(DbSet`1&lt;OrgaRegisterDocment&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrganicInvestorsGet">
            <summary>设置 DataContext.get_OrganicInvestors() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrganicInvestorsSetDbSetOfOrganicInvestor">
            <summary>设置 DataContext.set_OrganicInvestors(DbSet`1&lt;OrganicInvestor&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizBasicsGet">
            <summary>设置 DataContext.get_OrganizBasics() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizBasicsSetDbSetOfOrganizBasic">
            <summary>设置 DataContext.set_OrganizBasics(DbSet`1&lt;OrganizBasic&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizationAssetTypesGet">
            <summary>设置 DataContext.get_OrganizationAssetTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizationAssetTypesSetDbSetOfOrganizationAssetType">
            <summary>设置 DataContext.set_OrganizationAssetTypes(DbSet`1&lt;OrganizationAssetType&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizationCustomTypesGet">
            <summary>设置 DataContext.get_OrganizationCustomTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizationCustomTypesSetDbSetOfOrganizationCustomType">
            <summary>设置 DataContext.set_OrganizationCustomTypes(DbSet`1&lt;OrganizationCustomType&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizationEventsGet">
            <summary>设置 DataContext.get_OrganizationEvents() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizationEventsSetDbSetOfOrganizationEvent">
            <summary>设置 DataContext.set_OrganizationEvents(DbSet`1&lt;OrganizationEvent&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizationOtherNamesGet">
            <summary>设置 DataContext.get_OrganizationOtherNames() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizationOtherNamesSetDbSetOfOrganizationOtherName">
            <summary>设置 DataContext.set_OrganizationOtherNames(DbSet`1&lt;OrganizationOtherName&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizationTransitionsGet">
            <summary>设置 DataContext.get_OrganizationTransitions() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizationTransitionsSetDbSetOfOrganizationTransition">
            <summary>设置 DataContext.set_OrganizationTransitions(DbSet`1&lt;OrganizationTransition&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizationsGet">
            <summary>设置 DataContext.get_Organizations() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizationsSetDbSetOfOrganization">
            <summary>设置 DataContext.set_Organizations(DbSet`1&lt;Organization&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.PhysicalAssetsGet">
            <summary>设置 DataContext.get_physicalAssets() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.PhysicalAssetsSetDbSetOfphysicalAsset">
            <summary>设置 DataContext.set_physicalAssets(DbSet`1&lt;physicalAsset&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.PositionsGet">
            <summary>设置 DataContext.get_Positions() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.PositionsSetDbSetOfPosition">
            <summary>设置 DataContext.set_Positions(DbSet`1&lt;Position&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.PostRequiresGet">
            <summary>设置 DataContext.get_PostRequires() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.PostRequiresSetDbSetOfPostRequire">
            <summary>设置 DataContext.set_PostRequires(DbSet`1&lt;PostRequire&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.PostsGet">
            <summary>设置 DataContext.get_Posts() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.PostsSetDbSetOfPost">
            <summary>设置 DataContext.set_Posts(DbSet`1&lt;Post&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ProductCompositionsGet">
            <summary>设置 DataContext.get_ProductCompositions() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ProductCompositionsSetDbSetOfProductComposition">
            <summary>设置 DataContext.set_ProductCompositions(DbSet`1&lt;ProductComposition&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ProductCustomCategoriesGet">
            <summary>设置 DataContext.get_ProductCustomCategories() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ProductCustomCategoriesSetDbSetOfProductCustomCategory">
            <summary>设置 DataContext.set_ProductCustomCategories(DbSet`1&lt;ProductCustomCategory&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ProductCustomTypesGet">
            <summary>设置 DataContext.get_ProductCustomTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ProductCustomTypesSetDbSetOfProductCustomType">
            <summary>设置 DataContext.set_ProductCustomTypes(DbSet`1&lt;ProductCustomType&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ProductEventsGet">
            <summary>设置 DataContext.get_ProductEvents() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ProductEventsSetDbSetOfProductEvent">
            <summary>设置 DataContext.set_ProductEvents(DbSet`1&lt;ProductEvent&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ProductStandardsGet">
            <summary>设置 DataContext.get_ProductStandards() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ProductStandardsSetDbSetOfProductStandard">
            <summary>设置 DataContext.set_ProductStandards(DbSet`1&lt;ProductStandard&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ProductsGet">
            <summary>设置 DataContext.get_Products() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ProductsSetDbSetOfProduct">
            <summary>设置 DataContext.set_Products(DbSet`1&lt;Product&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.RegisterDocumentTypesGet">
            <summary>设置 DataContext.get_RegisterDocumentTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.RegisterDocumentTypesSetDbSetOfRegisterDocumentType">
            <summary>设置 DataContext.set_RegisterDocumentTypes(DbSet`1&lt;RegisterDocumentType&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.SaveChanges">
            <summary>设置 DbContext.SaveChanges() 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.SaveChanges01">
            <summary>设置 DbContext.SaveChanges() 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.SaveChangesAsync">
            <summary>设置 DbContext.SaveChangesAsync() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>设置 DbContext.SaveChangesAsync(CancellationToken cancellationToken) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.SaveChangesAsync01">
            <summary>设置 DbContext.SaveChangesAsync() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.SaveChangesAsyncCancellationToken">
            <summary>设置 DbContext.SaveChangesAsync(CancellationToken cancellationToken) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.SecurityinfoesGet">
            <summary>设置 DataContext.get_Securityinfoes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.SecurityinfoesSetDbSetOfSecurityinfo">
            <summary>设置 DataContext.set_Securityinfoes(DbSet`1&lt;Securityinfo&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.Set(System.Type)">
            <summary>设置 DbContext.Set(Type entityType) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.Set``1">
            <summary>设置 DbContext.Set() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.SetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbSet{``0}})">
            <summary>设置 Set() 的存根</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.SetType">
            <summary>设置 DbContext.Set(Type entityType) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>设置 DbContext.ShouldValidateEntity(DbEntityEntry entityEntry) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ShouldValidateEntityDbEntityEntry">
            <summary>设置 DbContext.ShouldValidateEntity(DbEntityEntry entityEntry) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.SpecializedsGet">
            <summary>设置 DataContext.get_Specializeds() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.SpecializedsSetDbSetOfSpecialized">
            <summary>设置 DataContext.set_Specializeds(DbSet`1&lt;Specialized&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.SubordinatesGet">
            <summary>设置 DataContext.get_Subordinates() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.SubordinatesSetDbSetOfSubordinate">
            <summary>设置 DataContext.set_Subordinates(DbSet`1&lt;Subordinate&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.ToString">
            <summary>设置 DbContext.ToString() 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ToString01">
            <summary>设置 DbContext.ToString() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.TypeGetOrganization">
            <summary>设置 DataContext.get_Organization_Type() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.TypeSetOrganizationDbSetOfOrganization_Type">
            <summary>设置 DataContext.set_Organization_Type(DbSet`1&lt;Organization_Type&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.UserGetSys">
            <summary>设置 DataContext.get_sys_User() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.UserMessageGetSys">
            <summary>设置 DataContext.get_sys_UserMessage() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.UserMessageSetSysDbSetOfUserMessage">
            <summary>设置 DataContext.set_sys_UserMessage(DbSet`1&lt;UserMessage&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.UserRelateTablesGet">
            <summary>设置 DataContext.get_UserRelateTables() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.UserRelateTablesSetDbSetOfUserRelateTable">
            <summary>设置 DataContext.set_UserRelateTables(DbSet`1&lt;UserRelateTable&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.UserRelateTypesGet">
            <summary>设置 DataContext.get_UserRelateTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.UserRelateTypesSetDbSetOfUserRelateType">
            <summary>设置 DataContext.set_UserRelateTypes(DbSet`1&lt;UserRelateType&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.UserSetSysDbSetOfUser">
            <summary>设置 DataContext.set_sys_User(DbSet`1&lt;User&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDataContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>设置 DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ValidateEntityDbEntityEntryIDictionaryOfObjectObject">
            <summary>设置 DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.WorkMessagesGet">
            <summary>设置 DataContext.get_WorkMessages() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.WorkMessagesSetDbSetOfWorkMessage">
            <summary>设置 DataContext.set_WorkMessages(DbSet`1&lt;WorkMessage&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.WorkModulsGet">
            <summary>设置 DataContext.get_WorkModuls() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.WorkModulsSetDbSetOfWorkModul">
            <summary>设置 DataContext.set_WorkModuls(DbSet`1&lt;WorkModul&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.WorkSpaceBaseTypesGet">
            <summary>设置 DataContext.get_WorkSpaceBaseTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.WorkSpaceBaseTypesSetDbSetOfWorkSpaceBaseType">
            <summary>设置 DataContext.set_WorkSpaceBaseTypes(DbSet`1&lt;WorkSpaceBaseType&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.WorkSpaceRolesGet">
            <summary>设置 DataContext.get_WorkSpaceRoles() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.WorkSpaceRolesSetDbSetOfWorkSpaceRole">
            <summary>设置 DataContext.set_WorkSpaceRoles(DbSet`1&lt;WorkSpaceRole&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.WorkSpaceTypesGet">
            <summary>设置 DataContext.get_WorkSpaceTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.WorkSpaceTypesSetDbSetOfWorkSpaceType">
            <summary>设置 DataContext.set_WorkSpaceTypes(DbSet`1&lt;WorkSpaceType&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.WorkSpacesGet">
            <summary>设置 DataContext.get_WorkSpaces() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.WorkSpacesSetDbSetOfWorkSpace">
            <summary>设置 DataContext.set_WorkSpaces(DbSet`1&lt;WorkSpace&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.WorkTasksGet">
            <summary>设置 DataContext.get_workTasks() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.WorkTasksSetDbSetOfworkTask">
            <summary>设置 DataContext.set_workTasks(DbSet`1&lt;workTask&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ZipCodesGet">
            <summary>设置 DataContext.get_ZipCodes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDataContext.ZipCodesSetDbSetOfZipCode">
            <summary>设置 DataContext.set_ZipCodes(DbSet`1&lt;ZipCode&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.Administrativecodes">
            <summary>设置 DataContext.get_Administrativecodes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.AssetBaseTypes">
            <summary>设置 DataContext.get_AssetBaseTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.AssetMaintenances">
            <summary>设置 DataContext.get_AssetMaintenances() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.AssetUses">
            <summary>设置 DataContext.get_AssetUses() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.Authorizations">
            <summary>设置 DataContext.get_Authorizations() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.BussnessVers">
            <summary>设置 DataContext.get_BussnessVers() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.CustomCategories">
            <summary>设置 DataContext.get_CustomCategories() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.CustomTabDatas">
            <summary>设置 DataContext.get_CustomTabDatas() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.CustomTables">
            <summary>设置 DataContext.get_CustomTables() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.DllFileStreams">
            <summary>设置 DataContext.get_DllFileStreams() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.DocCheckStates">
            <summary>设置 DataContext.get_DocCheckStates() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.DocComents">
            <summary>设置 DataContext.get_DocComents() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.DocLocations">
            <summary>设置 DataContext.get_DocLocations() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.DocManageStates">
            <summary>设置 DataContext.get_DocManageStates() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.DocReaders">
            <summary>设置 DataContext.get_DocReaders() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.DocSenders">
            <summary>设置 DataContext.get_DocSenders() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.DocTypes">
            <summary>设置 DataContext.get_DocTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.DocumentContents">
            <summary>设置 DataContext.get_DocumentContents() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.DocumentManages">
            <summary>设置 DataContext.get_DocumentManages() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.DocumentTypes">
            <summary>设置 DataContext.get_DocumentTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.Employees1">
            <summary>设置 DataContext.get_Employees1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.IPCodes">
            <summary>设置 DataContext.get_IPCodes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.IndustryCodes">
            <summary>设置 DataContext.get_IndustryCodes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.IndustrySolutions">
            <summary>设置 DataContext.get_IndustrySolutions() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.JobChanges">
            <summary>设置 DataContext.get_JobChanges() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.LoginLogs">
            <summary>设置 DataContext.get_LoginLogs() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.ModulProperties">
            <summary>设置 DataContext.get_ModulProperties() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.OperationDetails">
            <summary>设置 DataContext.get_OperationDetails() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.OperationEvents">
            <summary>设置 DataContext.get_OperationEvents() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.OrgaRegisterDocments">
            <summary>设置 DataContext.get_OrgaRegisterDocments() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.OrganicInvestors">
            <summary>设置 DataContext.get_OrganicInvestors() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizBasics">
            <summary>设置 DataContext.get_OrganizBasics() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizationAssetTypes">
            <summary>设置 DataContext.get_OrganizationAssetTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizationCustomTypes">
            <summary>设置 DataContext.get_OrganizationCustomTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizationEvents">
            <summary>设置 DataContext.get_OrganizationEvents() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizationOtherNames">
            <summary>设置 DataContext.get_OrganizationOtherNames() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.OrganizationTransitions">
            <summary>设置 DataContext.get_OrganizationTransitions() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.Organization_ContactTables">
            <summary>设置 DataContext.get_Organization_ContactTables() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.Organization_Type">
            <summary>设置 DataContext.get_Organization_Type() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.Organizations">
            <summary>设置 DataContext.get_Organizations() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.Positions">
            <summary>设置 DataContext.get_Positions() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.PostRequires">
            <summary>设置 DataContext.get_PostRequires() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.Posts">
            <summary>设置 DataContext.get_Posts() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.ProductCompositions">
            <summary>设置 DataContext.get_ProductCompositions() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.ProductCustomCategories">
            <summary>设置 DataContext.get_ProductCustomCategories() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.ProductCustomTypes">
            <summary>设置 DataContext.get_ProductCustomTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.ProductEvents">
            <summary>设置 DataContext.get_ProductEvents() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.ProductStandards">
            <summary>设置 DataContext.get_ProductStandards() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.Products">
            <summary>设置 DataContext.get_Products() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.RegisterDocumentTypes">
            <summary>设置 DataContext.get_RegisterDocumentTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.Securityinfoes">
            <summary>设置 DataContext.get_Securityinfoes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.Specializeds">
            <summary>设置 DataContext.get_Specializeds() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.Subordinates">
            <summary>设置 DataContext.get_Subordinates() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.UserRelateTables">
            <summary>设置 DataContext.get_UserRelateTables() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.UserRelateTypes">
            <summary>设置 DataContext.get_UserRelateTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.User_ContactTable">
            <summary>设置 DataContext.get_User_ContactTable() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.WorkMessages">
            <summary>设置 DataContext.get_WorkMessages() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.WorkModuls">
            <summary>设置 DataContext.get_WorkModuls() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.WorkSpaceBaseTypes">
            <summary>设置 DataContext.get_WorkSpaceBaseTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.WorkSpaceRoles">
            <summary>设置 DataContext.get_WorkSpaceRoles() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.WorkSpaceTypes">
            <summary>设置 DataContext.get_WorkSpaceTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.WorkSpaces">
            <summary>设置 DataContext.get_WorkSpaces() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.ZipCodes">
            <summary>设置 DataContext.get_ZipCodes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.physicalAssets">
            <summary>设置 DataContext.get_physicalAssets() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.sys_CustomGroupUser">
            <summary>设置 DataContext.get_sys_CustomGroupUser() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.sys_CustomerGoup">
            <summary>设置 DataContext.get_sys_CustomerGoup() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.sys_Group">
            <summary>设置 DataContext.get_sys_Group() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.sys_GroupMember">
            <summary>设置 DataContext.get_sys_GroupMember() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.sys_GroupMessager">
            <summary>设置 DataContext.get_sys_GroupMessager() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.sys_User">
            <summary>设置 DataContext.get_sys_User() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.sys_UserMessage">
            <summary>设置 DataContext.get_sys_UserMessage() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDataContext.workTasks">
            <summary>设置 DataContext.get_workTasks() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubDllFileStream">
            <summary>BCP.Domain.Edmx.DllFileStream 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDllFileStream.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDllFileStream.AttachBackingFieldToDllFileStream1">
            <summary>附加委托以将 StubDllFileStream.DllFileStream1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDllFileStream.AttachBackingFieldToDllFileStreams">
            <summary>附加委托以将 StubDllFileStream.DllFileStreams 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDllFileStream.AttachBackingFieldToIndustrySolution">
            <summary>附加委托以将 StubDllFileStream.IndustrySolution 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDllFileStream.AttachBackingFieldToWorkModuls">
            <summary>附加委托以将 StubDllFileStream.WorkModuls 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDllFileStream.DllFileStream1Get">
            <summary>设置 DllFileStream.get_DllFileStream1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDllFileStream.DllFileStream1SetDllFileStream">
            <summary>设置 DllFileStream.set_DllFileStream1(DllFileStream value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDllFileStream.DllFileStreamsGet">
            <summary>设置 DllFileStream.get_DllFileStreams() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDllFileStream.DllFileStreamsSetICollectionOfDllFileStream">
            <summary>设置 DllFileStream.set_DllFileStreams(ICollection`1&lt;DllFileStream&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDllFileStream.IndustrySolutionGet">
            <summary>设置 DllFileStream.get_IndustrySolution() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDllFileStream.IndustrySolutionSetIndustrySolution">
            <summary>设置 DllFileStream.set_IndustrySolution(IndustrySolution value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDllFileStream.InitializeStub">
            <summary>初始化 type StubDllFileStream 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDllFileStream.WorkModulsGet">
            <summary>设置 DllFileStream.get_WorkModuls() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDllFileStream.WorkModulsSetICollectionOfWorkModul">
            <summary>设置 DllFileStream.set_WorkModuls(ICollection`1&lt;WorkModul&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDllFileStream.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDllFileStream.DllFileStream1">
            <summary>设置 DllFileStream.get_DllFileStream1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDllFileStream.DllFileStreams">
            <summary>设置 DllFileStream.get_DllFileStreams() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDllFileStream.IndustrySolution">
            <summary>设置 DllFileStream.get_IndustrySolution() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDllFileStream.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDllFileStream.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDllFileStream.WorkModuls">
            <summary>设置 DllFileStream.get_WorkModuls() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubDocCheckState">
            <summary>BCP.Domain.Edmx.DocCheckState 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocCheckState.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocCheckState.AttachBackingFieldToDocumentManages">
            <summary>附加委托以将 StubDocCheckState.DocumentManages 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocCheckState.DocumentManagesGet">
            <summary>设置 DocCheckState.get_DocumentManages() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocCheckState.DocumentManagesSetICollectionOfDocumentManage">
            <summary>设置 DocCheckState.set_DocumentManages(ICollection`1&lt;DocumentManage&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocCheckState.InitializeStub">
            <summary>初始化 type StubDocCheckState 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocCheckState.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocCheckState.DocumentManages">
            <summary>设置 DocCheckState.get_DocumentManages() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocCheckState.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocCheckState.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubDocComent">
            <summary>BCP.Domain.Edmx.DocComent 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocComent.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocComent.AttachBackingFieldToDocLocation">
            <summary>附加委托以将 StubDocComent.DocLocation 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocComent.AttachBackingFieldToDocSender">
            <summary>附加委托以将 StubDocComent.DocSender 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocComent.DocLocationGet">
            <summary>设置 DocComent.get_DocLocation() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocComent.DocLocationSetDocLocation">
            <summary>设置 DocComent.set_DocLocation(DocLocation value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocComent.DocSenderGet">
            <summary>设置 DocComent.get_DocSender() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocComent.DocSenderSetDocSender">
            <summary>设置 DocComent.set_DocSender(DocSender value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocComent.InitializeStub">
            <summary>初始化 type StubDocComent 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocComent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocComent.DocLocation">
            <summary>设置 DocComent.get_DocLocation() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocComent.DocSender">
            <summary>设置 DocComent.get_DocSender() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocComent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocComent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubDocLocation">
            <summary>BCP.Domain.Edmx.DocLocation 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocLocation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocLocation.AttachBackingFieldToDocComents">
            <summary>附加委托以将 StubDocLocation.DocComents 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocLocation.AttachBackingFieldToDocLocation1">
            <summary>附加委托以将 StubDocLocation.DocLocation1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocLocation.AttachBackingFieldToDocLocations1">
            <summary>附加委托以将 StubDocLocation.DocLocations1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocLocation.AttachBackingFieldToDocReader">
            <summary>附加委托以将 StubDocLocation.DocReader 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocLocation.AttachBackingFieldToDocSender">
            <summary>附加委托以将 StubDocLocation.DocSender 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocLocation.AttachBackingFieldToDocumentManage">
            <summary>附加委托以将 StubDocLocation.DocumentManage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocLocation.DocComentsGet">
            <summary>设置 DocLocation.get_DocComents() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocLocation.DocComentsSetICollectionOfDocComent">
            <summary>设置 DocLocation.set_DocComents(ICollection`1&lt;DocComent&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocLocation.DocLocation1Get">
            <summary>设置 DocLocation.get_DocLocation1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocLocation.DocLocation1SetDocLocation">
            <summary>设置 DocLocation.set_DocLocation1(DocLocation value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocLocation.DocLocations1Get">
            <summary>设置 DocLocation.get_DocLocations1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocLocation.DocLocations1SetICollectionOfDocLocation">
            <summary>设置 DocLocation.set_DocLocations1(ICollection`1&lt;DocLocation&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocLocation.DocReaderGet">
            <summary>设置 DocLocation.get_DocReader() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocLocation.DocReaderSetDocReader">
            <summary>设置 DocLocation.set_DocReader(DocReader value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocLocation.DocSenderGet">
            <summary>设置 DocLocation.get_DocSender() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocLocation.DocSenderSetDocSender">
            <summary>设置 DocLocation.set_DocSender(DocSender value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocLocation.DocumentManageGet">
            <summary>设置 DocLocation.get_DocumentManage() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocLocation.DocumentManageSetDocumentManage">
            <summary>设置 DocLocation.set_DocumentManage(DocumentManage value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocLocation.InitializeStub">
            <summary>初始化 type StubDocLocation 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocLocation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocLocation.DocComents">
            <summary>设置 DocLocation.get_DocComents() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocLocation.DocLocation1">
            <summary>设置 DocLocation.get_DocLocation1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocLocation.DocLocations1">
            <summary>设置 DocLocation.get_DocLocations1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocLocation.DocReader">
            <summary>设置 DocLocation.get_DocReader() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocLocation.DocSender">
            <summary>设置 DocLocation.get_DocSender() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocLocation.DocumentManage">
            <summary>设置 DocLocation.get_DocumentManage() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocLocation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocLocation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubDocManageState">
            <summary>BCP.Domain.Edmx.DocManageState 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocManageState.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocManageState.AttachBackingFieldToDocManageState1">
            <summary>附加委托以将 StubDocManageState.DocManageState1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocManageState.AttachBackingFieldToDocManageStates">
            <summary>附加委托以将 StubDocManageState.DocManageStates 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocManageState.AttachBackingFieldToDocumentManages">
            <summary>附加委托以将 StubDocManageState.DocumentManages 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocManageState.DocManageState1Get">
            <summary>设置 DocManageState.get_DocManageState1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocManageState.DocManageState1SetDocManageState">
            <summary>设置 DocManageState.set_DocManageState1(DocManageState value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocManageState.DocManageStatesGet">
            <summary>设置 DocManageState.get_DocManageStates() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocManageState.DocManageStatesSetICollectionOfDocManageState">
            <summary>设置 DocManageState.set_DocManageStates(ICollection`1&lt;DocManageState&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocManageState.DocumentManagesGet">
            <summary>设置 DocManageState.get_DocumentManages() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocManageState.DocumentManagesSetICollectionOfDocumentManage">
            <summary>设置 DocManageState.set_DocumentManages(ICollection`1&lt;DocumentManage&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocManageState.InitializeStub">
            <summary>初始化 type StubDocManageState 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocManageState.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocManageState.DocManageState1">
            <summary>设置 DocManageState.get_DocManageState1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocManageState.DocManageStates">
            <summary>设置 DocManageState.get_DocManageStates() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocManageState.DocumentManages">
            <summary>设置 DocManageState.get_DocumentManages() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocManageState.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocManageState.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubDocReader">
            <summary>BCP.Domain.Edmx.DocReader 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocReader.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocReader.AttachBackingFieldToDocLocations">
            <summary>附加委托以将 StubDocReader.DocLocations 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocReader.AttachBackingFieldToOrganization">
            <summary>附加委托以将 StubDocReader.Organization 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocReader.AttachBackingFieldToPost">
            <summary>附加委托以将 StubDocReader.Post 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocReader.AttachBackingFieldToUser">
            <summary>附加委托以将 StubDocReader.User 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocReader.AttachBackingFieldToWorkSpace">
            <summary>附加委托以将 StubDocReader.WorkSpace 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocReader.DocLocationsGet">
            <summary>设置 DocReader.get_DocLocations() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocReader.DocLocationsSetICollectionOfDocLocation">
            <summary>设置 DocReader.set_DocLocations(ICollection`1&lt;DocLocation&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocReader.InitializeStub">
            <summary>初始化 type StubDocReader 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocReader.OrganizationGet">
            <summary>设置 DocReader.get_Organization() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocReader.OrganizationSetOrganization">
            <summary>设置 DocReader.set_Organization(Organization value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocReader.PostGet">
            <summary>设置 DocReader.get_Post() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocReader.PostSetPost">
            <summary>设置 DocReader.set_Post(Post value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocReader.UserGet">
            <summary>设置 DocReader.get_User() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocReader.UserSetUser">
            <summary>设置 DocReader.set_User(User value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocReader.WorkSpaceGet">
            <summary>设置 DocReader.get_WorkSpace() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocReader.WorkSpaceSetWorkSpace">
            <summary>设置 DocReader.set_WorkSpace(WorkSpace value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocReader.DocLocations">
            <summary>设置 DocReader.get_DocLocations() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocReader.Organization">
            <summary>设置 DocReader.get_Organization() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocReader.Post">
            <summary>设置 DocReader.get_Post() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocReader.User">
            <summary>设置 DocReader.get_User() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocReader.WorkSpace">
            <summary>设置 DocReader.get_WorkSpace() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubDocSender">
            <summary>BCP.Domain.Edmx.DocSender 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocSender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocSender.AttachBackingFieldToDocComents">
            <summary>附加委托以将 StubDocSender.DocComents 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocSender.AttachBackingFieldToDocLocations">
            <summary>附加委托以将 StubDocSender.DocLocations 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocSender.AttachBackingFieldToPost">
            <summary>附加委托以将 StubDocSender.Post 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocSender.AttachBackingFieldToUser">
            <summary>附加委托以将 StubDocSender.User 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocSender.DocComentsGet">
            <summary>设置 DocSender.get_DocComents() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocSender.DocComentsSetICollectionOfDocComent">
            <summary>设置 DocSender.set_DocComents(ICollection`1&lt;DocComent&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocSender.DocLocationsGet">
            <summary>设置 DocSender.get_DocLocations() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocSender.DocLocationsSetICollectionOfDocLocation">
            <summary>设置 DocSender.set_DocLocations(ICollection`1&lt;DocLocation&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocSender.InitializeStub">
            <summary>初始化 type StubDocSender 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocSender.PostGet">
            <summary>设置 DocSender.get_Post() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocSender.PostSetPost">
            <summary>设置 DocSender.set_Post(Post value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocSender.UserGet">
            <summary>设置 DocSender.get_User() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocSender.UserSetUser">
            <summary>设置 DocSender.set_User(User value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocSender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocSender.DocComents">
            <summary>设置 DocSender.get_DocComents() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocSender.DocLocations">
            <summary>设置 DocSender.get_DocLocations() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocSender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocSender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocSender.Post">
            <summary>设置 DocSender.get_Post() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocSender.User">
            <summary>设置 DocSender.get_User() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubDocType">
            <summary>BCP.Domain.Edmx.DocType 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocType.AttachBackingFieldToDocumentManage">
            <summary>附加委托以将 StubDocType.DocumentManage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocType.AttachBackingFieldToDocumentType">
            <summary>附加委托以将 StubDocType.DocumentType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocType.DocumentManageGet">
            <summary>设置 DocType.get_DocumentManage() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocType.DocumentManageSetDocumentManage">
            <summary>设置 DocType.set_DocumentManage(DocumentManage value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocType.DocumentTypeGet">
            <summary>设置 DocType.get_DocumentType() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocType.DocumentTypeSetDocumentType">
            <summary>设置 DocType.set_DocumentType(DocumentType value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocType.InitializeStub">
            <summary>初始化 type StubDocType 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocType.DocumentManage">
            <summary>设置 DocType.get_DocumentManage() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocType.DocumentType">
            <summary>设置 DocType.get_DocumentType() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubDocumentContent">
            <summary>BCP.Domain.Edmx.DocumentContent 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentContent.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentContent.AttachBackingFieldToDocumentContent1">
            <summary>附加委托以将 StubDocumentContent.DocumentContent1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentContent.AttachBackingFieldToDocumentContents">
            <summary>附加委托以将 StubDocumentContent.DocumentContents 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentContent.AttachBackingFieldToDocumentManage">
            <summary>附加委托以将 StubDocumentContent.DocumentManage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentContent.AttachBackingFieldToworkTask">
            <summary>附加委托以将 StubDocumentContent.workTask 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentContent.DocumentContent1Get">
            <summary>设置 DocumentContent.get_DocumentContent1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentContent.DocumentContent1SetDocumentContent">
            <summary>设置 DocumentContent.set_DocumentContent1(DocumentContent value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentContent.DocumentContentsGet">
            <summary>设置 DocumentContent.get_DocumentContents() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentContent.DocumentContentsSetICollectionOfDocumentContent">
            <summary>设置 DocumentContent.set_DocumentContents(ICollection`1&lt;DocumentContent&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentContent.DocumentManageGet">
            <summary>设置 DocumentContent.get_DocumentManage() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentContent.DocumentManageSetDocumentManage">
            <summary>设置 DocumentContent.set_DocumentManage(DocumentManage value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentContent.InitializeStub">
            <summary>初始化 type StubDocumentContent 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentContent.WorkTaskGet">
            <summary>设置 DocumentContent.get_workTask() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentContent.WorkTaskSetworkTask">
            <summary>设置 DocumentContent.set_workTask(workTask value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentContent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentContent.DocumentContent1">
            <summary>设置 DocumentContent.get_DocumentContent1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentContent.DocumentContents">
            <summary>设置 DocumentContent.get_DocumentContents() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentContent.DocumentManage">
            <summary>设置 DocumentContent.get_DocumentManage() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentContent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentContent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentContent.workTask">
            <summary>设置 DocumentContent.get_workTask() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubDocumentManage">
            <summary>BCP.Domain.Edmx.DocumentManage 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentManage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentManage.AttachBackingFieldToCustomTabDatas">
            <summary>附加委托以将 StubDocumentManage.CustomTabDatas 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentManage.AttachBackingFieldToDocHanderState">
            <summary>附加委托以将 StubDocumentManage.DocHanderState 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentManage.AttachBackingFieldToDocLocations">
            <summary>附加委托以将 StubDocumentManage.DocLocations 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentManage.AttachBackingFieldToDocManageState">
            <summary>附加委托以将 StubDocumentManage.DocManageState 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentManage.AttachBackingFieldToDocTypes">
            <summary>附加委托以将 StubDocumentManage.DocTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentManage.AttachBackingFieldToDocumentContents">
            <summary>附加委托以将 StubDocumentManage.DocumentContents 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentManage.AttachBackingFieldToSecurityinfo">
            <summary>附加委托以将 StubDocumentManage.Securityinfo 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentManage.AttachBackingFieldToWorkSpaceBaseType">
            <summary>附加委托以将 StubDocumentManage.WorkSpaceBaseType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentManage.AttachBackingFieldToworkTasks">
            <summary>附加委托以将 StubDocumentManage.workTasks 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.CustomTabDatasGet">
            <summary>设置 DocumentManage.get_CustomTabDatas() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.CustomTabDatasSetICollectionOfCustomTabData">
            <summary>设置 DocumentManage.set_CustomTabDatas(ICollection`1&lt;CustomTabData&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.DocHanderStateGet">
            <summary>设置 DocumentManage.get_DocHanderState() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.DocHanderStateSetDocCheckState">
            <summary>设置 DocumentManage.set_DocHanderState(DocCheckState value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.DocLocationsGet">
            <summary>设置 DocumentManage.get_DocLocations() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.DocLocationsSetICollectionOfDocLocation">
            <summary>设置 DocumentManage.set_DocLocations(ICollection`1&lt;DocLocation&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.DocManageStateGet">
            <summary>设置 DocumentManage.get_DocManageState() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.DocManageStateSetDocManageState">
            <summary>设置 DocumentManage.set_DocManageState(DocManageState value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.DocTypesGet">
            <summary>设置 DocumentManage.get_DocTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.DocTypesSetICollectionOfDocType">
            <summary>设置 DocumentManage.set_DocTypes(ICollection`1&lt;DocType&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.DocumentContentsGet">
            <summary>设置 DocumentManage.get_DocumentContents() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.DocumentContentsSetICollectionOfDocumentContent">
            <summary>设置 DocumentManage.set_DocumentContents(ICollection`1&lt;DocumentContent&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentManage.InitializeStub">
            <summary>初始化 type StubDocumentManage 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.SecurityinfoGet">
            <summary>设置 DocumentManage.get_Securityinfo() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.SecurityinfoSetSecurityinfo">
            <summary>设置 DocumentManage.set_Securityinfo(Securityinfo value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.WorkSpaceBaseTypeGet">
            <summary>设置 DocumentManage.get_WorkSpaceBaseType() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.WorkSpaceBaseTypeSetWorkSpaceBaseType">
            <summary>设置 DocumentManage.set_WorkSpaceBaseType(WorkSpaceBaseType value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.WorkTasksGet">
            <summary>设置 DocumentManage.get_workTasks() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentManage.WorkTasksSetICollectionOfworkTask">
            <summary>设置 DocumentManage.set_workTasks(ICollection`1&lt;workTask&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentManage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentManage.CustomTabDatas">
            <summary>设置 DocumentManage.get_CustomTabDatas() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentManage.DocHanderState">
            <summary>设置 DocumentManage.get_DocHanderState() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentManage.DocLocations">
            <summary>设置 DocumentManage.get_DocLocations() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentManage.DocManageState">
            <summary>设置 DocumentManage.get_DocManageState() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentManage.DocTypes">
            <summary>设置 DocumentManage.get_DocTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentManage.DocumentContents">
            <summary>设置 DocumentManage.get_DocumentContents() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentManage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentManage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentManage.Securityinfo">
            <summary>设置 DocumentManage.get_Securityinfo() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentManage.WorkSpaceBaseType">
            <summary>设置 DocumentManage.get_WorkSpaceBaseType() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentManage.workTasks">
            <summary>设置 DocumentManage.get_workTasks() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubDocumentType">
            <summary>BCP.Domain.Edmx.DocumentType 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentType.AttachBackingFieldToDocTypes">
            <summary>附加委托以将 StubDocumentType.DocTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentType.AttachBackingFieldToDocumentType1">
            <summary>附加委托以将 StubDocumentType.DocumentType1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentType.AttachBackingFieldToDocumentTypes">
            <summary>附加委托以将 StubDocumentType.DocumentTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentType.DocTypesGet">
            <summary>设置 DocumentType.get_DocTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentType.DocTypesSetICollectionOfDocType">
            <summary>设置 DocumentType.set_DocTypes(ICollection`1&lt;DocType&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentType.DocumentType1Get">
            <summary>设置 DocumentType.get_DocumentType1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentType.DocumentType1SetDocumentType">
            <summary>设置 DocumentType.set_DocumentType1(DocumentType value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentType.DocumentTypesGet">
            <summary>设置 DocumentType.get_DocumentTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubDocumentType.DocumentTypesSetICollectionOfDocumentType">
            <summary>设置 DocumentType.set_DocumentTypes(ICollection`1&lt;DocumentType&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubDocumentType.InitializeStub">
            <summary>初始化 type StubDocumentType 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentType.DocTypes">
            <summary>设置 DocumentType.get_DocTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentType.DocumentType1">
            <summary>设置 DocumentType.get_DocumentType1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentType.DocumentTypes">
            <summary>设置 DocumentType.get_DocumentTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubDocumentType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubEmployee">
            <summary>BCP.Domain.Edmx.Employee 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubEmployee.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubEmployee.AttachBackingFieldToOrganization">
            <summary>附加委托以将 StubEmployee.Organization 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubEmployee.AttachBackingFieldToPosition">
            <summary>附加委托以将 StubEmployee.Position 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubEmployee.AttachBackingFieldToPosts">
            <summary>附加委托以将 StubEmployee.Posts 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubEmployee.AttachBackingFieldToUser">
            <summary>附加委托以将 StubEmployee.User 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubEmployee.InitializeStub">
            <summary>初始化 type StubEmployee 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubEmployee.OrganizationGet">
            <summary>设置 Employee.get_Organization() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubEmployee.OrganizationSetOrganization">
            <summary>设置 Employee.set_Organization(Organization value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubEmployee.PositionGet">
            <summary>设置 Employee.get_Position() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubEmployee.PositionSetPosition">
            <summary>设置 Employee.set_Position(Position value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubEmployee.PostsGet">
            <summary>设置 Employee.get_Posts() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubEmployee.PostsSetICollectionOfPost">
            <summary>设置 Employee.set_Posts(ICollection`1&lt;Post&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubEmployee.UserGet">
            <summary>设置 Employee.get_User() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubEmployee.UserSetUser">
            <summary>设置 Employee.set_User(User value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubEmployee.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubEmployee.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubEmployee.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubEmployee.Organization">
            <summary>设置 Employee.get_Organization() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubEmployee.Position">
            <summary>设置 Employee.get_Position() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubEmployee.Posts">
            <summary>设置 Employee.get_Posts() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubEmployee.User">
            <summary>设置 Employee.get_User() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubGroup">
            <summary>BCP.Domain.Edmx.Group 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubGroup.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubGroup.AttachBackingFieldToGroupMembers">
            <summary>附加委托以将 StubGroup.GroupMembers 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubGroup.AttachBackingFieldToGroupMessagers">
            <summary>附加委托以将 StubGroup.GroupMessagers 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubGroup.AttachBackingFieldToUser">
            <summary>附加委托以将 StubGroup.User 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubGroup.GroupMembersGet">
            <summary>设置 Group.get_GroupMembers() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubGroup.GroupMembersSetICollectionOfGroupMember">
            <summary>设置 Group.set_GroupMembers(ICollection`1&lt;GroupMember&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubGroup.GroupMessagersGet">
            <summary>设置 Group.get_GroupMessagers() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubGroup.GroupMessagersSetICollectionOfGroupMessager">
            <summary>设置 Group.set_GroupMessagers(ICollection`1&lt;GroupMessager&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubGroup.InitializeStub">
            <summary>初始化 type StubGroup 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubGroup.UserGet">
            <summary>设置 Group.get_User() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubGroup.UserSetUser">
            <summary>设置 Group.set_User(User value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubGroup.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubGroup.GroupMembers">
            <summary>设置 Group.get_GroupMembers() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubGroup.GroupMessagers">
            <summary>设置 Group.get_GroupMessagers() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubGroup.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubGroup.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubGroup.User">
            <summary>设置 Group.get_User() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubGroupMember">
            <summary>BCP.Domain.Edmx.GroupMember 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubGroupMember.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubGroupMember.AttachBackingFieldToGroup">
            <summary>附加委托以将 StubGroupMember.Group 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubGroupMember.AttachBackingFieldToGroupMessagers">
            <summary>附加委托以将 StubGroupMember.GroupMessagers 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubGroupMember.AttachBackingFieldToUser">
            <summary>附加委托以将 StubGroupMember.User 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubGroupMember.GroupGet">
            <summary>设置 GroupMember.get_Group() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubGroupMember.GroupMessagersGet">
            <summary>设置 GroupMember.get_GroupMessagers() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubGroupMember.GroupMessagersSetICollectionOfGroupMessager">
            <summary>设置 GroupMember.set_GroupMessagers(ICollection`1&lt;GroupMessager&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubGroupMember.GroupSetGroup">
            <summary>设置 GroupMember.set_Group(Group value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubGroupMember.InitializeStub">
            <summary>初始化 type StubGroupMember 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubGroupMember.UserGet">
            <summary>设置 GroupMember.get_User() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubGroupMember.UserSetUser">
            <summary>设置 GroupMember.set_User(User value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubGroupMember.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubGroupMember.Group">
            <summary>设置 GroupMember.get_Group() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubGroupMember.GroupMessagers">
            <summary>设置 GroupMember.get_GroupMessagers() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubGroupMember.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubGroupMember.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubGroupMember.User">
            <summary>设置 GroupMember.get_User() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubGroupMessager">
            <summary>BCP.Domain.Edmx.GroupMessager 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubGroupMessager.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubGroupMessager.AttachBackingFieldToGroup">
            <summary>附加委托以将 StubGroupMessager.Group 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubGroupMessager.AttachBackingFieldToGroupMember">
            <summary>附加委托以将 StubGroupMessager.GroupMember 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubGroupMessager.GroupGet">
            <summary>设置 GroupMessager.get_Group() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubGroupMessager.GroupMemberGet">
            <summary>设置 GroupMessager.get_GroupMember() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubGroupMessager.GroupMemberSetGroupMember">
            <summary>设置 GroupMessager.set_GroupMember(GroupMember value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubGroupMessager.GroupSetGroup">
            <summary>设置 GroupMessager.set_Group(Group value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubGroupMessager.InitializeStub">
            <summary>初始化 type StubGroupMessager 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubGroupMessager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubGroupMessager.Group">
            <summary>设置 GroupMessager.get_Group() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubGroupMessager.GroupMember">
            <summary>设置 GroupMessager.get_GroupMember() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubGroupMessager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubGroupMessager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubIPCode">
            <summary>BCP.Domain.Edmx.IPCode 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubIPCode.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubIPCode.InitializeStub">
            <summary>初始化 type StubIPCode 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubIPCode.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubIPCode.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubIPCode.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubIndustryCode">
            <summary>BCP.Domain.Edmx.IndustryCode 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubIndustryCode.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubIndustryCode.AttachBackingFieldToIndustryCode1">
            <summary>附加委托以将 StubIndustryCode.IndustryCode1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubIndustryCode.AttachBackingFieldToIndustryCodes">
            <summary>附加委托以将 StubIndustryCode.IndustryCodes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubIndustryCode.AttachBackingFieldToIndustrySolutions">
            <summary>附加委托以将 StubIndustryCode.IndustrySolutions 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubIndustryCode.AttachBackingFieldToOrganizBasics">
            <summary>附加委托以将 StubIndustryCode.OrganizBasics 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubIndustryCode.IndustryCode1Get">
            <summary>设置 IndustryCode.get_IndustryCode1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubIndustryCode.IndustryCode1SetIndustryCode">
            <summary>设置 IndustryCode.set_IndustryCode1(IndustryCode value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubIndustryCode.IndustryCodesGet">
            <summary>设置 IndustryCode.get_IndustryCodes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubIndustryCode.IndustryCodesSetICollectionOfIndustryCode">
            <summary>设置 IndustryCode.set_IndustryCodes(ICollection`1&lt;IndustryCode&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubIndustryCode.IndustrySolutionsGet">
            <summary>设置 IndustryCode.get_IndustrySolutions() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubIndustryCode.IndustrySolutionsSetICollectionOfIndustrySolution">
            <summary>设置 IndustryCode.set_IndustrySolutions(ICollection`1&lt;IndustrySolution&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubIndustryCode.InitializeStub">
            <summary>初始化 type StubIndustryCode 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubIndustryCode.OrganizBasicsGet">
            <summary>设置 IndustryCode.get_OrganizBasics() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubIndustryCode.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 IndustryCode.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubIndustryCode.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubIndustryCode.IndustryCode1">
            <summary>设置 IndustryCode.get_IndustryCode1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubIndustryCode.IndustryCodes">
            <summary>设置 IndustryCode.get_IndustryCodes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubIndustryCode.IndustrySolutions">
            <summary>设置 IndustryCode.get_IndustrySolutions() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubIndustryCode.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubIndustryCode.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubIndustryCode.OrganizBasics">
            <summary>设置 IndustryCode.get_OrganizBasics() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubIndustrySolution">
            <summary>BCP.Domain.Edmx.IndustrySolution 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubIndustrySolution.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubIndustrySolution.AttachBackingFieldToDllFileStreams">
            <summary>附加委托以将 StubIndustrySolution.DllFileStreams 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubIndustrySolution.AttachBackingFieldToIndustryCode">
            <summary>附加委托以将 StubIndustrySolution.IndustryCode 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubIndustrySolution.AttachBackingFieldToWorkSpaces">
            <summary>附加委托以将 StubIndustrySolution.WorkSpaces 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubIndustrySolution.DllFileStreamsGet">
            <summary>设置 IndustrySolution.get_DllFileStreams() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubIndustrySolution.DllFileStreamsSetICollectionOfDllFileStream">
            <summary>设置 IndustrySolution.set_DllFileStreams(ICollection`1&lt;DllFileStream&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubIndustrySolution.IndustryCodeGet">
            <summary>设置 IndustrySolution.get_IndustryCode() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubIndustrySolution.IndustryCodeSetIndustryCode">
            <summary>设置 IndustrySolution.set_IndustryCode(IndustryCode value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubIndustrySolution.InitializeStub">
            <summary>初始化 type StubIndustrySolution 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubIndustrySolution.WorkSpacesGet">
            <summary>设置 IndustrySolution.get_WorkSpaces() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubIndustrySolution.WorkSpacesSetICollectionOfWorkSpace">
            <summary>设置 IndustrySolution.set_WorkSpaces(ICollection`1&lt;WorkSpace&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubIndustrySolution.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubIndustrySolution.DllFileStreams">
            <summary>设置 IndustrySolution.get_DllFileStreams() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubIndustrySolution.IndustryCode">
            <summary>设置 IndustrySolution.get_IndustryCode() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubIndustrySolution.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubIndustrySolution.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubIndustrySolution.WorkSpaces">
            <summary>设置 IndustrySolution.get_WorkSpaces() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubJobChange">
            <summary>BCP.Domain.Edmx.JobChange 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubJobChange.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubJobChange.AttachBackingFieldToPost">
            <summary>附加委托以将 StubJobChange.Post 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubJobChange.InitializeStub">
            <summary>初始化 type StubJobChange 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubJobChange.PostGet">
            <summary>设置 JobChange.get_Post() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubJobChange.PostSetPost">
            <summary>设置 JobChange.set_Post(Post value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubJobChange.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubJobChange.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubJobChange.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubJobChange.Post">
            <summary>设置 JobChange.get_Post() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubLoginLog">
            <summary>BCP.Domain.Edmx.LoginLog 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubLoginLog.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubLoginLog.AttachBackingFieldToOpenEvents">
            <summary>附加委托以将 StubLoginLog.OpenEvents 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubLoginLog.AttachBackingFieldToUser">
            <summary>附加委托以将 StubLoginLog.User 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubLoginLog.InitializeStub">
            <summary>初始化 type StubLoginLog 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubLoginLog.OpenEventsGet">
            <summary>设置 LoginLog.get_OpenEvents() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubLoginLog.OpenEventsSetICollectionOfOperationEvent">
            <summary>设置 LoginLog.set_OpenEvents(ICollection`1&lt;OperationEvent&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubLoginLog.UserGet">
            <summary>设置 LoginLog.get_User() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubLoginLog.UserSetUser">
            <summary>设置 LoginLog.set_User(User value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubLoginLog.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubLoginLog.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubLoginLog.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubLoginLog.OpenEvents">
            <summary>设置 LoginLog.get_OpenEvents() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubLoginLog.User">
            <summary>设置 LoginLog.get_User() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubModulProperty">
            <summary>BCP.Domain.Edmx.ModulProperty 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubModulProperty.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubModulProperty.AttachBackingFieldToAuthorizations">
            <summary>附加委托以将 StubModulProperty.Authorizations 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubModulProperty.AttachBackingFieldToWorkModul">
            <summary>附加委托以将 StubModulProperty.WorkModul 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubModulProperty.AuthorizationsGet">
            <summary>设置 ModulProperty.get_Authorizations() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubModulProperty.AuthorizationsSetICollectionOfAuthorization">
            <summary>设置 ModulProperty.set_Authorizations(ICollection`1&lt;Authorization&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubModulProperty.InitializeStub">
            <summary>初始化 type StubModulProperty 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubModulProperty.WorkModulGet">
            <summary>设置 ModulProperty.get_WorkModul() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubModulProperty.WorkModulSetWorkModul">
            <summary>设置 ModulProperty.set_WorkModul(WorkModul value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubModulProperty.Authorizations">
            <summary>设置 ModulProperty.get_Authorizations() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubModulProperty.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubModulProperty.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubModulProperty.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubModulProperty.WorkModul">
            <summary>设置 ModulProperty.get_WorkModul() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubOperationDetail">
            <summary>BCP.Domain.Edmx.OperationDetail 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOperationDetail.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOperationDetail.AttachBackingFieldToOpenEvent">
            <summary>附加委托以将 StubOperationDetail.OpenEvent 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOperationDetail.InitializeStub">
            <summary>初始化 type StubOperationDetail 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOperationDetail.OpenEventGet">
            <summary>设置 OperationDetail.get_OpenEvent() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOperationDetail.OpenEventSetOperationEvent">
            <summary>设置 OperationDetail.set_OpenEvent(OperationEvent value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOperationDetail.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOperationDetail.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOperationDetail.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOperationDetail.OpenEvent">
            <summary>设置 OperationDetail.get_OpenEvent() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubOperationEvent">
            <summary>BCP.Domain.Edmx.OperationEvent 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOperationEvent.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOperationEvent.AttachBackingFieldToEventTimes">
            <summary>附加委托以将 StubOperationEvent.EventTimes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOperationEvent.AttachBackingFieldToLoginLog">
            <summary>附加委托以将 StubOperationEvent.LoginLog 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOperationEvent.EventTimesGet">
            <summary>设置 OperationEvent.get_EventTimes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOperationEvent.EventTimesSetICollectionOfOperationDetail">
            <summary>设置 OperationEvent.set_EventTimes(ICollection`1&lt;OperationDetail&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOperationEvent.InitializeStub">
            <summary>初始化 type StubOperationEvent 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOperationEvent.LoginLogGet">
            <summary>设置 OperationEvent.get_LoginLog() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOperationEvent.LoginLogSetLoginLog">
            <summary>设置 OperationEvent.set_LoginLog(LoginLog value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOperationEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOperationEvent.EventTimes">
            <summary>设置 OperationEvent.get_EventTimes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOperationEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOperationEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOperationEvent.LoginLog">
            <summary>设置 OperationEvent.get_LoginLog() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubOrgaRegisterDocment">
            <summary>BCP.Domain.Edmx.OrgaRegisterDocment 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrgaRegisterDocment.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrgaRegisterDocment.AttachBackingFieldToOrganizBasic">
            <summary>附加委托以将 StubOrgaRegisterDocment.OrganizBasic 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrgaRegisterDocment.AttachBackingFieldToRegisterDocumentType">
            <summary>附加委托以将 StubOrgaRegisterDocment.RegisterDocumentType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrgaRegisterDocment.InitializeStub">
            <summary>初始化 type StubOrgaRegisterDocment 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrgaRegisterDocment.OrganizBasicGet">
            <summary>设置 OrgaRegisterDocment.get_OrganizBasic() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrgaRegisterDocment.OrganizBasicSetOrganizBasic">
            <summary>设置 OrgaRegisterDocment.set_OrganizBasic(OrganizBasic value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrgaRegisterDocment.RegisterDocumentTypeGet">
            <summary>设置 OrgaRegisterDocment.get_RegisterDocumentType() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrgaRegisterDocment.RegisterDocumentTypeSetRegisterDocumentType">
            <summary>设置 OrgaRegisterDocment.set_RegisterDocumentType(RegisterDocumentType value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrgaRegisterDocment.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrgaRegisterDocment.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrgaRegisterDocment.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrgaRegisterDocment.OrganizBasic">
            <summary>设置 OrgaRegisterDocment.get_OrganizBasic() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrgaRegisterDocment.RegisterDocumentType">
            <summary>设置 OrgaRegisterDocment.get_RegisterDocumentType() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubOrganicInvestor">
            <summary>BCP.Domain.Edmx.OrganicInvestor 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganicInvestor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganicInvestor.AttachBackingFieldToOrganizBasic">
            <summary>附加委托以将 StubOrganicInvestor.OrganizBasic 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganicInvestor.AttachBackingFieldToOrganizBasic1">
            <summary>附加委托以将 StubOrganicInvestor.OrganizBasic1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganicInvestor.InitializeStub">
            <summary>初始化 type StubOrganicInvestor 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganicInvestor.OrganizBasic1Get">
            <summary>设置 OrganicInvestor.get_OrganizBasic1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganicInvestor.OrganizBasic1SetOrganizBasic">
            <summary>设置 OrganicInvestor.set_OrganizBasic1(OrganizBasic value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganicInvestor.OrganizBasicGet">
            <summary>设置 OrganicInvestor.get_OrganizBasic() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganicInvestor.OrganizBasicSetOrganizBasic">
            <summary>设置 OrganicInvestor.set_OrganizBasic(OrganizBasic value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganicInvestor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganicInvestor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganicInvestor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganicInvestor.OrganizBasic">
            <summary>设置 OrganicInvestor.get_OrganizBasic() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganicInvestor.OrganizBasic1">
            <summary>设置 OrganicInvestor.get_OrganizBasic1() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubOrganizBasic">
            <summary>BCP.Domain.Edmx.OrganizBasic 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizBasic.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.AdministrativecodeGet">
            <summary>设置 OrganizBasic.get_Administrativecode() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.AdministrativecodeSetAdministrativecode">
            <summary>设置 OrganizBasic.set_Administrativecode(Administrativecode value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizBasic.AttachBackingFieldToAdministrativecode">
            <summary>附加委托以将 StubOrganizBasic.Administrativecode 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizBasic.AttachBackingFieldToIndustryCode">
            <summary>附加委托以将 StubOrganizBasic.IndustryCode 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizBasic.AttachBackingFieldToOrgaRegisterDocments">
            <summary>附加委托以将 StubOrganizBasic.OrgaRegisterDocments 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizBasic.AttachBackingFieldToOrganicInvestors">
            <summary>附加委托以将 StubOrganizBasic.OrganicInvestors 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizBasic.AttachBackingFieldToOrganicInvestors1">
            <summary>附加委托以将 StubOrganizBasic.OrganicInvestors1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizBasic.AttachBackingFieldToOrganizBasic1">
            <summary>附加委托以将 StubOrganizBasic.OrganizBasic1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizBasic.AttachBackingFieldToOrganizBasics">
            <summary>附加委托以将 StubOrganizBasic.OrganizBasics 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizBasic.AttachBackingFieldToOrganization">
            <summary>附加委托以将 StubOrganizBasic.Organization 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizBasic.AttachBackingFieldToOrganization_ContacTable">
            <summary>附加委托以将 StubOrganizBasic.Organization_ContacTable 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizBasic.AttachBackingFieldToOrganization_Type">
            <summary>附加委托以将 StubOrganizBasic.Organization_Type 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizBasic.AttachBackingFieldToProducts">
            <summary>附加委托以将 StubOrganizBasic.Products 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizBasic.AttachBackingFieldToSubordinate">
            <summary>附加委托以将 StubOrganizBasic.Subordinate 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.ContacTableGetOrganization">
            <summary>设置 OrganizBasic.get_Organization_ContacTable() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.ContacTableSetOrganizationICollectionOfOrganization_ContacTable">
            <summary>设置 OrganizBasic.set_Organization_ContacTable(ICollection`1&lt;Organization_ContacTable&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.IndustryCodeGet">
            <summary>设置 OrganizBasic.get_IndustryCode() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.IndustryCodeSetIndustryCode">
            <summary>设置 OrganizBasic.set_IndustryCode(IndustryCode value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizBasic.InitializeStub">
            <summary>初始化 type StubOrganizBasic 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.OrgaRegisterDocmentsGet">
            <summary>设置 OrganizBasic.get_OrgaRegisterDocments() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.OrgaRegisterDocmentsSetICollectionOfOrgaRegisterDocment">
            <summary>设置 OrganizBasic.set_OrgaRegisterDocments(ICollection`1&lt;OrgaRegisterDocment&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.OrganicInvestors1Get">
            <summary>设置 OrganizBasic.get_OrganicInvestors1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.OrganicInvestors1SetICollectionOfOrganicInvestor">
            <summary>设置 OrganizBasic.set_OrganicInvestors1(ICollection`1&lt;OrganicInvestor&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.OrganicInvestorsGet">
            <summary>设置 OrganizBasic.get_OrganicInvestors() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.OrganicInvestorsSetICollectionOfOrganicInvestor">
            <summary>设置 OrganizBasic.set_OrganicInvestors(ICollection`1&lt;OrganicInvestor&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.OrganizBasic1Get">
            <summary>设置 OrganizBasic.get_OrganizBasic1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.OrganizBasic1SetOrganizBasic">
            <summary>设置 OrganizBasic.set_OrganizBasic1(OrganizBasic value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.OrganizBasicsGet">
            <summary>设置 OrganizBasic.get_OrganizBasics() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 OrganizBasic.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.OrganizationGet">
            <summary>设置 OrganizBasic.get_Organization() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.OrganizationSetOrganization">
            <summary>设置 OrganizBasic.set_Organization(Organization value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.ProductsGet">
            <summary>设置 OrganizBasic.get_Products() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.ProductsSetICollectionOfProduct">
            <summary>设置 OrganizBasic.set_Products(ICollection`1&lt;Product&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.SubordinateGet">
            <summary>设置 OrganizBasic.get_Subordinate() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.SubordinateSetSubordinate">
            <summary>设置 OrganizBasic.set_Subordinate(Subordinate value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.TypeGetOrganization">
            <summary>设置 OrganizBasic.get_Organization_Type() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizBasic.TypeSetOrganizationOrganization_Type">
            <summary>设置 OrganizBasic.set_Organization_Type(Organization_Type value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizBasic.Administrativecode">
            <summary>设置 OrganizBasic.get_Administrativecode() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizBasic.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizBasic.IndustryCode">
            <summary>设置 OrganizBasic.get_IndustryCode() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizBasic.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizBasic.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizBasic.OrgaRegisterDocments">
            <summary>设置 OrganizBasic.get_OrgaRegisterDocments() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizBasic.OrganicInvestors">
            <summary>设置 OrganizBasic.get_OrganicInvestors() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizBasic.OrganicInvestors1">
            <summary>设置 OrganizBasic.get_OrganicInvestors1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizBasic.OrganizBasic1">
            <summary>设置 OrganizBasic.get_OrganizBasic1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizBasic.OrganizBasics">
            <summary>设置 OrganizBasic.get_OrganizBasics() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizBasic.Organization">
            <summary>设置 OrganizBasic.get_Organization() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizBasic.Organization_ContacTable">
            <summary>设置 OrganizBasic.get_Organization_ContacTable() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizBasic.Organization_Type">
            <summary>设置 OrganizBasic.get_Organization_Type() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizBasic.Products">
            <summary>设置 OrganizBasic.get_Products() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizBasic.Subordinate">
            <summary>设置 OrganizBasic.get_Subordinate() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubOrganization">
            <summary>BCP.Domain.Edmx.Organization 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.AttachBackingFieldToCustomOrganizationTypes">
            <summary>附加委托以将 StubOrganization.CustomOrganizationTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.AttachBackingFieldToDocReaders">
            <summary>附加委托以将 StubOrganization.DocReaders 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.AttachBackingFieldToEmployees">
            <summary>附加委托以将 StubOrganization.Employees 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.AttachBackingFieldToOrganizBasics">
            <summary>附加委托以将 StubOrganization.OrganizBasics 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.AttachBackingFieldToOrganization1">
            <summary>附加委托以将 StubOrganization.Organization1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.AttachBackingFieldToOrganizationEvents">
            <summary>附加委托以将 StubOrganization.OrganizationEvents 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.AttachBackingFieldToOrganizationOtherNames">
            <summary>附加委托以将 StubOrganization.OrganizationOtherNames 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.AttachBackingFieldToOrganizationTransitions">
            <summary>附加委托以将 StubOrganization.OrganizationTransitions 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.AttachBackingFieldToOrganizationTransitions1">
            <summary>附加委托以将 StubOrganization.OrganizationTransitions1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.AttachBackingFieldToOrganizations">
            <summary>附加委托以将 StubOrganization.Organizations 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.AttachBackingFieldToPositions">
            <summary>附加委托以将 StubOrganization.Positions 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.AttachBackingFieldToPosts">
            <summary>附加委托以将 StubOrganization.Posts 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.AttachBackingFieldToProducts">
            <summary>附加委托以将 StubOrganization.Products 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.AttachBackingFieldToWorkSpaceRoles">
            <summary>附加委托以将 StubOrganization.WorkSpaceRoles 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.AttachBackingFieldTophysicalAssets">
            <summary>附加委托以将 StubOrganization.physicalAssets 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.AttachBackingFieldTophysicalAssets1">
            <summary>附加委托以将 StubOrganization.physicalAssets1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.CustomOrganizationTypesGet">
            <summary>设置 Organization.get_CustomOrganizationTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.CustomOrganizationTypesSetICollectionOfOrganizationCustomType">
            <summary>设置 Organization.set_CustomOrganizationTypes(ICollection`1&lt;OrganizationCustomType&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.DocReadersGet">
            <summary>设置 Organization.get_DocReaders() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.DocReadersSetICollectionOfDocReader">
            <summary>设置 Organization.set_DocReaders(ICollection`1&lt;DocReader&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.EmployeesGet">
            <summary>设置 Organization.get_Employees() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.EmployeesSetICollectionOfEmployee">
            <summary>设置 Organization.set_Employees(ICollection`1&lt;Employee&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization.InitializeStub">
            <summary>初始化 type StubOrganization 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.OrganizBasicsGet">
            <summary>设置 Organization.get_OrganizBasics() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 Organization.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.Organization1Get">
            <summary>设置 Organization.get_Organization1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.Organization1SetOrganization">
            <summary>设置 Organization.set_Organization1(Organization value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.OrganizationEventsGet">
            <summary>设置 Organization.get_OrganizationEvents() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.OrganizationEventsSetICollectionOfOrganizationEvent">
            <summary>设置 Organization.set_OrganizationEvents(ICollection`1&lt;OrganizationEvent&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.OrganizationOtherNamesGet">
            <summary>设置 Organization.get_OrganizationOtherNames() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.OrganizationOtherNamesSetICollectionOfOrganizationOtherName">
            <summary>设置 Organization.set_OrganizationOtherNames(ICollection`1&lt;OrganizationOtherName&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.OrganizationTransitions1Get">
            <summary>设置 Organization.get_OrganizationTransitions1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.OrganizationTransitions1SetICollectionOfOrganizationTransition">
            <summary>设置 Organization.set_OrganizationTransitions1(ICollection`1&lt;OrganizationTransition&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.OrganizationTransitionsGet">
            <summary>设置 Organization.get_OrganizationTransitions() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.OrganizationTransitionsSetICollectionOfOrganizationTransition">
            <summary>设置 Organization.set_OrganizationTransitions(ICollection`1&lt;OrganizationTransition&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.OrganizationsGet">
            <summary>设置 Organization.get_Organizations() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.OrganizationsSetICollectionOfOrganization">
            <summary>设置 Organization.set_Organizations(ICollection`1&lt;Organization&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.PhysicalAssets1Get">
            <summary>设置 Organization.get_physicalAssets1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.PhysicalAssets1SetICollectionOfphysicalAsset">
            <summary>设置 Organization.set_physicalAssets1(ICollection`1&lt;physicalAsset&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.PhysicalAssetsGet">
            <summary>设置 Organization.get_physicalAssets() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.PhysicalAssetsSetICollectionOfphysicalAsset">
            <summary>设置 Organization.set_physicalAssets(ICollection`1&lt;physicalAsset&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.PositionsGet">
            <summary>设置 Organization.get_Positions() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.PositionsSetICollectionOfPosition">
            <summary>设置 Organization.set_Positions(ICollection`1&lt;Position&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.PostsGet">
            <summary>设置 Organization.get_Posts() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.PostsSetICollectionOfPost">
            <summary>设置 Organization.set_Posts(ICollection`1&lt;Post&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.ProductsGet">
            <summary>设置 Organization.get_Products() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.ProductsSetICollectionOfProduct">
            <summary>设置 Organization.set_Products(ICollection`1&lt;Product&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.WorkSpaceRolesGet">
            <summary>设置 Organization.get_WorkSpaceRoles() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization.WorkSpaceRolesSetICollectionOfWorkSpaceRole">
            <summary>设置 Organization.set_WorkSpaceRoles(ICollection`1&lt;WorkSpaceRole&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.CustomOrganizationTypes">
            <summary>设置 Organization.get_CustomOrganizationTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.DocReaders">
            <summary>设置 Organization.get_DocReaders() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.Employees">
            <summary>设置 Organization.get_Employees() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.OrganizBasics">
            <summary>设置 Organization.get_OrganizBasics() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.Organization1">
            <summary>设置 Organization.get_Organization1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.OrganizationEvents">
            <summary>设置 Organization.get_OrganizationEvents() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.OrganizationOtherNames">
            <summary>设置 Organization.get_OrganizationOtherNames() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.OrganizationTransitions">
            <summary>设置 Organization.get_OrganizationTransitions() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.OrganizationTransitions1">
            <summary>设置 Organization.get_OrganizationTransitions1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.Organizations">
            <summary>设置 Organization.get_Organizations() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.Positions">
            <summary>设置 Organization.get_Positions() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.Posts">
            <summary>设置 Organization.get_Posts() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.Products">
            <summary>设置 Organization.get_Products() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.WorkSpaceRoles">
            <summary>设置 Organization.get_WorkSpaceRoles() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.physicalAssets">
            <summary>设置 Organization.get_physicalAssets() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization.physicalAssets1">
            <summary>设置 Organization.get_physicalAssets1() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubOrganizationAssetType">
            <summary>BCP.Domain.Edmx.OrganizationAssetType 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationAssetType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizationAssetType.AssetBaseTypeGet">
            <summary>设置 OrganizationAssetType.get_AssetBaseType() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizationAssetType.AssetBaseTypeSetAssetBaseType">
            <summary>设置 OrganizationAssetType.set_AssetBaseType(AssetBaseType value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationAssetType.AttachBackingFieldToAssetBaseType">
            <summary>附加委托以将 StubOrganizationAssetType.AssetBaseType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationAssetType.AttachBackingFieldTophysicalAsset">
            <summary>附加委托以将 StubOrganizationAssetType.physicalAsset 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationAssetType.InitializeStub">
            <summary>初始化 type StubOrganizationAssetType 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizationAssetType.PhysicalAssetGet">
            <summary>设置 OrganizationAssetType.get_physicalAsset() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizationAssetType.PhysicalAssetSetphysicalAsset">
            <summary>设置 OrganizationAssetType.set_physicalAsset(physicalAsset value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationAssetType.AssetBaseType">
            <summary>设置 OrganizationAssetType.get_AssetBaseType() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationAssetType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationAssetType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationAssetType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationAssetType.physicalAsset">
            <summary>设置 OrganizationAssetType.get_physicalAsset() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubOrganizationCustomType">
            <summary>BCP.Domain.Edmx.OrganizationCustomType 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationCustomType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationCustomType.AttachBackingFieldToCustomCategory">
            <summary>附加委托以将 StubOrganizationCustomType.CustomCategory 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationCustomType.AttachBackingFieldToOrganization">
            <summary>附加委托以将 StubOrganizationCustomType.Organization 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizationCustomType.CustomCategoryGet">
            <summary>设置 OrganizationCustomType.get_CustomCategory() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizationCustomType.CustomCategorySetCustomCategory">
            <summary>设置 OrganizationCustomType.set_CustomCategory(CustomCategory value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationCustomType.InitializeStub">
            <summary>初始化 type StubOrganizationCustomType 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizationCustomType.OrganizationGet">
            <summary>设置 OrganizationCustomType.get_Organization() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizationCustomType.OrganizationSetOrganization">
            <summary>设置 OrganizationCustomType.set_Organization(Organization value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationCustomType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationCustomType.CustomCategory">
            <summary>设置 OrganizationCustomType.get_CustomCategory() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationCustomType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationCustomType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationCustomType.Organization">
            <summary>设置 OrganizationCustomType.get_Organization() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubOrganizationEvent">
            <summary>BCP.Domain.Edmx.OrganizationEvent 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationEvent.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationEvent.AttachBackingFieldToOrganization">
            <summary>附加委托以将 StubOrganizationEvent.Organization 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationEvent.InitializeStub">
            <summary>初始化 type StubOrganizationEvent 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizationEvent.OrganizationGet">
            <summary>设置 OrganizationEvent.get_Organization() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizationEvent.OrganizationSetOrganization">
            <summary>设置 OrganizationEvent.set_Organization(Organization value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationEvent.Organization">
            <summary>设置 OrganizationEvent.get_Organization() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubOrganizationOtherName">
            <summary>BCP.Domain.Edmx.OrganizationOtherName 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationOtherName.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationOtherName.AttachBackingFieldToOrganization">
            <summary>附加委托以将 StubOrganizationOtherName.Organization 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationOtherName.InitializeStub">
            <summary>初始化 type StubOrganizationOtherName 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizationOtherName.OrganizationGet">
            <summary>设置 OrganizationOtherName.get_Organization() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizationOtherName.OrganizationSetOrganization">
            <summary>设置 OrganizationOtherName.set_Organization(Organization value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationOtherName.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationOtherName.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationOtherName.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationOtherName.Organization">
            <summary>设置 OrganizationOtherName.get_Organization() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubOrganizationTransition">
            <summary>BCP.Domain.Edmx.OrganizationTransition 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationTransition.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationTransition.AttachBackingFieldToOrganization">
            <summary>附加委托以将 StubOrganizationTransition.Organization 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationTransition.AttachBackingFieldToOrganization1">
            <summary>附加委托以将 StubOrganizationTransition.Organization1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganizationTransition.InitializeStub">
            <summary>初始化 type StubOrganizationTransition 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizationTransition.Organization1Get">
            <summary>设置 OrganizationTransition.get_Organization1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizationTransition.Organization1SetOrganization">
            <summary>设置 OrganizationTransition.set_Organization1(Organization value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizationTransition.OrganizationGet">
            <summary>设置 OrganizationTransition.get_Organization() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganizationTransition.OrganizationSetOrganization">
            <summary>设置 OrganizationTransition.set_Organization(Organization value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationTransition.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationTransition.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationTransition.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationTransition.Organization">
            <summary>设置 OrganizationTransition.get_Organization() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganizationTransition.Organization1">
            <summary>设置 OrganizationTransition.get_Organization1() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubOrganization_ContacTable">
            <summary>BCP.Domain.Edmx.Organization_ContacTable 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization_ContacTable.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization_ContacTable.AttachBackingFieldToOrganizBasic">
            <summary>附加委托以将 StubOrganization_ContacTable.OrganizBasic 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization_ContacTable.InitializeStub">
            <summary>初始化 type StubOrganization_ContacTable 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization_ContacTable.OrganizBasicGet">
            <summary>设置 Organization_ContacTable.get_OrganizBasic() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization_ContacTable.OrganizBasicSetOrganizBasic">
            <summary>设置 Organization_ContacTable.set_OrganizBasic(OrganizBasic value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization_ContacTable.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization_ContacTable.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization_ContacTable.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization_ContacTable.OrganizBasic">
            <summary>设置 Organization_ContacTable.get_OrganizBasic() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubOrganization_Type">
            <summary>BCP.Domain.Edmx.Organization_Type 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization_Type.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization_Type.AttachBackingFieldToOrganizBasics">
            <summary>附加委托以将 StubOrganization_Type.OrganizBasics 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization_Type.AttachBackingFieldToOrganization_Type1">
            <summary>附加委托以将 StubOrganization_Type.Organization_Type1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization_Type.AttachBackingFieldToOrganization_Type2">
            <summary>附加委托以将 StubOrganization_Type.Organization_Type2 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubOrganization_Type.InitializeStub">
            <summary>初始化 type StubOrganization_Type 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization_Type.OrganizBasicsGet">
            <summary>设置 Organization_Type.get_OrganizBasics() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization_Type.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 Organization_Type.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization_Type.Type1GetOrganization">
            <summary>设置 Organization_Type.get_Organization_Type1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization_Type.Type1SetOrganizationICollectionOfOrganization_Type">
            <summary>设置 Organization_Type.set_Organization_Type1(ICollection`1&lt;Organization_Type&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization_Type.Type2GetOrganization">
            <summary>设置 Organization_Type.get_Organization_Type2() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubOrganization_Type.Type2SetOrganizationOrganization_Type">
            <summary>设置 Organization_Type.set_Organization_Type2(Organization_Type value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization_Type.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization_Type.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization_Type.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization_Type.OrganizBasics">
            <summary>设置 Organization_Type.get_OrganizBasics() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization_Type.Organization_Type1">
            <summary>设置 Organization_Type.get_Organization_Type1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubOrganization_Type.Organization_Type2">
            <summary>设置 Organization_Type.get_Organization_Type2() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubPosition">
            <summary>BCP.Domain.Edmx.Position 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPosition.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPosition.AttachBackingFieldToEmployees">
            <summary>附加委托以将 StubPosition.Employees 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPosition.AttachBackingFieldToOrganization">
            <summary>附加委托以将 StubPosition.Organization 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPosition.AttachBackingFieldToPosition1">
            <summary>附加委托以将 StubPosition.Position1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPosition.AttachBackingFieldToPositions">
            <summary>附加委托以将 StubPosition.Positions 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPosition.AttachBackingFieldToPostRequire">
            <summary>附加委托以将 StubPosition.PostRequire 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPosition.AttachBackingFieldToPosts">
            <summary>附加委托以将 StubPosition.Posts 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPosition.EmployeesGet">
            <summary>设置 Position.get_Employees() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPosition.EmployeesSetICollectionOfEmployee">
            <summary>设置 Position.set_Employees(ICollection`1&lt;Employee&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPosition.InitializeStub">
            <summary>初始化 type StubPosition 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPosition.OrganizationGet">
            <summary>设置 Position.get_Organization() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPosition.OrganizationSetOrganization">
            <summary>设置 Position.set_Organization(Organization value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPosition.Position1Get">
            <summary>设置 Position.get_Position1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPosition.Position1SetPosition">
            <summary>设置 Position.set_Position1(Position value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPosition.PositionsGet">
            <summary>设置 Position.get_Positions() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPosition.PositionsSetICollectionOfPosition">
            <summary>设置 Position.set_Positions(ICollection`1&lt;Position&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPosition.PostRequireGet">
            <summary>设置 Position.get_PostRequire() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPosition.PostRequireSetPostRequire">
            <summary>设置 Position.set_PostRequire(PostRequire value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPosition.PostsGet">
            <summary>设置 Position.get_Posts() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPosition.PostsSetICollectionOfPost">
            <summary>设置 Position.set_Posts(ICollection`1&lt;Post&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPosition.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPosition.Employees">
            <summary>设置 Position.get_Employees() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPosition.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPosition.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPosition.Organization">
            <summary>设置 Position.get_Organization() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPosition.Position1">
            <summary>设置 Position.get_Position1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPosition.Positions">
            <summary>设置 Position.get_Positions() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPosition.PostRequire">
            <summary>设置 Position.get_PostRequire() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPosition.Posts">
            <summary>设置 Position.get_Posts() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubPost">
            <summary>BCP.Domain.Edmx.Post 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPost.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPost.AttachBackingFieldToAuthorizations">
            <summary>附加委托以将 StubPost.Authorizations 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPost.AttachBackingFieldToAuthorizations1">
            <summary>附加委托以将 StubPost.Authorizations1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPost.AttachBackingFieldToDocReaders">
            <summary>附加委托以将 StubPost.DocReaders 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPost.AttachBackingFieldToDocSenders">
            <summary>附加委托以将 StubPost.DocSenders 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPost.AttachBackingFieldToEmployee">
            <summary>附加委托以将 StubPost.Employee 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPost.AttachBackingFieldToJobChanges">
            <summary>附加委托以将 StubPost.JobChanges 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPost.AttachBackingFieldToOrganization">
            <summary>附加委托以将 StubPost.Organization 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPost.AttachBackingFieldToPosition">
            <summary>附加委托以将 StubPost.Position 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPost.AttachBackingFieldToPost1">
            <summary>附加委托以将 StubPost.Post1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPost.AttachBackingFieldToPosts">
            <summary>附加委托以将 StubPost.Posts 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.Authorizations1Get">
            <summary>设置 Post.get_Authorizations1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.Authorizations1SetICollectionOfAuthorization">
            <summary>设置 Post.set_Authorizations1(ICollection`1&lt;Authorization&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.AuthorizationsGet">
            <summary>设置 Post.get_Authorizations() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.AuthorizationsSetICollectionOfAuthorization">
            <summary>设置 Post.set_Authorizations(ICollection`1&lt;Authorization&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.DocReadersGet">
            <summary>设置 Post.get_DocReaders() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.DocReadersSetICollectionOfDocReader">
            <summary>设置 Post.set_DocReaders(ICollection`1&lt;DocReader&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.DocSendersGet">
            <summary>设置 Post.get_DocSenders() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.DocSendersSetICollectionOfDocSender">
            <summary>设置 Post.set_DocSenders(ICollection`1&lt;DocSender&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.EmployeeGet">
            <summary>设置 Post.get_Employee() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.EmployeeSetEmployee">
            <summary>设置 Post.set_Employee(Employee value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPost.InitializeStub">
            <summary>初始化 type StubPost 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.JobChangesGet">
            <summary>设置 Post.get_JobChanges() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.JobChangesSetICollectionOfJobChange">
            <summary>设置 Post.set_JobChanges(ICollection`1&lt;JobChange&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.OrganizationGet">
            <summary>设置 Post.get_Organization() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.OrganizationSetOrganization">
            <summary>设置 Post.set_Organization(Organization value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.PositionGet">
            <summary>设置 Post.get_Position() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.PositionSetPosition">
            <summary>设置 Post.set_Position(Position value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.Post1Get">
            <summary>设置 Post.get_Post1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.Post1SetPost">
            <summary>设置 Post.set_Post1(Post value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.PostsGet">
            <summary>设置 Post.get_Posts() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPost.PostsSetICollectionOfPost">
            <summary>设置 Post.set_Posts(ICollection`1&lt;Post&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPost.Authorizations">
            <summary>设置 Post.get_Authorizations() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPost.Authorizations1">
            <summary>设置 Post.get_Authorizations1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPost.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPost.DocReaders">
            <summary>设置 Post.get_DocReaders() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPost.DocSenders">
            <summary>设置 Post.get_DocSenders() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPost.Employee">
            <summary>设置 Post.get_Employee() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPost.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPost.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPost.JobChanges">
            <summary>设置 Post.get_JobChanges() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPost.Organization">
            <summary>设置 Post.get_Organization() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPost.Position">
            <summary>设置 Post.get_Position() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPost.Post1">
            <summary>设置 Post.get_Post1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPost.Posts">
            <summary>设置 Post.get_Posts() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubPostRequire">
            <summary>BCP.Domain.Edmx.PostRequire 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPostRequire.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPostRequire.AttachBackingFieldToPositions">
            <summary>附加委托以将 StubPostRequire.Positions 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPostRequire.AttachBackingFieldToSpecialized">
            <summary>附加委托以将 StubPostRequire.Specialized 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubPostRequire.InitializeStub">
            <summary>初始化 type StubPostRequire 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPostRequire.PositionsGet">
            <summary>设置 PostRequire.get_Positions() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPostRequire.PositionsSetICollectionOfPosition">
            <summary>设置 PostRequire.set_Positions(ICollection`1&lt;Position&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPostRequire.SpecializedGet">
            <summary>设置 PostRequire.get_Specialized() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubPostRequire.SpecializedSetSpecialized">
            <summary>设置 PostRequire.set_Specialized(Specialized value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPostRequire.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPostRequire.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPostRequire.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPostRequire.Positions">
            <summary>设置 PostRequire.get_Positions() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubPostRequire.Specialized">
            <summary>设置 PostRequire.get_Specialized() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubProduct">
            <summary>BCP.Domain.Edmx.Product 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProduct.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProduct.AttachBackingFieldToOrganizBasic">
            <summary>附加委托以将 StubProduct.OrganizBasic 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProduct.AttachBackingFieldToOrganization">
            <summary>附加委托以将 StubProduct.Organization 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProduct.AttachBackingFieldToProductCompositions1">
            <summary>附加委托以将 StubProduct.ProductCompositions1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProduct.AttachBackingFieldToProductCustomTypes">
            <summary>附加委托以将 StubProduct.ProductCustomTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProduct.AttachBackingFieldToProductEvents">
            <summary>附加委托以将 StubProduct.ProductEvents 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProduct.AttachBackingFieldToProductStandard">
            <summary>附加委托以将 StubProduct.ProductStandard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProduct.AttachBackingFieldTophysicalAssets">
            <summary>附加委托以将 StubProduct.physicalAssets 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProduct.InitializeStub">
            <summary>初始化 type StubProduct 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProduct.OrganizBasicGet">
            <summary>设置 Product.get_OrganizBasic() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProduct.OrganizBasicSetOrganizBasic">
            <summary>设置 Product.set_OrganizBasic(OrganizBasic value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProduct.OrganizationGet">
            <summary>设置 Product.get_Organization() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProduct.OrganizationSetOrganization">
            <summary>设置 Product.set_Organization(Organization value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProduct.PhysicalAssetsGet">
            <summary>设置 Product.get_physicalAssets() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProduct.PhysicalAssetsSetICollectionOfphysicalAsset">
            <summary>设置 Product.set_physicalAssets(ICollection`1&lt;physicalAsset&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProduct.ProductCompositions1Get">
            <summary>设置 Product.get_ProductCompositions1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProduct.ProductCompositions1SetICollectionOfProductComposition">
            <summary>设置 Product.set_ProductCompositions1(ICollection`1&lt;ProductComposition&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProduct.ProductCustomTypesGet">
            <summary>设置 Product.get_ProductCustomTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProduct.ProductCustomTypesSetICollectionOfProductCustomType">
            <summary>设置 Product.set_ProductCustomTypes(ICollection`1&lt;ProductCustomType&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProduct.ProductEventsGet">
            <summary>设置 Product.get_ProductEvents() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProduct.ProductEventsSetICollectionOfProductEvent">
            <summary>设置 Product.set_ProductEvents(ICollection`1&lt;ProductEvent&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProduct.ProductStandardGet">
            <summary>设置 Product.get_ProductStandard() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProduct.ProductStandardSetProductStandard">
            <summary>设置 Product.set_ProductStandard(ProductStandard value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProduct.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProduct.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProduct.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProduct.OrganizBasic">
            <summary>设置 Product.get_OrganizBasic() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProduct.Organization">
            <summary>设置 Product.get_Organization() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProduct.ProductCompositions1">
            <summary>设置 Product.get_ProductCompositions1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProduct.ProductCustomTypes">
            <summary>设置 Product.get_ProductCustomTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProduct.ProductEvents">
            <summary>设置 Product.get_ProductEvents() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProduct.ProductStandard">
            <summary>设置 Product.get_ProductStandard() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProduct.physicalAssets">
            <summary>设置 Product.get_physicalAssets() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubProductComposition">
            <summary>BCP.Domain.Edmx.ProductComposition 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductComposition.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductComposition.AttachBackingFieldToProduct1">
            <summary>附加委托以将 StubProductComposition.Product1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductComposition.AttachBackingFieldToProductComposition1">
            <summary>附加委托以将 StubProductComposition.ProductComposition1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductComposition.AttachBackingFieldToProductCompositions">
            <summary>附加委托以将 StubProductComposition.ProductCompositions 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductComposition.InitializeStub">
            <summary>初始化 type StubProductComposition 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductComposition.Product1Get">
            <summary>设置 ProductComposition.get_Product1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductComposition.Product1SetProduct">
            <summary>设置 ProductComposition.set_Product1(Product value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductComposition.ProductComposition1Get">
            <summary>设置 ProductComposition.get_ProductComposition1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductComposition.ProductComposition1SetProductComposition">
            <summary>设置 ProductComposition.set_ProductComposition1(ProductComposition value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductComposition.ProductCompositionsGet">
            <summary>设置 ProductComposition.get_ProductCompositions() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductComposition.ProductCompositionsSetICollectionOfProductComposition">
            <summary>设置 ProductComposition.set_ProductCompositions(ICollection`1&lt;ProductComposition&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductComposition.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductComposition.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductComposition.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductComposition.Product1">
            <summary>设置 ProductComposition.get_Product1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductComposition.ProductComposition1">
            <summary>设置 ProductComposition.get_ProductComposition1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductComposition.ProductCompositions">
            <summary>设置 ProductComposition.get_ProductCompositions() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubProductCustomCategory">
            <summary>BCP.Domain.Edmx.ProductCustomCategory 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductCustomCategory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductCustomCategory.AttachBackingFieldToProductCustomCategories">
            <summary>附加委托以将 StubProductCustomCategory.ProductCustomCategories 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductCustomCategory.AttachBackingFieldToProductCustomCategory1">
            <summary>附加委托以将 StubProductCustomCategory.ProductCustomCategory1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductCustomCategory.AttachBackingFieldToProductCustomTypes">
            <summary>附加委托以将 StubProductCustomCategory.ProductCustomTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductCustomCategory.InitializeStub">
            <summary>初始化 type StubProductCustomCategory 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductCustomCategory.ProductCustomCategoriesGet">
            <summary>设置 ProductCustomCategory.get_ProductCustomCategories() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductCustomCategory.ProductCustomCategoriesSetICollectionOfProductCustomCategory">
            <summary>设置 ProductCustomCategory.set_ProductCustomCategories(ICollection`1&lt;ProductCustomCategory&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductCustomCategory.ProductCustomCategory1Get">
            <summary>设置 ProductCustomCategory.get_ProductCustomCategory1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductCustomCategory.ProductCustomCategory1SetProductCustomCategory">
            <summary>设置 ProductCustomCategory.set_ProductCustomCategory1(ProductCustomCategory value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductCustomCategory.ProductCustomTypesGet">
            <summary>设置 ProductCustomCategory.get_ProductCustomTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductCustomCategory.ProductCustomTypesSetICollectionOfProductCustomType">
            <summary>设置 ProductCustomCategory.set_ProductCustomTypes(ICollection`1&lt;ProductCustomType&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductCustomCategory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductCustomCategory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductCustomCategory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductCustomCategory.ProductCustomCategories">
            <summary>设置 ProductCustomCategory.get_ProductCustomCategories() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductCustomCategory.ProductCustomCategory1">
            <summary>设置 ProductCustomCategory.get_ProductCustomCategory1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductCustomCategory.ProductCustomTypes">
            <summary>设置 ProductCustomCategory.get_ProductCustomTypes() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubProductCustomType">
            <summary>BCP.Domain.Edmx.ProductCustomType 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductCustomType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductCustomType.AttachBackingFieldToProduct">
            <summary>附加委托以将 StubProductCustomType.Product 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductCustomType.AttachBackingFieldToProductCustomCategory">
            <summary>附加委托以将 StubProductCustomType.ProductCustomCategory 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductCustomType.InitializeStub">
            <summary>初始化 type StubProductCustomType 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductCustomType.ProductCustomCategoryGet">
            <summary>设置 ProductCustomType.get_ProductCustomCategory() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductCustomType.ProductCustomCategorySetProductCustomCategory">
            <summary>设置 ProductCustomType.set_ProductCustomCategory(ProductCustomCategory value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductCustomType.ProductGet">
            <summary>设置 ProductCustomType.get_Product() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductCustomType.ProductSetProduct">
            <summary>设置 ProductCustomType.set_Product(Product value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductCustomType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductCustomType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductCustomType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductCustomType.Product">
            <summary>设置 ProductCustomType.get_Product() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductCustomType.ProductCustomCategory">
            <summary>设置 ProductCustomType.get_ProductCustomCategory() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubProductEvent">
            <summary>BCP.Domain.Edmx.ProductEvent 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductEvent.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductEvent.AttachBackingFieldToProduct">
            <summary>附加委托以将 StubProductEvent.Product 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductEvent.InitializeStub">
            <summary>初始化 type StubProductEvent 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductEvent.ProductGet">
            <summary>设置 ProductEvent.get_Product() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductEvent.ProductSetProduct">
            <summary>设置 ProductEvent.set_Product(Product value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductEvent.Product">
            <summary>设置 ProductEvent.get_Product() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubProductStandard">
            <summary>BCP.Domain.Edmx.ProductStandard 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductStandard.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductStandard.AttachBackingFieldToProductStandard1">
            <summary>附加委托以将 StubProductStandard.ProductStandard1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductStandard.AttachBackingFieldToProductStandards">
            <summary>附加委托以将 StubProductStandard.ProductStandards 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductStandard.AttachBackingFieldToProducts">
            <summary>附加委托以将 StubProductStandard.Products 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubProductStandard.InitializeStub">
            <summary>初始化 type StubProductStandard 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductStandard.ProductStandard1Get">
            <summary>设置 ProductStandard.get_ProductStandard1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductStandard.ProductStandard1SetProductStandard">
            <summary>设置 ProductStandard.set_ProductStandard1(ProductStandard value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductStandard.ProductStandardsGet">
            <summary>设置 ProductStandard.get_ProductStandards() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductStandard.ProductStandardsSetICollectionOfProductStandard">
            <summary>设置 ProductStandard.set_ProductStandards(ICollection`1&lt;ProductStandard&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductStandard.ProductsGet">
            <summary>设置 ProductStandard.get_Products() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubProductStandard.ProductsSetICollectionOfProduct">
            <summary>设置 ProductStandard.set_Products(ICollection`1&lt;Product&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductStandard.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductStandard.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductStandard.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductStandard.ProductStandard1">
            <summary>设置 ProductStandard.get_ProductStandard1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductStandard.ProductStandards">
            <summary>设置 ProductStandard.get_ProductStandards() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubProductStandard.Products">
            <summary>设置 ProductStandard.get_Products() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubRegisterDocumentType">
            <summary>BCP.Domain.Edmx.RegisterDocumentType 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubRegisterDocumentType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubRegisterDocumentType.AttachBackingFieldToOrgaRegisterDocments">
            <summary>附加委托以将 StubRegisterDocumentType.OrgaRegisterDocments 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubRegisterDocumentType.InitializeStub">
            <summary>初始化 type StubRegisterDocumentType 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubRegisterDocumentType.OrgaRegisterDocmentsGet">
            <summary>设置 RegisterDocumentType.get_OrgaRegisterDocments() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubRegisterDocumentType.OrgaRegisterDocmentsSetICollectionOfOrgaRegisterDocment">
            <summary>设置 RegisterDocumentType.set_OrgaRegisterDocments(ICollection`1&lt;OrgaRegisterDocment&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubRegisterDocumentType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubRegisterDocumentType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubRegisterDocumentType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubRegisterDocumentType.OrgaRegisterDocments">
            <summary>设置 RegisterDocumentType.get_OrgaRegisterDocments() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubSecurityinfo">
            <summary>BCP.Domain.Edmx.Securityinfo 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubSecurityinfo.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubSecurityinfo.AttachBackingFieldToDocumentManages">
            <summary>附加委托以将 StubSecurityinfo.DocumentManages 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubSecurityinfo.AttachBackingFieldToSecurityinfo1">
            <summary>附加委托以将 StubSecurityinfo.Securityinfo1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubSecurityinfo.AttachBackingFieldToSecurityinfoes">
            <summary>附加委托以将 StubSecurityinfo.Securityinfoes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubSecurityinfo.DocumentManagesGet">
            <summary>设置 Securityinfo.get_DocumentManages() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubSecurityinfo.DocumentManagesSetICollectionOfDocumentManage">
            <summary>设置 Securityinfo.set_DocumentManages(ICollection`1&lt;DocumentManage&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubSecurityinfo.InitializeStub">
            <summary>初始化 type StubSecurityinfo 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubSecurityinfo.Securityinfo1Get">
            <summary>设置 Securityinfo.get_Securityinfo1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubSecurityinfo.Securityinfo1SetSecurityinfo">
            <summary>设置 Securityinfo.set_Securityinfo1(Securityinfo value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubSecurityinfo.SecurityinfoesGet">
            <summary>设置 Securityinfo.get_Securityinfoes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubSecurityinfo.SecurityinfoesSetICollectionOfSecurityinfo">
            <summary>设置 Securityinfo.set_Securityinfoes(ICollection`1&lt;Securityinfo&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubSecurityinfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubSecurityinfo.DocumentManages">
            <summary>设置 Securityinfo.get_DocumentManages() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubSecurityinfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubSecurityinfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubSecurityinfo.Securityinfo1">
            <summary>设置 Securityinfo.get_Securityinfo1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubSecurityinfo.Securityinfoes">
            <summary>设置 Securityinfo.get_Securityinfoes() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubSpecialized">
            <summary>BCP.Domain.Edmx.Specialized 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubSpecialized.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubSpecialized.AttachBackingFieldToPostbasics">
            <summary>附加委托以将 StubSpecialized.Postbasics 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubSpecialized.AttachBackingFieldToSpecialized1">
            <summary>附加委托以将 StubSpecialized.Specialized1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubSpecialized.AttachBackingFieldToSpecializeds">
            <summary>附加委托以将 StubSpecialized.Specializeds 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubSpecialized.InitializeStub">
            <summary>初始化 type StubSpecialized 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubSpecialized.PostbasicsGet">
            <summary>设置 Specialized.get_Postbasics() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubSpecialized.PostbasicsSetICollectionOfPostRequire">
            <summary>设置 Specialized.set_Postbasics(ICollection`1&lt;PostRequire&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubSpecialized.Specialized1Get">
            <summary>设置 Specialized.get_Specialized1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubSpecialized.Specialized1SetSpecialized">
            <summary>设置 Specialized.set_Specialized1(Specialized value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubSpecialized.SpecializedsGet">
            <summary>设置 Specialized.get_Specializeds() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubSpecialized.SpecializedsSetICollectionOfSpecialized">
            <summary>设置 Specialized.set_Specializeds(ICollection`1&lt;Specialized&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubSpecialized.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubSpecialized.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubSpecialized.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubSpecialized.Postbasics">
            <summary>设置 Specialized.get_Postbasics() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubSpecialized.Specialized1">
            <summary>设置 Specialized.get_Specialized1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubSpecialized.Specializeds">
            <summary>设置 Specialized.get_Specializeds() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubSubordinate">
            <summary>BCP.Domain.Edmx.Subordinate 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubSubordinate.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubSubordinate.AttachBackingFieldToOrganizBasics">
            <summary>附加委托以将 StubSubordinate.OrganizBasics 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubSubordinate.InitializeStub">
            <summary>初始化 type StubSubordinate 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubSubordinate.OrganizBasicsGet">
            <summary>设置 Subordinate.get_OrganizBasics() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubSubordinate.OrganizBasicsSetICollectionOfOrganizBasic">
            <summary>设置 Subordinate.set_OrganizBasics(ICollection`1&lt;OrganizBasic&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubSubordinate.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubSubordinate.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubSubordinate.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubSubordinate.OrganizBasics">
            <summary>设置 Subordinate.get_OrganizBasics() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubUser">
            <summary>BCP.Domain.Edmx.User 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser.AttachBackingFieldToAuthorizations">
            <summary>附加委托以将 StubUser.Authorizations 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser.AttachBackingFieldToAuthorizations1">
            <summary>附加委托以将 StubUser.Authorizations1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser.AttachBackingFieldToCustomGroupUsers">
            <summary>附加委托以将 StubUser.CustomGroupUsers 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser.AttachBackingFieldToCustomerGoups">
            <summary>附加委托以将 StubUser.CustomerGoups 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser.AttachBackingFieldToDocReaders">
            <summary>附加委托以将 StubUser.DocReaders 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser.AttachBackingFieldToDocSenders">
            <summary>附加委托以将 StubUser.DocSenders 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser.AttachBackingFieldToEmployees">
            <summary>附加委托以将 StubUser.Employees 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser.AttachBackingFieldToGroupNames">
            <summary>附加委托以将 StubUser.GroupNames 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser.AttachBackingFieldToLoginLogs">
            <summary>附加委托以将 StubUser.LoginLogs 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser.AttachBackingFieldToMessageGroups">
            <summary>附加委托以将 StubUser.MessageGroups 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser.AttachBackingFieldToUserMessages">
            <summary>附加委托以将 StubUser.UserMessages 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser.AttachBackingFieldToUserRelateTables">
            <summary>附加委托以将 StubUser.UserRelateTables 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser.AttachBackingFieldToUserRelateTables1">
            <summary>附加委托以将 StubUser.UserRelateTables1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser.AttachBackingFieldToUser_ContacTable">
            <summary>附加委托以将 StubUser.User_ContacTable 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser.AttachBackingFieldToWorkSpaceRoles">
            <summary>附加委托以将 StubUser.WorkSpaceRoles 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.Authorizations1Get">
            <summary>设置 User.get_Authorizations1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.Authorizations1SetICollectionOfAuthorization">
            <summary>设置 User.set_Authorizations1(ICollection`1&lt;Authorization&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.AuthorizationsGet">
            <summary>设置 User.get_Authorizations() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.AuthorizationsSetICollectionOfAuthorization">
            <summary>设置 User.set_Authorizations(ICollection`1&lt;Authorization&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.ContacTableGetUser">
            <summary>设置 User.get_User_ContacTable() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.ContacTableSetUserICollectionOfUser_ContacTable">
            <summary>设置 User.set_User_ContacTable(ICollection`1&lt;User_ContacTable&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.CustomGroupUsersGet">
            <summary>设置 User.get_CustomGroupUsers() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.CustomGroupUsersSetICollectionOfCustomGroupUser">
            <summary>设置 User.set_CustomGroupUsers(ICollection`1&lt;CustomGroupUser&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.CustomerGoupsGet">
            <summary>设置 User.get_CustomerGoups() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.CustomerGoupsSetICollectionOfCustomGroup">
            <summary>设置 User.set_CustomerGoups(ICollection`1&lt;CustomGroup&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.DocReadersGet">
            <summary>设置 User.get_DocReaders() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.DocReadersSetICollectionOfDocReader">
            <summary>设置 User.set_DocReaders(ICollection`1&lt;DocReader&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.DocSendersGet">
            <summary>设置 User.get_DocSenders() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.DocSendersSetICollectionOfDocSender">
            <summary>设置 User.set_DocSenders(ICollection`1&lt;DocSender&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.EmployeesGet">
            <summary>设置 User.get_Employees() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.EmployeesSetICollectionOfEmployee">
            <summary>设置 User.set_Employees(ICollection`1&lt;Employee&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.GroupNamesGet">
            <summary>设置 User.get_GroupNames() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.GroupNamesSetICollectionOfGroup">
            <summary>设置 User.set_GroupNames(ICollection`1&lt;Group&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser.InitializeStub">
            <summary>初始化 type StubUser 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.LoginLogsGet">
            <summary>设置 User.get_LoginLogs() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.LoginLogsSetICollectionOfLoginLog">
            <summary>设置 User.set_LoginLogs(ICollection`1&lt;LoginLog&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.MessageGroupsGet">
            <summary>设置 User.get_MessageGroups() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.MessageGroupsSetICollectionOfGroupMember">
            <summary>设置 User.set_MessageGroups(ICollection`1&lt;GroupMember&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.UserMessagesGet">
            <summary>设置 User.get_UserMessages() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.UserMessagesSetICollectionOfUserMessage">
            <summary>设置 User.set_UserMessages(ICollection`1&lt;UserMessage&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.UserRelateTables1Get">
            <summary>设置 User.get_UserRelateTables1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.UserRelateTables1SetICollectionOfUserRelateTable">
            <summary>设置 User.set_UserRelateTables1(ICollection`1&lt;UserRelateTable&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.UserRelateTablesGet">
            <summary>设置 User.get_UserRelateTables() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.UserRelateTablesSetICollectionOfUserRelateTable">
            <summary>设置 User.set_UserRelateTables(ICollection`1&lt;UserRelateTable&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.WorkSpaceRolesGet">
            <summary>设置 User.get_WorkSpaceRoles() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser.WorkSpaceRolesSetICollectionOfWorkSpaceRole">
            <summary>设置 User.set_WorkSpaceRoles(ICollection`1&lt;WorkSpaceRole&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.Authorizations">
            <summary>设置 User.get_Authorizations() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.Authorizations1">
            <summary>设置 User.get_Authorizations1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.CustomGroupUsers">
            <summary>设置 User.get_CustomGroupUsers() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.CustomerGoups">
            <summary>设置 User.get_CustomerGoups() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.DocReaders">
            <summary>设置 User.get_DocReaders() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.DocSenders">
            <summary>设置 User.get_DocSenders() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.Employees">
            <summary>设置 User.get_Employees() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.GroupNames">
            <summary>设置 User.get_GroupNames() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.LoginLogs">
            <summary>设置 User.get_LoginLogs() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.MessageGroups">
            <summary>设置 User.get_MessageGroups() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.UserMessages">
            <summary>设置 User.get_UserMessages() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.UserRelateTables">
            <summary>设置 User.get_UserRelateTables() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.UserRelateTables1">
            <summary>设置 User.get_UserRelateTables1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.User_ContacTable">
            <summary>设置 User.get_User_ContacTable() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser.WorkSpaceRoles">
            <summary>设置 User.get_WorkSpaceRoles() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubUserMessage">
            <summary>BCP.Domain.Edmx.UserMessage 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUserMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUserMessage.AttachBackingFieldToUser">
            <summary>附加委托以将 StubUserMessage.User 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUserMessage.InitializeStub">
            <summary>初始化 type StubUserMessage 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUserMessage.UserGet">
            <summary>设置 UserMessage.get_User() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUserMessage.UserSetUser">
            <summary>设置 UserMessage.set_User(User value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUserMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUserMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUserMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUserMessage.User">
            <summary>设置 UserMessage.get_User() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubUserRelateTable">
            <summary>BCP.Domain.Edmx.UserRelateTable 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUserRelateTable.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUserRelateTable.AttachBackingFieldToUser">
            <summary>附加委托以将 StubUserRelateTable.User 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUserRelateTable.AttachBackingFieldToUser1">
            <summary>附加委托以将 StubUserRelateTable.User1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUserRelateTable.AttachBackingFieldToUserRelateType">
            <summary>附加委托以将 StubUserRelateTable.UserRelateType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUserRelateTable.InitializeStub">
            <summary>初始化 type StubUserRelateTable 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUserRelateTable.User1Get">
            <summary>设置 UserRelateTable.get_User1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUserRelateTable.User1SetUser">
            <summary>设置 UserRelateTable.set_User1(User value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUserRelateTable.UserGet">
            <summary>设置 UserRelateTable.get_User() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUserRelateTable.UserRelateTypeGet">
            <summary>设置 UserRelateTable.get_UserRelateType() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUserRelateTable.UserRelateTypeSetUserRelateType">
            <summary>设置 UserRelateTable.set_UserRelateType(UserRelateType value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUserRelateTable.UserSetUser">
            <summary>设置 UserRelateTable.set_User(User value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUserRelateTable.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUserRelateTable.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUserRelateTable.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUserRelateTable.User">
            <summary>设置 UserRelateTable.get_User() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUserRelateTable.User1">
            <summary>设置 UserRelateTable.get_User1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUserRelateTable.UserRelateType">
            <summary>设置 UserRelateTable.get_UserRelateType() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubUserRelateType">
            <summary>BCP.Domain.Edmx.UserRelateType 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUserRelateType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUserRelateType.AttachBackingFieldToUserRelateTables">
            <summary>附加委托以将 StubUserRelateType.UserRelateTables 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUserRelateType.AttachBackingFieldToUserRelateType1">
            <summary>附加委托以将 StubUserRelateType.UserRelateType1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUserRelateType.AttachBackingFieldToUserRelateTypes">
            <summary>附加委托以将 StubUserRelateType.UserRelateTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUserRelateType.InitializeStub">
            <summary>初始化 type StubUserRelateType 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUserRelateType.UserRelateTablesGet">
            <summary>设置 UserRelateType.get_UserRelateTables() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUserRelateType.UserRelateTablesSetICollectionOfUserRelateTable">
            <summary>设置 UserRelateType.set_UserRelateTables(ICollection`1&lt;UserRelateTable&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUserRelateType.UserRelateType1Get">
            <summary>设置 UserRelateType.get_UserRelateType1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUserRelateType.UserRelateType1SetUserRelateType">
            <summary>设置 UserRelateType.set_UserRelateType1(UserRelateType value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUserRelateType.UserRelateTypesGet">
            <summary>设置 UserRelateType.get_UserRelateTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUserRelateType.UserRelateTypesSetICollectionOfUserRelateType">
            <summary>设置 UserRelateType.set_UserRelateTypes(ICollection`1&lt;UserRelateType&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUserRelateType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUserRelateType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUserRelateType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUserRelateType.UserRelateTables">
            <summary>设置 UserRelateType.get_UserRelateTables() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUserRelateType.UserRelateType1">
            <summary>设置 UserRelateType.get_UserRelateType1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUserRelateType.UserRelateTypes">
            <summary>设置 UserRelateType.get_UserRelateTypes() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubUser_ContacTable">
            <summary>BCP.Domain.Edmx.User_ContacTable 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser_ContacTable.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser_ContacTable.AttachBackingFieldToUser">
            <summary>附加委托以将 StubUser_ContacTable.User 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubUser_ContacTable.InitializeStub">
            <summary>初始化 type StubUser_ContacTable 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser_ContacTable.UserGet">
            <summary>设置 User_ContacTable.get_User() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubUser_ContacTable.UserSetUser">
            <summary>设置 User_ContacTable.set_User(User value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser_ContacTable.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser_ContacTable.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser_ContacTable.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubUser_ContacTable.User">
            <summary>设置 User_ContacTable.get_User() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubWorkMessage">
            <summary>BCP.Domain.Edmx.WorkMessage 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkMessage.AttachBackingFieldToAuthorization">
            <summary>附加委托以将 StubWorkMessage.Authorization 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkMessage.AuthorizationGet">
            <summary>设置 WorkMessage.get_Authorization() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkMessage.AuthorizationSetAuthorization">
            <summary>设置 WorkMessage.set_Authorization(Authorization value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkMessage.InitializeStub">
            <summary>初始化 type StubWorkMessage 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkMessage.Authorization">
            <summary>设置 WorkMessage.get_Authorization() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubWorkModul">
            <summary>BCP.Domain.Edmx.WorkModul 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkModul.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkModul.AttachBackingFieldToDllFileStream">
            <summary>附加委托以将 StubWorkModul.DllFileStream 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkModul.AttachBackingFieldToModulProperties">
            <summary>附加委托以将 StubWorkModul.ModulProperties 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkModul.AttachBackingFieldToWorkModul1">
            <summary>附加委托以将 StubWorkModul.WorkModul1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkModul.AttachBackingFieldToWorkModuls">
            <summary>附加委托以将 StubWorkModul.WorkModuls 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkModul.AttachBackingFieldToWorkSpaceRoles">
            <summary>附加委托以将 StubWorkModul.WorkSpaceRoles 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkModul.DllFileStreamGet">
            <summary>设置 WorkModul.get_DllFileStream() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkModul.DllFileStreamSetDllFileStream">
            <summary>设置 WorkModul.set_DllFileStream(DllFileStream value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkModul.InitializeStub">
            <summary>初始化 type StubWorkModul 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkModul.ModulPropertiesGet">
            <summary>设置 WorkModul.get_ModulProperties() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkModul.ModulPropertiesSetICollectionOfModulProperty">
            <summary>设置 WorkModul.set_ModulProperties(ICollection`1&lt;ModulProperty&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkModul.WorkModul1Get">
            <summary>设置 WorkModul.get_WorkModul1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkModul.WorkModul1SetWorkModul">
            <summary>设置 WorkModul.set_WorkModul1(WorkModul value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkModul.WorkModulsGet">
            <summary>设置 WorkModul.get_WorkModuls() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkModul.WorkModulsSetICollectionOfWorkModul">
            <summary>设置 WorkModul.set_WorkModuls(ICollection`1&lt;WorkModul&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkModul.WorkSpaceRolesGet">
            <summary>设置 WorkModul.get_WorkSpaceRoles() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkModul.WorkSpaceRolesSetICollectionOfWorkSpaceRole">
            <summary>设置 WorkModul.set_WorkSpaceRoles(ICollection`1&lt;WorkSpaceRole&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkModul.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkModul.DllFileStream">
            <summary>设置 WorkModul.get_DllFileStream() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkModul.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkModul.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkModul.ModulProperties">
            <summary>设置 WorkModul.get_ModulProperties() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkModul.WorkModul1">
            <summary>设置 WorkModul.get_WorkModul1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkModul.WorkModuls">
            <summary>设置 WorkModul.get_WorkModuls() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkModul.WorkSpaceRoles">
            <summary>设置 WorkModul.get_WorkSpaceRoles() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubWorkSpace">
            <summary>BCP.Domain.Edmx.WorkSpace 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpace.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpace.AttachBackingFieldToDocReaders">
            <summary>附加委托以将 StubWorkSpace.DocReaders 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpace.AttachBackingFieldToIndustrySolution">
            <summary>附加委托以将 StubWorkSpace.IndustrySolution 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpace.AttachBackingFieldToWorkModul">
            <summary>附加委托以将 StubWorkSpace.WorkModul 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpace.AttachBackingFieldToWorkSpace1">
            <summary>附加委托以将 StubWorkSpace.WorkSpace1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpace.AttachBackingFieldToWorkSpaceRoles">
            <summary>附加委托以将 StubWorkSpace.WorkSpaceRoles 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpace.AttachBackingFieldToWorkSpaceTypes">
            <summary>附加委托以将 StubWorkSpace.WorkSpaceTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpace.AttachBackingFieldToWorkSpaces">
            <summary>附加委托以将 StubWorkSpace.WorkSpaces 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpace.DocReadersGet">
            <summary>设置 WorkSpace.get_DocReaders() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpace.DocReadersSetICollectionOfDocReader">
            <summary>设置 WorkSpace.set_DocReaders(ICollection`1&lt;DocReader&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpace.IndustrySolutionGet">
            <summary>设置 WorkSpace.get_IndustrySolution() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpace.IndustrySolutionSetIndustrySolution">
            <summary>设置 WorkSpace.set_IndustrySolution(IndustrySolution value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpace.InitializeStub">
            <summary>初始化 type StubWorkSpace 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpace.WorkModulGet">
            <summary>设置 WorkSpace.get_WorkModul() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpace.WorkModulSetWorkModul">
            <summary>设置 WorkSpace.set_WorkModul(WorkModul value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpace.WorkSpace1Get">
            <summary>设置 WorkSpace.get_WorkSpace1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpace.WorkSpace1SetWorkSpace">
            <summary>设置 WorkSpace.set_WorkSpace1(WorkSpace value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpace.WorkSpaceRolesGet">
            <summary>设置 WorkSpace.get_WorkSpaceRoles() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpace.WorkSpaceRolesSetICollectionOfWorkSpaceRole">
            <summary>设置 WorkSpace.set_WorkSpaceRoles(ICollection`1&lt;WorkSpaceRole&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpace.WorkSpaceTypesGet">
            <summary>设置 WorkSpace.get_WorkSpaceTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpace.WorkSpaceTypesSetICollectionOfWorkSpaceType">
            <summary>设置 WorkSpace.set_WorkSpaceTypes(ICollection`1&lt;WorkSpaceType&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpace.WorkSpacesGet">
            <summary>设置 WorkSpace.get_WorkSpaces() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpace.WorkSpacesSetICollectionOfWorkSpace">
            <summary>设置 WorkSpace.set_WorkSpaces(ICollection`1&lt;WorkSpace&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpace.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpace.DocReaders">
            <summary>设置 WorkSpace.get_DocReaders() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpace.IndustrySolution">
            <summary>设置 WorkSpace.get_IndustrySolution() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpace.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpace.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpace.WorkModul">
            <summary>设置 WorkSpace.get_WorkModul() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpace.WorkSpace1">
            <summary>设置 WorkSpace.get_WorkSpace1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpace.WorkSpaceRoles">
            <summary>设置 WorkSpace.get_WorkSpaceRoles() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpace.WorkSpaceTypes">
            <summary>设置 WorkSpace.get_WorkSpaceTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpace.WorkSpaces">
            <summary>设置 WorkSpace.get_WorkSpaces() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType">
            <summary>BCP.Domain.Edmx.WorkSpaceBaseType 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.AttachBackingFieldToDocumentManages">
            <summary>附加委托以将 StubWorkSpaceBaseType.DocumentManages 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.AttachBackingFieldToWorkSpaceBaseType1">
            <summary>附加委托以将 StubWorkSpaceBaseType.WorkSpaceBaseType1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.AttachBackingFieldToWorkSpaceBaseTypes">
            <summary>附加委托以将 StubWorkSpaceBaseType.WorkSpaceBaseTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.AttachBackingFieldToWorkSpaceTypes">
            <summary>附加委托以将 StubWorkSpaceBaseType.WorkSpaceTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.DocumentManagesGet">
            <summary>设置 WorkSpaceBaseType.get_DocumentManages() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.DocumentManagesSetICollectionOfDocumentManage">
            <summary>设置 WorkSpaceBaseType.set_DocumentManages(ICollection`1&lt;DocumentManage&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.InitializeStub">
            <summary>初始化 type StubWorkSpaceBaseType 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.WorkSpaceBaseType1Get">
            <summary>设置 WorkSpaceBaseType.get_WorkSpaceBaseType1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.WorkSpaceBaseType1SetWorkSpaceBaseType">
            <summary>设置 WorkSpaceBaseType.set_WorkSpaceBaseType1(WorkSpaceBaseType value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.WorkSpaceBaseTypesGet">
            <summary>设置 WorkSpaceBaseType.get_WorkSpaceBaseTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.WorkSpaceBaseTypesSetICollectionOfWorkSpaceBaseType">
            <summary>设置 WorkSpaceBaseType.set_WorkSpaceBaseTypes(ICollection`1&lt;WorkSpaceBaseType&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.WorkSpaceTypesGet">
            <summary>设置 WorkSpaceBaseType.get_WorkSpaceTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.WorkSpaceTypesSetICollectionOfWorkSpaceType">
            <summary>设置 WorkSpaceBaseType.set_WorkSpaceTypes(ICollection`1&lt;WorkSpaceType&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.DocumentManages">
            <summary>设置 WorkSpaceBaseType.get_DocumentManages() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.WorkSpaceBaseType1">
            <summary>设置 WorkSpaceBaseType.get_WorkSpaceBaseType1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.WorkSpaceBaseTypes">
            <summary>设置 WorkSpaceBaseType.get_WorkSpaceBaseTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceBaseType.WorkSpaceTypes">
            <summary>设置 WorkSpaceBaseType.get_WorkSpaceTypes() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole">
            <summary>BCP.Domain.Edmx.WorkSpaceRole 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.AttachBackingFieldToOrganization">
            <summary>附加委托以将 StubWorkSpaceRole.Organization 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.AttachBackingFieldToUser">
            <summary>附加委托以将 StubWorkSpaceRole.User 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.AttachBackingFieldToWorkModul">
            <summary>附加委托以将 StubWorkSpaceRole.WorkModul 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.AttachBackingFieldToWorkSpace">
            <summary>附加委托以将 StubWorkSpaceRole.WorkSpace 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.InitializeStub">
            <summary>初始化 type StubWorkSpaceRole 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.OrganizationGet">
            <summary>设置 WorkSpaceRole.get_Organization() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.OrganizationSetOrganization">
            <summary>设置 WorkSpaceRole.set_Organization(Organization value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.UserGet">
            <summary>设置 WorkSpaceRole.get_User() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.UserSetUser">
            <summary>设置 WorkSpaceRole.set_User(User value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.WorkModulGet">
            <summary>设置 WorkSpaceRole.get_WorkModul() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.WorkModulSetWorkModul">
            <summary>设置 WorkSpaceRole.set_WorkModul(WorkModul value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.WorkSpaceGet">
            <summary>设置 WorkSpaceRole.get_WorkSpace() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.WorkSpaceSetWorkSpace">
            <summary>设置 WorkSpaceRole.set_WorkSpace(WorkSpace value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.Organization">
            <summary>设置 WorkSpaceRole.get_Organization() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.User">
            <summary>设置 WorkSpaceRole.get_User() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.WorkModul">
            <summary>设置 WorkSpaceRole.get_WorkModul() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceRole.WorkSpace">
            <summary>设置 WorkSpaceRole.get_WorkSpace() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubWorkSpaceType">
            <summary>BCP.Domain.Edmx.WorkSpaceType 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpaceType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpaceType.AttachBackingFieldToWorkSpace">
            <summary>附加委托以将 StubWorkSpaceType.WorkSpace 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpaceType.AttachBackingFieldToWorkSpaceBaseType">
            <summary>附加委托以将 StubWorkSpaceType.WorkSpaceBaseType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubWorkSpaceType.InitializeStub">
            <summary>初始化 type StubWorkSpaceType 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceType.WorkSpaceBaseTypeGet">
            <summary>设置 WorkSpaceType.get_WorkSpaceBaseType() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceType.WorkSpaceBaseTypeSetWorkSpaceBaseType">
            <summary>设置 WorkSpaceType.set_WorkSpaceBaseType(WorkSpaceBaseType value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceType.WorkSpaceGet">
            <summary>设置 WorkSpaceType.get_WorkSpace() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubWorkSpaceType.WorkSpaceSetWorkSpace">
            <summary>设置 WorkSpaceType.set_WorkSpace(WorkSpace value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceType.WorkSpace">
            <summary>设置 WorkSpaceType.get_WorkSpace() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubWorkSpaceType.WorkSpaceBaseType">
            <summary>设置 WorkSpaceType.get_WorkSpaceBaseType() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubZipCode">
            <summary>BCP.Domain.Edmx.ZipCode 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubZipCode.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubZipCode.InitializeStub">
            <summary>初始化 type StubZipCode 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubZipCode.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubZipCode.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubZipCode.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubphysicalAsset">
            <summary>BCP.Domain.Edmx.physicalAsset 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubphysicalAsset.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubphysicalAsset.AssetMaintenancesGet">
            <summary>设置 physicalAsset.get_AssetMaintenances() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubphysicalAsset.AssetMaintenancesSetICollectionOfAssetMaintenance">
            <summary>设置 physicalAsset.set_AssetMaintenances(ICollection`1&lt;AssetMaintenance&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubphysicalAsset.AssetUsesGet">
            <summary>设置 physicalAsset.get_AssetUses() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubphysicalAsset.AssetUsesSetICollectionOfAssetUse">
            <summary>设置 physicalAsset.set_AssetUses(ICollection`1&lt;AssetUse&gt; value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubphysicalAsset.AttachBackingFieldToAssetMaintenances">
            <summary>附加委托以将 StubphysicalAsset.AssetMaintenances 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubphysicalAsset.AttachBackingFieldToAssetUses">
            <summary>附加委托以将 StubphysicalAsset.AssetUses 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubphysicalAsset.AttachBackingFieldToOrganization">
            <summary>附加委托以将 StubphysicalAsset.Organization 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubphysicalAsset.AttachBackingFieldToOrganization1">
            <summary>附加委托以将 StubphysicalAsset.Organization1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubphysicalAsset.AttachBackingFieldToOrganizationAssetTypes">
            <summary>附加委托以将 StubphysicalAsset.OrganizationAssetTypes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubphysicalAsset.AttachBackingFieldToProduct">
            <summary>附加委托以将 StubphysicalAsset.Product 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubphysicalAsset.InitializeStub">
            <summary>初始化 type StubphysicalAsset 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubphysicalAsset.Organization1Get">
            <summary>设置 physicalAsset.get_Organization1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubphysicalAsset.Organization1SetOrganization">
            <summary>设置 physicalAsset.set_Organization1(Organization value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubphysicalAsset.OrganizationAssetTypesGet">
            <summary>设置 physicalAsset.get_OrganizationAssetTypes() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubphysicalAsset.OrganizationAssetTypesSetICollectionOfOrganizationAssetType">
            <summary>设置 physicalAsset.set_OrganizationAssetTypes(ICollection`1&lt;OrganizationAssetType&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubphysicalAsset.OrganizationGet">
            <summary>设置 physicalAsset.get_Organization() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubphysicalAsset.OrganizationSetOrganization">
            <summary>设置 physicalAsset.set_Organization(Organization value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubphysicalAsset.ProductGet">
            <summary>设置 physicalAsset.get_Product() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubphysicalAsset.ProductSetProduct">
            <summary>设置 physicalAsset.set_Product(Product value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubphysicalAsset.AssetMaintenances">
            <summary>设置 physicalAsset.get_AssetMaintenances() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubphysicalAsset.AssetUses">
            <summary>设置 physicalAsset.get_AssetUses() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubphysicalAsset.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubphysicalAsset.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubphysicalAsset.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubphysicalAsset.Organization">
            <summary>设置 physicalAsset.get_Organization() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubphysicalAsset.Organization1">
            <summary>设置 physicalAsset.get_Organization1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubphysicalAsset.OrganizationAssetTypes">
            <summary>设置 physicalAsset.get_OrganizationAssetTypes() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubphysicalAsset.Product">
            <summary>设置 physicalAsset.get_Product() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Edmx.Fakes.StubworkTask">
            <summary>BCP.Domain.Edmx.workTask 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubworkTask.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubworkTask.AttachBackingFieldToDocumentContents">
            <summary>附加委托以将 StubworkTask.DocumentContents 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubworkTask.AttachBackingFieldToDocumentManage">
            <summary>附加委托以将 StubworkTask.DocumentManage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubworkTask.AttachBackingFieldToworkTask1">
            <summary>附加委托以将 StubworkTask.workTask1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubworkTask.AttachBackingFieldToworkTasks">
            <summary>附加委托以将 StubworkTask.workTasks 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubworkTask.DocumentContentsGet">
            <summary>设置 workTask.get_DocumentContents() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubworkTask.DocumentContentsSetICollectionOfDocumentContent">
            <summary>设置 workTask.set_DocumentContents(ICollection`1&lt;DocumentContent&gt; value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubworkTask.DocumentManageGet">
            <summary>设置 workTask.get_DocumentManage() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubworkTask.DocumentManageSetDocumentManage">
            <summary>设置 workTask.set_DocumentManage(DocumentManage value) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Edmx.Fakes.StubworkTask.InitializeStub">
            <summary>初始化 type StubworkTask 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubworkTask.WorkTask1Get">
            <summary>设置 workTask.get_workTask1() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubworkTask.WorkTask1SetworkTask">
            <summary>设置 workTask.set_workTask1(workTask value) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubworkTask.WorkTasksGet">
            <summary>设置 workTask.get_workTasks() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Edmx.Fakes.StubworkTask.WorkTasksSetICollectionOfworkTask">
            <summary>设置 workTask.set_workTasks(ICollection`1&lt;workTask&gt; value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubworkTask.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubworkTask.DocumentContents">
            <summary>设置 workTask.get_DocumentContents() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubworkTask.DocumentManage">
            <summary>设置 workTask.get_DocumentManage() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubworkTask.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubworkTask.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubworkTask.workTask1">
            <summary>设置 workTask.get_workTask1() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Edmx.Fakes.StubworkTask.workTasks">
            <summary>设置 workTask.get_workTasks() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimAdministrativecodeRepository">
            <summary>BCP.Domain.AdministrativecodeRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAdministrativecodeRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAdministrativecodeRepository.#ctor(BCP.Domain.AdministrativecodeRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAdministrativecodeRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAdministrativecodeRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAdministrativecodeRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.Administrativecode,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAdministrativecodeRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.Administrativecode,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAdministrativecodeRepository.Bind(BCP.Domain.IAdministrativecodeRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimAdministrativecodeRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimAdministrativecodeRepository.Constructor">
            <summary>设置 AdministrativecodeRepository.AdministrativecodeRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimAdministrativecodeRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimAssetBaseTypeRepository">
            <summary>BCP.Domain.AssetBaseTypeRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetBaseTypeRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetBaseTypeRepository.#ctor(BCP.Domain.AssetBaseTypeRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetBaseTypeRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetBaseTypeRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetBaseTypeRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.AssetBaseType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetBaseTypeRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.AssetBaseType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetBaseTypeRepository.Bind(BCP.Domain.IAssetBaseTypeRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimAssetBaseTypeRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimAssetBaseTypeRepository.Constructor">
            <summary>设置 AssetBaseTypeRepository.AssetBaseTypeRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimAssetBaseTypeRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimAssetMaintenanceRepository">
            <summary>BCP.Domain.AssetMaintenanceRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetMaintenanceRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetMaintenanceRepository.#ctor(BCP.Domain.AssetMaintenanceRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetMaintenanceRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetMaintenanceRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetMaintenanceRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.AssetMaintenance,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetMaintenanceRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.AssetMaintenance,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetMaintenanceRepository.Bind(BCP.Domain.IAssetMaintenanceRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimAssetMaintenanceRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimAssetMaintenanceRepository.Constructor">
            <summary>设置 AssetMaintenanceRepository.AssetMaintenanceRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimAssetMaintenanceRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimAssetUseRepository">
            <summary>BCP.Domain.AssetUseRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetUseRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetUseRepository.#ctor(BCP.Domain.AssetUseRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetUseRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetUseRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetUseRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.AssetUse,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetUseRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.AssetUse,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAssetUseRepository.Bind(BCP.Domain.IAssetUseRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimAssetUseRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimAssetUseRepository.Constructor">
            <summary>设置 AssetUseRepository.AssetUseRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimAssetUseRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimAuthorizationRepository">
            <summary>BCP.Domain.AuthorizationRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAuthorizationRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAuthorizationRepository.#ctor(BCP.Domain.AuthorizationRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAuthorizationRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAuthorizationRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAuthorizationRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.Authorization,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAuthorizationRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.Authorization,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimAuthorizationRepository.Bind(BCP.Domain.IAuthorizationRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimAuthorizationRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimAuthorizationRepository.Constructor">
            <summary>设置 AuthorizationRepository.AuthorizationRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimAuthorizationRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimBussnessVerRepository">
            <summary>BCP.Domain.BussnessVerRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimBussnessVerRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimBussnessVerRepository.#ctor(BCP.Domain.BussnessVerRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimBussnessVerRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimBussnessVerRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimBussnessVerRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.BussnessVer,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimBussnessVerRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.BussnessVer,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimBussnessVerRepository.Bind(BCP.Domain.IBussnessVerRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimBussnessVerRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimBussnessVerRepository.Constructor">
            <summary>设置 BussnessVerRepository.BussnessVerRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimBussnessVerRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimCustomCategoryRepository">
            <summary>BCP.Domain.CustomCategoryRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomCategoryRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomCategoryRepository.#ctor(BCP.Domain.CustomCategoryRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomCategoryRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomCategoryRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomCategoryRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.CustomCategory,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomCategoryRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.CustomCategory,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomCategoryRepository.Bind(BCP.Domain.ICustomCategoryRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimCustomCategoryRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimCustomCategoryRepository.Constructor">
            <summary>设置 CustomCategoryRepository.CustomCategoryRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimCustomCategoryRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimCustomGroupRepository">
            <summary>BCP.Domain.CustomGroupRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomGroupRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomGroupRepository.#ctor(BCP.Domain.CustomGroupRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomGroupRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomGroupRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomGroupRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.CustomGroup,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomGroupRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.CustomGroup,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomGroupRepository.Bind(BCP.Domain.ICustomGroupRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimCustomGroupRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimCustomGroupRepository.Constructor">
            <summary>设置 CustomGroupRepository.CustomGroupRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimCustomGroupRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimCustomGroupUserRepository">
            <summary>BCP.Domain.CustomGroupUserRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomGroupUserRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomGroupUserRepository.#ctor(BCP.Domain.CustomGroupUserRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomGroupUserRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomGroupUserRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomGroupUserRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.CustomGroupUser,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomGroupUserRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.CustomGroupUser,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomGroupUserRepository.Bind(BCP.Domain.ICustomGroupUserRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimCustomGroupUserRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimCustomGroupUserRepository.Constructor">
            <summary>设置 CustomGroupUserRepository.CustomGroupUserRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimCustomGroupUserRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimCustomTabDataRepository">
            <summary>BCP.Domain.CustomTabDataRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomTabDataRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomTabDataRepository.#ctor(BCP.Domain.CustomTabDataRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomTabDataRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomTabDataRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomTabDataRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.CustomTabData,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomTabDataRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.CustomTabData,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomTabDataRepository.Bind(BCP.Domain.ICustomTabDataRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimCustomTabDataRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimCustomTabDataRepository.Constructor">
            <summary>设置 CustomTabDataRepository.CustomTabDataRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimCustomTabDataRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimCustomTableRepository">
            <summary>BCP.Domain.CustomTableRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomTableRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomTableRepository.#ctor(BCP.Domain.CustomTableRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomTableRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomTableRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomTableRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.CustomTable,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomTableRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.CustomTable,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomTableRepository.Bind(BCP.Domain.ICustomTableRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimCustomTableRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimCustomTableRepository.Constructor">
            <summary>设置 CustomTableRepository.CustomTableRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimCustomTableRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimCustomerGroupMapper">
            <summary>BCP.Domain.CustomerGroupMapper 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomerGroupMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomerGroupMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimCustomerGroupMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimCustomerGroupMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimCustomerGroupMapper.ConvertToCustomGroupDTOCustomGroupICustomGroupUserRepository">
            <summary>设置 CustomerGroupMapper.ConvertToCustomGroupDTO(CustomGroup customgroup, ICustomGroupUserRepository customGroupUserRepository) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimCustomerGroupMapper.ConvertToCustomGroupDTOIEnumerableOfCustomGroupICustomGroupUserRepository">
            <summary>设置 CustomerGroupMapper.ConvertToCustomGroupDTO(IEnumerable`1&lt;CustomGroup&gt; customgroups, ICustomGroupUserRepository customGroupUserRepository) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDllFileStreamRepository">
            <summary>BCP.Domain.DllFileStreamRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDllFileStreamRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDllFileStreamRepository.#ctor(BCP.Domain.DllFileStreamRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDllFileStreamRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDllFileStreamRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDllFileStreamRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.DllFileStream,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDllFileStreamRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.DllFileStream,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDllFileStreamRepository.Bind(BCP.Domain.IDllFileStreamRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDllFileStreamRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDllFileStreamRepository.Constructor">
            <summary>设置 DllFileStreamRepository.DllFileStreamRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDllFileStreamRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocCheckStateRepository">
            <summary>BCP.Domain.DocCheckStateRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocCheckStateRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocCheckStateRepository.#ctor(BCP.Domain.DocCheckStateRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocCheckStateRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocCheckStateRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocCheckStateRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.DocCheckState,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocCheckStateRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.DocCheckState,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocCheckStateRepository.Bind(BCP.Domain.IDocCheckStateRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocCheckStateRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocCheckStateRepository.Constructor">
            <summary>设置 DocCheckStateRepository.DocCheckStateRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocCheckStateRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocComentRepository">
            <summary>BCP.Domain.DocComentRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocComentRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocComentRepository.#ctor(BCP.Domain.DocComentRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocComentRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocComentRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocComentRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.DocComent,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocComentRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.DocComent,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocComentRepository.Bind(BCP.Domain.IDocComentRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocComentRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocComentRepository.Constructor">
            <summary>设置 DocComentRepository.DocComentRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocComentRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocLocationRepository">
            <summary>BCP.Domain.DocLocationRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocLocationRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocLocationRepository.#ctor(BCP.Domain.DocLocationRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocLocationRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocLocationRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocLocationRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.DocLocation,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocLocationRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.DocLocation,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocLocationRepository.Bind(BCP.Domain.IDocLocationRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocLocationRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocLocationRepository.Constructor">
            <summary>设置 DocLocationRepository.DocLocationRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocLocationRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocManageStateRepository">
            <summary>BCP.Domain.DocManageStateRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocManageStateRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocManageStateRepository.#ctor(BCP.Domain.DocManageStateRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocManageStateRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocManageStateRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocManageStateRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.DocManageState,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocManageStateRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.DocManageState,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocManageStateRepository.Bind(BCP.Domain.IDocManageStateRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocManageStateRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocManageStateRepository.Constructor">
            <summary>设置 DocManageStateRepository.DocManageStateRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocManageStateRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocReaderRepository">
            <summary>BCP.Domain.DocReaderRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocReaderRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocReaderRepository.#ctor(BCP.Domain.DocReaderRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocReaderRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocReaderRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocReaderRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.DocReader,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocReaderRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.DocReader,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocReaderRepository.Bind(BCP.Domain.IDocReaderRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocReaderRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocReaderRepository.Constructor">
            <summary>设置 DocReaderRepository.DocReaderRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocReaderRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocSenderRepository">
            <summary>BCP.Domain.DocSenderRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocSenderRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocSenderRepository.#ctor(BCP.Domain.DocSenderRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocSenderRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocSenderRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocSenderRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.DocSender,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocSenderRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.DocSender,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocSenderRepository.Bind(BCP.Domain.IDocSenderRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocSenderRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocSenderRepository.Constructor">
            <summary>设置 DocSenderRepository.DocSenderRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocSenderRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocTypeRepository">
            <summary>BCP.Domain.DocTypeRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocTypeRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocTypeRepository.#ctor(BCP.Domain.DocTypeRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocTypeRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocTypeRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocTypeRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.DocType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocTypeRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.DocType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocTypeRepository.Bind(BCP.Domain.IDocTypeRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocTypeRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocTypeRepository.Constructor">
            <summary>设置 DocTypeRepository.DocTypeRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocTypeRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocumentContentRepository">
            <summary>BCP.Domain.DocumentContentRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentContentRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentContentRepository.#ctor(BCP.Domain.DocumentContentRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentContentRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentContentRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentContentRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.DocumentContent,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentContentRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.DocumentContent,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentContentRepository.Bind(BCP.Domain.IDocumentContentRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocumentContentRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocumentContentRepository.Constructor">
            <summary>设置 DocumentContentRepository.DocumentContentRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocumentContentRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocumentManageRepository">
            <summary>BCP.Domain.DocumentManageRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentManageRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentManageRepository.#ctor(BCP.Domain.DocumentManageRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentManageRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentManageRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentManageRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.DocumentManage,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentManageRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.DocumentManage,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentManageRepository.Bind(BCP.Domain.IDocumentManageRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocumentManageRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocumentManageRepository.Constructor">
            <summary>设置 DocumentManageRepository.DocumentManageRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocumentManageRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocumentTypeRepository">
            <summary>BCP.Domain.DocumentTypeRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentTypeRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentTypeRepository.#ctor(BCP.Domain.DocumentTypeRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentTypeRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentTypeRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentTypeRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.DocumentType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentTypeRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.DocumentType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimDocumentTypeRepository.Bind(BCP.Domain.IDocumentTypeRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocumentTypeRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimDocumentTypeRepository.Constructor">
            <summary>设置 DocumentTypeRepository.DocumentTypeRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimDocumentTypeRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimEFRepository`2">
            <summary>BCP.Domain.EFRepository`2 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEFRepository`2.#ctor(BCP.Domain.EFRepository{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEFRepository`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEFRepository`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEFRepository`2.Bind(BCP.Common.IReadOnlyRepository{`0,`1})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEFRepository`2.Bind(BCP.Common.IRepository{`0,`1})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.AddT0">
            <summary>设置 EFRepository`2.Add(!0 entity) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.Constructor">
            <summary>设置 EFRepository`2.EFRepository`2() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.GetAll">
            <summary>设置 EFRepository`2.GetAll() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 EFRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.GetByKeyT1">
            <summary>设置 EFRepository`2.GetByKey(!1 key) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.RemoveCascadedT0">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.RemoveCascadedT1">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.RemoveNonCascadedT0">
            <summary>设置 EFRepository`2.RemoveNonCascaded(!0 entity) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.RemoveNonCascadedT1">
            <summary>设置 EFRepository`2.RemoveNonCascaded(!1 t) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.SaveT0">
            <summary>设置 EFRepository`2.Save(!0 entity) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.UnitOfWorkGet">
            <summary>设置 EFRepository`2.get_UnitOfWork() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.UnitOfWorkSetIUnitOfWork">
            <summary>设置 EFRepository`2.set_UnitOfWork(IUnitOfWork value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimEFRepository`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.AllInstances.AddT0">
            <summary>设置 EFRepository`2.Add(!0 entity) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.AllInstances.GetAll">
            <summary>设置 EFRepository`2.GetAll() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.AllInstances.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 EFRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.AllInstances.GetByKeyT1">
            <summary>设置 EFRepository`2.GetByKey(!1 key) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.AllInstances.RemoveCascadedT0">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.AllInstances.RemoveCascadedT1">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.AllInstances.RemoveNonCascadedT0">
            <summary>设置 EFRepository`2.RemoveNonCascaded(!0 entity) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.AllInstances.RemoveNonCascadedT1">
            <summary>设置 EFRepository`2.RemoveNonCascaded(!1 t) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.AllInstances.SaveT0">
            <summary>设置 EFRepository`2.Save(!0 entity) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.AllInstances.UnitOfWorkGet">
            <summary>设置 EFRepository`2.get_UnitOfWork() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFRepository`2.AllInstances.UnitOfWorkSetIUnitOfWork">
            <summary>设置 EFRepository`2.set_UnitOfWork(IUnitOfWork value) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimEFUnitOfWork">
            <summary>BCP.Domain.EFUnitOfWork 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEFUnitOfWork.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEFUnitOfWork.#ctor(BCP.Domain.EFUnitOfWork)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEFUnitOfWork.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEFUnitOfWork.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEFUnitOfWork.Bind(BCP.Common.IUnitOfWork)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEFUnitOfWork.Bind(BCP.Domain.IEFUnitOfWork)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEFUnitOfWork.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFUnitOfWork.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFUnitOfWork.Commit">
            <summary>设置 EFUnitOfWork.Commit() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFUnitOfWork.Constructor">
            <summary>设置 EFUnitOfWork.EFUnitOfWork() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFUnitOfWork.DbContextGet">
            <summary>设置 EFUnitOfWork.get_DbContext() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFUnitOfWork.Dispose">
            <summary>设置 EFUnitOfWork.Dispose() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFUnitOfWork.RollBack">
            <summary>设置 EFUnitOfWork.RollBack() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFUnitOfWork._RollBackb__0DbEntityEntry">
            <summary>设置 EFUnitOfWork.&lt;RollBack&gt;b__0(DbEntityEntry it) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimEFUnitOfWork.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFUnitOfWork.AllInstances.Commit">
            <summary>设置 EFUnitOfWork.Commit() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFUnitOfWork.AllInstances.DbContextGet">
            <summary>设置 EFUnitOfWork.get_DbContext() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFUnitOfWork.AllInstances.Dispose">
            <summary>设置 EFUnitOfWork.Dispose() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEFUnitOfWork.AllInstances.RollBack">
            <summary>设置 EFUnitOfWork.RollBack() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimEmployeeRepository">
            <summary>BCP.Domain.EmployeeRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEmployeeRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEmployeeRepository.#ctor(BCP.Domain.EmployeeRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEmployeeRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEmployeeRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEmployeeRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.Employee,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEmployeeRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.Employee,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimEmployeeRepository.Bind(BCP.Domain.IEmployeeRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEmployeeRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimEmployeeRepository.Constructor">
            <summary>设置 EmployeeRepository.EmployeeRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimEmployeeRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimGroupMapper">
            <summary>BCP.Domain.GroupMapper 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimGroupMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimGroupMapper.ConvertToGroupDTOGroup">
            <summary>设置 GroupMapper.ConvertToGroupDTO(Group group) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimGroupMapper.ConvertToGroupDTOIEnumerableOfGroup">
            <summary>设置 GroupMapper.ConvertToGroupDTO(IEnumerable`1&lt;Group&gt; groups) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimGroupMapper.ConvertToGroupMemberDTOGroupMember">
            <summary>设置 GroupMapper.ConvertToGroupMemberDTO(GroupMember groupMember) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimGroupMapper.ConvertToGroupMemberDTOIEnumerableOfGroupMember">
            <summary>设置 GroupMapper.ConvertToGroupMemberDTO(IEnumerable`1&lt;GroupMember&gt; groupMembers) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimGroupMemberRepository">
            <summary>BCP.Domain.GroupMemberRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupMemberRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupMemberRepository.#ctor(BCP.Domain.GroupMemberRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupMemberRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupMemberRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupMemberRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.GroupMember,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupMemberRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.GroupMember,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupMemberRepository.Bind(BCP.Domain.IGroupMemberRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimGroupMemberRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimGroupMemberRepository.Constructor">
            <summary>设置 GroupMemberRepository.GroupMemberRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimGroupMemberRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimGroupMessagerRepository">
            <summary>BCP.Domain.GroupMessagerRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupMessagerRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupMessagerRepository.#ctor(BCP.Domain.GroupMessagerRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupMessagerRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupMessagerRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupMessagerRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.GroupMessager,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupMessagerRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.GroupMessager,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupMessagerRepository.Bind(BCP.Domain.IGroupMessagerRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimGroupMessagerRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimGroupMessagerRepository.Constructor">
            <summary>设置 GroupMessagerRepository.GroupMessagerRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimGroupMessagerRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimGroupRepository">
            <summary>BCP.Domain.GroupRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupRepository.#ctor(BCP.Domain.GroupRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.Group,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.Group,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimGroupRepository.Bind(BCP.Domain.IGroupRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimGroupRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimGroupRepository.Constructor">
            <summary>设置 GroupRepository.GroupRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimGroupRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimIPCodeRepository">
            <summary>BCP.Domain.IPCodeRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIPCodeRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIPCodeRepository.#ctor(BCP.Domain.IPCodeRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIPCodeRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIPCodeRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIPCodeRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.IPCode,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIPCodeRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.IPCode,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIPCodeRepository.Bind(BCP.Domain.IIPCodeRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimIPCodeRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimIPCodeRepository.Constructor">
            <summary>设置 IPCodeRepository.IPCodeRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimIPCodeRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimIndustryCodeRepository">
            <summary>BCP.Domain.IndustryCodeRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIndustryCodeRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIndustryCodeRepository.#ctor(BCP.Domain.IndustryCodeRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIndustryCodeRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIndustryCodeRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIndustryCodeRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.IndustryCode,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIndustryCodeRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.IndustryCode,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIndustryCodeRepository.Bind(BCP.Domain.IIndustryCodeRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimIndustryCodeRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimIndustryCodeRepository.Constructor">
            <summary>设置 IndustryCodeRepository.IndustryCodeRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimIndustryCodeRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimIndustrySolutionRepository">
            <summary>BCP.Domain.IndustrySolutionRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIndustrySolutionRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIndustrySolutionRepository.#ctor(BCP.Domain.IndustrySolutionRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIndustrySolutionRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIndustrySolutionRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIndustrySolutionRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.IndustrySolution,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIndustrySolutionRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.IndustrySolution,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimIndustrySolutionRepository.Bind(BCP.Domain.IIndustrySolutionRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimIndustrySolutionRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimIndustrySolutionRepository.Constructor">
            <summary>设置 IndustrySolutionRepository.IndustrySolutionRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimIndustrySolutionRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimJobChangeRepository">
            <summary>BCP.Domain.JobChangeRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimJobChangeRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimJobChangeRepository.#ctor(BCP.Domain.JobChangeRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimJobChangeRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimJobChangeRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimJobChangeRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.JobChange,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimJobChangeRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.JobChange,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimJobChangeRepository.Bind(BCP.Domain.IJobChangeRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimJobChangeRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimJobChangeRepository.Constructor">
            <summary>设置 JobChangeRepository.JobChangeRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimJobChangeRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimLoginLogRepository">
            <summary>BCP.Domain.LoginLogRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimLoginLogRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimLoginLogRepository.#ctor(BCP.Domain.LoginLogRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimLoginLogRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimLoginLogRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimLoginLogRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.LoginLog,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimLoginLogRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.LoginLog,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimLoginLogRepository.Bind(BCP.Domain.ILoginLogRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimLoginLogRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimLoginLogRepository.Constructor">
            <summary>设置 LoginLogRepository.LoginLogRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimLoginLogRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimMapperHelper">
            <summary>BCP.Domain.MapperHelper 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimMapperHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimMapperHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimMapperHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimMapperHelper.MapperToOf2IEnumerableOfM0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1}})">
            <summary>设置 MapperHelper.MapperTo(IEnumerable`1&lt;!!0&gt; source) 的 填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimMapperHelper.MapperToOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1})">
            <summary>设置 MapperHelper.MapperTo(!!0 source) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimMapperHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimModulPropertyRepository">
            <summary>BCP.Domain.ModulPropertyRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimModulPropertyRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimModulPropertyRepository.#ctor(BCP.Domain.ModulPropertyRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimModulPropertyRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimModulPropertyRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimModulPropertyRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.ModulProperty,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimModulPropertyRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.ModulProperty,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimModulPropertyRepository.Bind(BCP.Domain.IModulPropertyRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimModulPropertyRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimModulPropertyRepository.Constructor">
            <summary>设置 ModulPropertyRepository.ModulPropertyRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimModulPropertyRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOperationDetailRepository">
            <summary>BCP.Domain.OperationDetailRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOperationDetailRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOperationDetailRepository.#ctor(BCP.Domain.OperationDetailRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOperationDetailRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOperationDetailRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOperationDetailRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.OperationDetail,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOperationDetailRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.OperationDetail,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOperationDetailRepository.Bind(BCP.Domain.IOperationDetailRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOperationDetailRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOperationDetailRepository.Constructor">
            <summary>设置 OperationDetailRepository.OperationDetailRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOperationDetailRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOperationEventRepository">
            <summary>BCP.Domain.OperationEventRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOperationEventRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOperationEventRepository.#ctor(BCP.Domain.OperationEventRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOperationEventRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOperationEventRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOperationEventRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.OperationEvent,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOperationEventRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.OperationEvent,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOperationEventRepository.Bind(BCP.Domain.IOperationEventRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOperationEventRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOperationEventRepository.Constructor">
            <summary>设置 OperationEventRepository.OperationEventRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOperationEventRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrgaRegisterDocmentRepository">
            <summary>BCP.Domain.OrgaRegisterDocmentRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrgaRegisterDocmentRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrgaRegisterDocmentRepository.#ctor(BCP.Domain.OrgaRegisterDocmentRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrgaRegisterDocmentRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrgaRegisterDocmentRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrgaRegisterDocmentRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.OrgaRegisterDocment,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrgaRegisterDocmentRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.OrgaRegisterDocment,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrgaRegisterDocmentRepository.Bind(BCP.Domain.IOrgaRegisterDocmentRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrgaRegisterDocmentRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrgaRegisterDocmentRepository.Constructor">
            <summary>设置 OrgaRegisterDocmentRepository.OrgaRegisterDocmentRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrgaRegisterDocmentRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganicInvestorRepository">
            <summary>BCP.Domain.OrganicInvestorRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganicInvestorRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganicInvestorRepository.#ctor(BCP.Domain.OrganicInvestorRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganicInvestorRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganicInvestorRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganicInvestorRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.OrganicInvestor,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganicInvestorRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.OrganicInvestor,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganicInvestorRepository.Bind(BCP.Domain.IOrganicInvestorRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganicInvestorRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganicInvestorRepository.Constructor">
            <summary>设置 OrganicInvestorRepository.OrganicInvestorRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganicInvestorRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganizBasicRepository">
            <summary>BCP.Domain.OrganizBasicRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizBasicRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizBasicRepository.#ctor(BCP.Domain.OrganizBasicRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizBasicRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizBasicRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizBasicRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.OrganizBasic,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizBasicRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.OrganizBasic,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizBasicRepository.Bind(BCP.Domain.IOrganizBasicRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganizBasicRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganizBasicRepository.Constructor">
            <summary>设置 OrganizBasicRepository.OrganizBasicRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganizBasicRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganizationAssetTypeRepository">
            <summary>BCP.Domain.OrganizationAssetTypeRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationAssetTypeRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationAssetTypeRepository.#ctor(BCP.Domain.OrganizationAssetTypeRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationAssetTypeRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationAssetTypeRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationAssetTypeRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.OrganizationAssetType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationAssetTypeRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.OrganizationAssetType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationAssetTypeRepository.Bind(BCP.Domain.IOrganizationAssetTypeRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganizationAssetTypeRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganizationAssetTypeRepository.Constructor">
            <summary>设置 OrganizationAssetTypeRepository.OrganizationAssetTypeRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganizationAssetTypeRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganizationCustomTypeRepository">
            <summary>BCP.Domain.OrganizationCustomTypeRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationCustomTypeRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationCustomTypeRepository.#ctor(BCP.Domain.OrganizationCustomTypeRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationCustomTypeRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationCustomTypeRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationCustomTypeRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.OrganizationCustomType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationCustomTypeRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.OrganizationCustomType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationCustomTypeRepository.Bind(BCP.Domain.IOrganizationCustomTypeRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganizationCustomTypeRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganizationCustomTypeRepository.Constructor">
            <summary>设置 OrganizationCustomTypeRepository.OrganizationCustomTypeRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganizationCustomTypeRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganizationEventRepository">
            <summary>BCP.Domain.OrganizationEventRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationEventRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationEventRepository.#ctor(BCP.Domain.OrganizationEventRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationEventRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationEventRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationEventRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.OrganizationEvent,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationEventRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.OrganizationEvent,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationEventRepository.Bind(BCP.Domain.IOrganizationEventRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganizationEventRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganizationEventRepository.Constructor">
            <summary>设置 OrganizationEventRepository.OrganizationEventRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganizationEventRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganizationOtherNameRepository">
            <summary>BCP.Domain.OrganizationOtherNameRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationOtherNameRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationOtherNameRepository.#ctor(BCP.Domain.OrganizationOtherNameRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationOtherNameRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationOtherNameRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationOtherNameRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.OrganizationOtherName,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationOtherNameRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.OrganizationOtherName,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationOtherNameRepository.Bind(BCP.Domain.IOrganizationOtherNameRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganizationOtherNameRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganizationOtherNameRepository.Constructor">
            <summary>设置 OrganizationOtherNameRepository.OrganizationOtherNameRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganizationOtherNameRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganizationRepository">
            <summary>BCP.Domain.OrganizationRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationRepository.#ctor(BCP.Domain.OrganizationRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.Organization,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.Organization,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationRepository.Bind(BCP.Domain.IOrganizationRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganizationRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganizationRepository.Constructor">
            <summary>设置 OrganizationRepository.OrganizationRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganizationRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganizationTransitionRepository">
            <summary>BCP.Domain.OrganizationTransitionRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationTransitionRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationTransitionRepository.#ctor(BCP.Domain.OrganizationTransitionRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationTransitionRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationTransitionRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationTransitionRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.OrganizationTransition,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationTransitionRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.OrganizationTransition,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganizationTransitionRepository.Bind(BCP.Domain.IOrganizationTransitionRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganizationTransitionRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganizationTransitionRepository.Constructor">
            <summary>设置 OrganizationTransitionRepository.OrganizationTransitionRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganizationTransitionRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganization_ContacTableRepository">
            <summary>BCP.Domain.Organization_ContacTableRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganization_ContacTableRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganization_ContacTableRepository.#ctor(BCP.Domain.Organization_ContacTableRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganization_ContacTableRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganization_ContacTableRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganization_ContacTableRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.Organization_ContacTable,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganization_ContacTableRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.Organization_ContacTable,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganization_ContacTableRepository.Bind(BCP.Domain.IOrganization_ContacTableRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganization_ContacTableRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganization_ContacTableRepository.Constructor">
            <summary>设置 Organization_ContacTableRepository.Organization_ContacTableRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganization_ContacTableRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganization_TypeRepository">
            <summary>BCP.Domain.Organization_TypeRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganization_TypeRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganization_TypeRepository.#ctor(BCP.Domain.Organization_TypeRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganization_TypeRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganization_TypeRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganization_TypeRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.Organization_Type,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganization_TypeRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.Organization_Type,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimOrganization_TypeRepository.Bind(BCP.Domain.IOrganization_TypeRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganization_TypeRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimOrganization_TypeRepository.Constructor">
            <summary>设置 Organization_TypeRepository.Organization_TypeRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimOrganization_TypeRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimPositionRepository">
            <summary>BCP.Domain.PositionRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPositionRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPositionRepository.#ctor(BCP.Domain.PositionRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPositionRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPositionRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPositionRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.Position,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPositionRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.Position,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPositionRepository.Bind(BCP.Domain.IPositionRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimPositionRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimPositionRepository.Constructor">
            <summary>设置 PositionRepository.PositionRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimPositionRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimPostRepository">
            <summary>BCP.Domain.PostRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPostRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPostRepository.#ctor(BCP.Domain.PostRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPostRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPostRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPostRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.Post,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPostRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.Post,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPostRepository.Bind(BCP.Domain.IPostRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimPostRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimPostRepository.Constructor">
            <summary>设置 PostRepository.PostRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimPostRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimPostRequireRepository">
            <summary>BCP.Domain.PostRequireRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPostRequireRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPostRequireRepository.#ctor(BCP.Domain.PostRequireRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPostRequireRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPostRequireRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPostRequireRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.PostRequire,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPostRequireRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.PostRequire,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimPostRequireRepository.Bind(BCP.Domain.IPostRequireRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimPostRequireRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimPostRequireRepository.Constructor">
            <summary>设置 PostRequireRepository.PostRequireRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimPostRequireRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimProductCompositionRepository">
            <summary>BCP.Domain.ProductCompositionRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCompositionRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCompositionRepository.#ctor(BCP.Domain.ProductCompositionRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCompositionRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCompositionRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCompositionRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.ProductComposition,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCompositionRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.ProductComposition,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCompositionRepository.Bind(BCP.Domain.IProductCompositionRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimProductCompositionRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimProductCompositionRepository.Constructor">
            <summary>设置 ProductCompositionRepository.ProductCompositionRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimProductCompositionRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimProductCustomCategoryRepository">
            <summary>BCP.Domain.ProductCustomCategoryRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCustomCategoryRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCustomCategoryRepository.#ctor(BCP.Domain.ProductCustomCategoryRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCustomCategoryRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCustomCategoryRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCustomCategoryRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.ProductCustomCategory,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCustomCategoryRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.ProductCustomCategory,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCustomCategoryRepository.Bind(BCP.Domain.IProductCustomCategoryRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimProductCustomCategoryRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimProductCustomCategoryRepository.Constructor">
            <summary>设置 ProductCustomCategoryRepository.ProductCustomCategoryRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimProductCustomCategoryRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimProductCustomTypeRepository">
            <summary>BCP.Domain.ProductCustomTypeRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCustomTypeRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCustomTypeRepository.#ctor(BCP.Domain.ProductCustomTypeRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCustomTypeRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCustomTypeRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCustomTypeRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.ProductCustomType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCustomTypeRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.ProductCustomType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductCustomTypeRepository.Bind(BCP.Domain.IProductCustomTypeRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimProductCustomTypeRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimProductCustomTypeRepository.Constructor">
            <summary>设置 ProductCustomTypeRepository.ProductCustomTypeRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimProductCustomTypeRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimProductEventRepository">
            <summary>BCP.Domain.ProductEventRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductEventRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductEventRepository.#ctor(BCP.Domain.ProductEventRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductEventRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductEventRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductEventRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.ProductEvent,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductEventRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.ProductEvent,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductEventRepository.Bind(BCP.Domain.IProductEventRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimProductEventRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimProductEventRepository.Constructor">
            <summary>设置 ProductEventRepository.ProductEventRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimProductEventRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimProductRepository">
            <summary>BCP.Domain.ProductRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductRepository.#ctor(BCP.Domain.ProductRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.Product,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.Product,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductRepository.Bind(BCP.Domain.IProductRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimProductRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimProductRepository.Constructor">
            <summary>设置 ProductRepository.ProductRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimProductRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimProductStandardRepository">
            <summary>BCP.Domain.ProductStandardRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductStandardRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductStandardRepository.#ctor(BCP.Domain.ProductStandardRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductStandardRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductStandardRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductStandardRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.ProductStandard,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductStandardRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.ProductStandard,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimProductStandardRepository.Bind(BCP.Domain.IProductStandardRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimProductStandardRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimProductStandardRepository.Constructor">
            <summary>设置 ProductStandardRepository.ProductStandardRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimProductStandardRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimRegisterDocumentTypeRepository">
            <summary>BCP.Domain.RegisterDocumentTypeRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimRegisterDocumentTypeRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimRegisterDocumentTypeRepository.#ctor(BCP.Domain.RegisterDocumentTypeRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimRegisterDocumentTypeRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimRegisterDocumentTypeRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimRegisterDocumentTypeRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.RegisterDocumentType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimRegisterDocumentTypeRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.RegisterDocumentType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimRegisterDocumentTypeRepository.Bind(BCP.Domain.IRegisterDocumentTypeRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimRegisterDocumentTypeRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimRegisterDocumentTypeRepository.Constructor">
            <summary>设置 RegisterDocumentTypeRepository.RegisterDocumentTypeRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimRegisterDocumentTypeRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimSecurityinfoRepository">
            <summary>BCP.Domain.SecurityinfoRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSecurityinfoRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSecurityinfoRepository.#ctor(BCP.Domain.SecurityinfoRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSecurityinfoRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSecurityinfoRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSecurityinfoRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.Securityinfo,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSecurityinfoRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.Securityinfo,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSecurityinfoRepository.Bind(BCP.Domain.ISecurityinfoRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimSecurityinfoRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimSecurityinfoRepository.Constructor">
            <summary>设置 SecurityinfoRepository.SecurityinfoRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimSecurityinfoRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimSerivce`2">
            <summary>BCP.Domain.Serivce`2 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSerivce`2.#ctor(BCP.Domain.Serivce{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSerivce`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSerivce`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimSerivce`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimSerivce`2.Constructor">
            <summary>设置 Serivce`2.Serivce`2() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimSerivce`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimSpecializedRepository">
            <summary>BCP.Domain.SpecializedRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSpecializedRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSpecializedRepository.#ctor(BCP.Domain.SpecializedRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSpecializedRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSpecializedRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSpecializedRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.Specialized,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSpecializedRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.Specialized,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSpecializedRepository.Bind(BCP.Domain.ISpecializedRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimSpecializedRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimSpecializedRepository.Constructor">
            <summary>设置 SpecializedRepository.SpecializedRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimSpecializedRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimSubordinateRepository">
            <summary>BCP.Domain.SubordinateRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSubordinateRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSubordinateRepository.#ctor(BCP.Domain.SubordinateRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSubordinateRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSubordinateRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSubordinateRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.Subordinate,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSubordinateRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.Subordinate,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimSubordinateRepository.Bind(BCP.Domain.ISubordinateRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimSubordinateRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimSubordinateRepository.Constructor">
            <summary>设置 SubordinateRepository.SubordinateRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimSubordinateRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimUserMapper">
            <summary>BCP.Domain.UserMapper 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserMapper.ConvertToUserDTOIEnumerableOfUser">
            <summary>设置 UserMapper.ConvertToUserDTO(IEnumerable`1&lt;User&gt; users) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserMapper.ConvertToUserDTOUser">
            <summary>设置 UserMapper.ConvertToUserDTO(User user) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimUserMessageRepository">
            <summary>BCP.Domain.UserMessageRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserMessageRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserMessageRepository.#ctor(BCP.Domain.UserMessageRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserMessageRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserMessageRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserMessageRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.UserMessage,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserMessageRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.UserMessage,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserMessageRepository.Bind(BCP.Domain.IUserMessageRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserMessageRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserMessageRepository.Constructor">
            <summary>设置 UserMessageRepository.UserMessageRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimUserMessageRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimUserRelateTableRepository">
            <summary>BCP.Domain.UserRelateTableRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRelateTableRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRelateTableRepository.#ctor(BCP.Domain.UserRelateTableRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRelateTableRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRelateTableRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRelateTableRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.UserRelateTable,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRelateTableRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.UserRelateTable,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRelateTableRepository.Bind(BCP.Domain.IUserRelateTableRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserRelateTableRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserRelateTableRepository.Constructor">
            <summary>设置 UserRelateTableRepository.UserRelateTableRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimUserRelateTableRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimUserRelateTypeRepository">
            <summary>BCP.Domain.UserRelateTypeRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRelateTypeRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRelateTypeRepository.#ctor(BCP.Domain.UserRelateTypeRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRelateTypeRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRelateTypeRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRelateTypeRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.UserRelateType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRelateTypeRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.UserRelateType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRelateTypeRepository.Bind(BCP.Domain.IUserRelateTypeRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserRelateTypeRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserRelateTypeRepository.Constructor">
            <summary>设置 UserRelateTypeRepository.UserRelateTypeRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimUserRelateTypeRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimUserRepository">
            <summary>BCP.Domain.UserRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRepository.#ctor(BCP.Domain.UserRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.User,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.User,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserRepository.Bind(BCP.Domain.IUserRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserRepository.Constructor">
            <summary>设置 UserRepository.UserRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimUserRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimUserService">
            <summary>BCP.Domain.UserService 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserService.#ctor(BCP.Domain.UserService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUserService.Bind(BCP.Domain.Service.IUserService)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AddCustomGroupCustomGroupDTO">
            <summary>设置 UserService.AddCustomGroup(CustomGroupDTO customGroupDTO) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AddGroupMessageGroupMessagerDTOInt32">
            <summary>设置 UserService.AddGroupMessage(GroupMessagerDTO gmt, Int32 userid) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AddPTPMessageUserMessageDTO">
            <summary>设置 UserService.AddPTPMessage(UserMessageDTO message) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AddUserToCustomGroupInt32Int32">
            <summary>设置 UserService.AddUserToCustomGroup(Int32 userId, Int32 groupId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AddUserToGroupInt32Int32Int32Int32">
            <summary>设置 UserService.AddUserToGroup(Int32 memberUserId, Int32 groupId, Int32 userId, Int32 referenceUserId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.ConstructorIUnitOfWorkIUserMessageRepositoryICustomGroupRepositoryIGroupRepositoryIGroupMemberRepositoryIGroupMessagerRepositoryICustomGroupUserRepositoryIUserRepository">
            <summary>设置 UserService.UserService(IUnitOfWork unitOfWork, IUserMessageRepository userMessageRepository, ICustomGroupRepository customGroupRepository, IGroupRepository groupRepository, IGroupMemberRepository groupMemberRepository, IGroupMessagerRepository groupMessagerRepository, ICustomGroupUserRepository customGroupUserRepository, IUserRepository userRepository) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.DeleteCustomGroupInt32">
            <summary>设置 UserService.DeleteCustomGroup(Int32 groupId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.DeleteGroupInt32Int32">
            <summary>设置 UserService.DeleteGroup(Int32 groupId, Int32 userId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.DeleteUserInt32">
            <summary>设置 UserService.DeleteUser(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.GetAllGroupByUserIdInt32Boolean">
            <summary>设置 UserService.GetAllGroupByUserId(Int32 userId, Boolean IsCacasde) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.GetCustomGroupByIdInt32">
            <summary>设置 UserService.GetCustomGroupById(Int32 groupId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.GetCustomGroupInt32Boolean">
            <summary>设置 UserService.GetCustomGroup(Int32 userId, Boolean IsCascade) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.GetGroupByIdInt32">
            <summary>设置 UserService.GetGroupById(Int32 groupId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.GetGroupMemberByIdInt32">
            <summary>设置 UserService.GetGroupMemberById(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.GetGroupMembersByGroupIdInt32">
            <summary>设置 UserService.GetGroupMembersByGroupId(Int32 groupId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.GetPTGMessageInt32">
            <summary>设置 UserService.GetPTGMessage(Int32 userId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.GetPTPMessageInt32Int32">
            <summary>设置 UserService.GetPTPMessage(Int32 userId, Int32 anotherId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.GetUser">
            <summary>设置 UserService.GetUser() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.GetUserByCustomGroupIdInt32">
            <summary>设置 UserService.GetUserByCustomGroupId(Int32 groupId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.GetUserInt32">
            <summary>设置 UserService.GetUser(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.GetUserString">
            <summary>设置 UserService.GetUser(String userName) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.InitDataBase">
            <summary>设置 UserService.InitDataBase() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.LoginStringString">
            <summary>设置 UserService.Login(String userName, String userPwd) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.LogoutInt32">
            <summary>设置 UserService.Logout(Int32 userId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.MarkPTGMessageInt32">
            <summary>设置 UserService.MarkPTGMessage(Int32 userId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.MarkPTPMessageInt32Int32">
            <summary>设置 UserService.MarkPTPMessage(Int32 sendId, Int32 replyId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.RegisterGroupGroupDTO">
            <summary>设置 UserService.RegisterGroup(GroupDTO groupDTO) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.RegisterUserUserDTO">
            <summary>设置 UserService.RegisterUser(UserDTO userDto) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.RemoveUserFromCustomGroupInt32Int32">
            <summary>设置 UserService.RemoveUserFromCustomGroup(Int32 userId, Int32 groupId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.RemoveUserFromGroupInt32Int32Int32">
            <summary>设置 UserService.RemoveUserFromGroup(Int32 groupMemberId, Int32 groupId, Int32 userId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.ShiftGroupMemberRoleInt32Int32StringInt32">
            <summary>设置 UserService.ShiftGroupMemberRole(Int32 userId, Int32 groupId, String groupRole, Int32 groupMemberId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.UpdateCustomGroupNameInt32String">
            <summary>设置 UserService.UpdateCustomGroupName(Int32 groupId, String groupName) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.UpdateGroupInt32StringStringStringStringInt32">
            <summary>设置 UserService.UpdateGroup(Int32 groupId, String groupNumber, String groupName, String groupNotes, String groupType, Int32 userId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.UpdateGroupMemberNameInt32StringInt32">
            <summary>设置 UserService.UpdateGroupMemberName(Int32 userId, String newName, Int32 groupMemberId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.UpdateUserPwdInt32String">
            <summary>设置 UserService.UpdateUserPwd(Int32 id, String userPwd) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimUserService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.AddCustomGroupCustomGroupDTO">
            <summary>设置 UserService.AddCustomGroup(CustomGroupDTO customGroupDTO) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.AddGroupMessageGroupMessagerDTOInt32">
            <summary>设置 UserService.AddGroupMessage(GroupMessagerDTO gmt, Int32 userid) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.AddPTPMessageUserMessageDTO">
            <summary>设置 UserService.AddPTPMessage(UserMessageDTO message) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.AddUserToCustomGroupInt32Int32">
            <summary>设置 UserService.AddUserToCustomGroup(Int32 userId, Int32 groupId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.AddUserToGroupInt32Int32Int32Int32">
            <summary>设置 UserService.AddUserToGroup(Int32 memberUserId, Int32 groupId, Int32 userId, Int32 referenceUserId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.DeleteCustomGroupInt32">
            <summary>设置 UserService.DeleteCustomGroup(Int32 groupId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.DeleteGroupInt32Int32">
            <summary>设置 UserService.DeleteGroup(Int32 groupId, Int32 userId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.DeleteUserInt32">
            <summary>设置 UserService.DeleteUser(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.GetAllGroupByUserIdInt32Boolean">
            <summary>设置 UserService.GetAllGroupByUserId(Int32 userId, Boolean IsCacasde) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.GetCustomGroupByIdInt32">
            <summary>设置 UserService.GetCustomGroupById(Int32 groupId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.GetCustomGroupInt32Boolean">
            <summary>设置 UserService.GetCustomGroup(Int32 userId, Boolean IsCascade) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.GetGroupByIdInt32">
            <summary>设置 UserService.GetGroupById(Int32 groupId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.GetGroupMemberByIdInt32">
            <summary>设置 UserService.GetGroupMemberById(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.GetGroupMembersByGroupIdInt32">
            <summary>设置 UserService.GetGroupMembersByGroupId(Int32 groupId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.GetPTGMessageInt32">
            <summary>设置 UserService.GetPTGMessage(Int32 userId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.GetPTPMessageInt32Int32">
            <summary>设置 UserService.GetPTPMessage(Int32 userId, Int32 anotherId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.GetUser">
            <summary>设置 UserService.GetUser() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.GetUserByCustomGroupIdInt32">
            <summary>设置 UserService.GetUserByCustomGroupId(Int32 groupId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.GetUserInt32">
            <summary>设置 UserService.GetUser(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.GetUserString">
            <summary>设置 UserService.GetUser(String userName) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.InitDataBase">
            <summary>设置 UserService.InitDataBase() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.LoginStringString">
            <summary>设置 UserService.Login(String userName, String userPwd) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.LogoutInt32">
            <summary>设置 UserService.Logout(Int32 userId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.MarkPTGMessageInt32">
            <summary>设置 UserService.MarkPTGMessage(Int32 userId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.MarkPTPMessageInt32Int32">
            <summary>设置 UserService.MarkPTPMessage(Int32 sendId, Int32 replyId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.RegisterGroupGroupDTO">
            <summary>设置 UserService.RegisterGroup(GroupDTO groupDTO) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.RegisterUserUserDTO">
            <summary>设置 UserService.RegisterUser(UserDTO userDto) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.RemoveUserFromCustomGroupInt32Int32">
            <summary>设置 UserService.RemoveUserFromCustomGroup(Int32 userId, Int32 groupId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.RemoveUserFromGroupInt32Int32Int32">
            <summary>设置 UserService.RemoveUserFromGroup(Int32 groupMemberId, Int32 groupId, Int32 userId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.ShiftGroupMemberRoleInt32Int32StringInt32">
            <summary>设置 UserService.ShiftGroupMemberRole(Int32 userId, Int32 groupId, String groupRole, Int32 groupMemberId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.UpdateCustomGroupNameInt32String">
            <summary>设置 UserService.UpdateCustomGroupName(Int32 groupId, String groupName) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.UpdateGroupInt32StringStringStringStringInt32">
            <summary>设置 UserService.UpdateGroup(Int32 groupId, String groupNumber, String groupName, String groupNotes, String groupType, Int32 userId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.UpdateGroupMemberNameInt32StringInt32">
            <summary>设置 UserService.UpdateGroupMemberName(Int32 userId, String newName, Int32 groupMemberId) 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUserService.AllInstances.UpdateUserPwdInt32String">
            <summary>设置 UserService.UpdateUserPwd(Int32 id, String userPwd) 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimUser_ContacTableRepository">
            <summary>BCP.Domain.User_ContacTableRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUser_ContacTableRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUser_ContacTableRepository.#ctor(BCP.Domain.User_ContacTableRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUser_ContacTableRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUser_ContacTableRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUser_ContacTableRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.User_ContacTable,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUser_ContacTableRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.User_ContacTable,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimUser_ContacTableRepository.Bind(BCP.Domain.IUser_ContacTableRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUser_ContacTableRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimUser_ContacTableRepository.Constructor">
            <summary>设置 User_ContacTableRepository.User_ContacTableRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimUser_ContacTableRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimWorkMessageRepository">
            <summary>BCP.Domain.WorkMessageRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkMessageRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkMessageRepository.#ctor(BCP.Domain.WorkMessageRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkMessageRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkMessageRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkMessageRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.WorkMessage,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkMessageRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.WorkMessage,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkMessageRepository.Bind(BCP.Domain.IWorkMessageRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimWorkMessageRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimWorkMessageRepository.Constructor">
            <summary>设置 WorkMessageRepository.WorkMessageRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimWorkMessageRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimWorkModulRepository">
            <summary>BCP.Domain.WorkModulRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkModulRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkModulRepository.#ctor(BCP.Domain.WorkModulRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkModulRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkModulRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkModulRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.WorkModul,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkModulRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.WorkModul,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkModulRepository.Bind(BCP.Domain.IWorkModulRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimWorkModulRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimWorkModulRepository.Constructor">
            <summary>设置 WorkModulRepository.WorkModulRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimWorkModulRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimWorkSpaceBaseTypeRepository">
            <summary>BCP.Domain.WorkSpaceBaseTypeRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceBaseTypeRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceBaseTypeRepository.#ctor(BCP.Domain.WorkSpaceBaseTypeRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceBaseTypeRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceBaseTypeRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceBaseTypeRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.WorkSpaceBaseType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceBaseTypeRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.WorkSpaceBaseType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceBaseTypeRepository.Bind(BCP.Domain.IWorkSpaceBaseTypeRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimWorkSpaceBaseTypeRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimWorkSpaceBaseTypeRepository.Constructor">
            <summary>设置 WorkSpaceBaseTypeRepository.WorkSpaceBaseTypeRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimWorkSpaceBaseTypeRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimWorkSpaceRepository">
            <summary>BCP.Domain.WorkSpaceRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceRepository.#ctor(BCP.Domain.WorkSpaceRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.WorkSpace,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.WorkSpace,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceRepository.Bind(BCP.Domain.IWorkSpaceRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimWorkSpaceRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimWorkSpaceRepository.Constructor">
            <summary>设置 WorkSpaceRepository.WorkSpaceRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimWorkSpaceRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimWorkSpaceRoleRepository">
            <summary>BCP.Domain.WorkSpaceRoleRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceRoleRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceRoleRepository.#ctor(BCP.Domain.WorkSpaceRoleRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceRoleRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceRoleRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceRoleRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.WorkSpaceRole,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceRoleRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.WorkSpaceRole,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceRoleRepository.Bind(BCP.Domain.IWorkSpaceRoleRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimWorkSpaceRoleRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimWorkSpaceRoleRepository.Constructor">
            <summary>设置 WorkSpaceRoleRepository.WorkSpaceRoleRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimWorkSpaceRoleRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimWorkSpaceTypeRepository">
            <summary>BCP.Domain.WorkSpaceTypeRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceTypeRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceTypeRepository.#ctor(BCP.Domain.WorkSpaceTypeRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceTypeRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceTypeRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceTypeRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.WorkSpaceType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceTypeRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.WorkSpaceType,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimWorkSpaceTypeRepository.Bind(BCP.Domain.IWorkSpaceTypeRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimWorkSpaceTypeRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimWorkSpaceTypeRepository.Constructor">
            <summary>设置 WorkSpaceTypeRepository.WorkSpaceTypeRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimWorkSpaceTypeRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimZipCodeRepository">
            <summary>BCP.Domain.ZipCodeRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimZipCodeRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimZipCodeRepository.#ctor(BCP.Domain.ZipCodeRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimZipCodeRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimZipCodeRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimZipCodeRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.ZipCode,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimZipCodeRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.ZipCode,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimZipCodeRepository.Bind(BCP.Domain.IZipCodeRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimZipCodeRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimZipCodeRepository.Constructor">
            <summary>设置 ZipCodeRepository.ZipCodeRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimZipCodeRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimphysicalAssetRepository">
            <summary>BCP.Domain.physicalAssetRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimphysicalAssetRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimphysicalAssetRepository.#ctor(BCP.Domain.physicalAssetRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimphysicalAssetRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimphysicalAssetRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimphysicalAssetRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.physicalAsset,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimphysicalAssetRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.physicalAsset,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimphysicalAssetRepository.Bind(BCP.Domain.IphysicalAssetRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimphysicalAssetRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimphysicalAssetRepository.Constructor">
            <summary>设置 physicalAssetRepository.physicalAssetRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimphysicalAssetRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimworkTaskRepository">
            <summary>BCP.Domain.workTaskRepository 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimworkTaskRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimworkTaskRepository.#ctor(BCP.Domain.workTaskRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimworkTaskRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimworkTaskRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimworkTaskRepository.Bind(BCP.Common.IReadOnlyRepository{BCP.Domain.Edmx.workTask,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimworkTaskRepository.Bind(BCP.Common.IRepository{BCP.Domain.Edmx.workTask,System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.ShimworkTaskRepository.Bind(BCP.Domain.IworkTaskRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimworkTaskRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.ShimworkTaskRepository.Constructor">
            <summary>设置 workTaskRepository.workTaskRepository() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.ShimworkTaskRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubAdministrativecodeRepository">
            <summary>BCP.Domain.AdministrativecodeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAdministrativecodeRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAdministrativecodeRepository.InitializeStub">
            <summary>初始化 type StubAdministrativecodeRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAdministrativecodeRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAdministrativecodeRepository.RemoveCascaded(BCP.Domain.Edmx.Administrativecode)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubAdministrativecodeRepository.RemoveCascadedAdministrativecode">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubAdministrativecodeRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubAdministrativecodeRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubAdministrativecodeRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubAdministrativecodeRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubAssetBaseTypeRepository">
            <summary>BCP.Domain.AssetBaseTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAssetBaseTypeRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAssetBaseTypeRepository.InitializeStub">
            <summary>初始化 type StubAssetBaseTypeRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAssetBaseTypeRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAssetBaseTypeRepository.RemoveCascaded(BCP.Domain.Edmx.AssetBaseType)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubAssetBaseTypeRepository.RemoveCascadedAssetBaseType">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubAssetBaseTypeRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubAssetBaseTypeRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubAssetBaseTypeRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubAssetBaseTypeRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubAssetMaintenanceRepository">
            <summary>BCP.Domain.AssetMaintenanceRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAssetMaintenanceRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAssetMaintenanceRepository.InitializeStub">
            <summary>初始化 type StubAssetMaintenanceRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAssetMaintenanceRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAssetMaintenanceRepository.RemoveCascaded(BCP.Domain.Edmx.AssetMaintenance)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubAssetMaintenanceRepository.RemoveCascadedAssetMaintenance">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubAssetMaintenanceRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubAssetMaintenanceRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubAssetMaintenanceRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubAssetMaintenanceRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubAssetUseRepository">
            <summary>BCP.Domain.AssetUseRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAssetUseRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAssetUseRepository.InitializeStub">
            <summary>初始化 type StubAssetUseRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAssetUseRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAssetUseRepository.RemoveCascaded(BCP.Domain.Edmx.AssetUse)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubAssetUseRepository.RemoveCascadedAssetUse">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubAssetUseRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubAssetUseRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubAssetUseRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubAssetUseRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubAuthorizationRepository">
            <summary>BCP.Domain.AuthorizationRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAuthorizationRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAuthorizationRepository.InitializeStub">
            <summary>初始化 type StubAuthorizationRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAuthorizationRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubAuthorizationRepository.RemoveCascaded(BCP.Domain.Edmx.Authorization)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubAuthorizationRepository.RemoveCascadedAuthorization">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubAuthorizationRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubAuthorizationRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubAuthorizationRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubAuthorizationRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubBussnessVerRepository">
            <summary>BCP.Domain.BussnessVerRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubBussnessVerRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubBussnessVerRepository.InitializeStub">
            <summary>初始化 type StubBussnessVerRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubBussnessVerRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubBussnessVerRepository.RemoveCascaded(BCP.Domain.Edmx.BussnessVer)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubBussnessVerRepository.RemoveCascadedBussnessVer">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubBussnessVerRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubBussnessVerRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubBussnessVerRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubBussnessVerRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubCustomCategoryRepository">
            <summary>BCP.Domain.CustomCategoryRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomCategoryRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomCategoryRepository.InitializeStub">
            <summary>初始化 type StubCustomCategoryRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomCategoryRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomCategoryRepository.RemoveCascaded(BCP.Domain.Edmx.CustomCategory)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubCustomCategoryRepository.RemoveCascadedCustomCategory">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubCustomCategoryRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubCustomCategoryRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubCustomCategoryRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubCustomCategoryRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubCustomGroupRepository">
            <summary>BCP.Domain.CustomGroupRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomGroupRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomGroupRepository.InitializeStub">
            <summary>初始化 type StubCustomGroupRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomGroupRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomGroupRepository.RemoveCascaded(BCP.Domain.Edmx.CustomGroup)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubCustomGroupRepository.RemoveCascadedCustomGroup">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubCustomGroupRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubCustomGroupRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubCustomGroupRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubCustomGroupRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubCustomGroupUserRepository">
            <summary>BCP.Domain.CustomGroupUserRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomGroupUserRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomGroupUserRepository.InitializeStub">
            <summary>初始化 type StubCustomGroupUserRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomGroupUserRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomGroupUserRepository.RemoveCascaded(BCP.Domain.Edmx.CustomGroupUser)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubCustomGroupUserRepository.RemoveCascadedCustomGroupUser">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubCustomGroupUserRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubCustomGroupUserRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubCustomGroupUserRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubCustomGroupUserRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubCustomTabDataRepository">
            <summary>BCP.Domain.CustomTabDataRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomTabDataRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomTabDataRepository.InitializeStub">
            <summary>初始化 type StubCustomTabDataRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomTabDataRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomTabDataRepository.RemoveCascaded(BCP.Domain.Edmx.CustomTabData)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubCustomTabDataRepository.RemoveCascadedCustomTabData">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubCustomTabDataRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubCustomTabDataRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubCustomTabDataRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubCustomTabDataRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubCustomTableRepository">
            <summary>BCP.Domain.CustomTableRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomTableRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomTableRepository.InitializeStub">
            <summary>初始化 type StubCustomTableRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomTableRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubCustomTableRepository.RemoveCascaded(BCP.Domain.Edmx.CustomTable)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubCustomTableRepository.RemoveCascadedCustomTable">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubCustomTableRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubCustomTableRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubCustomTableRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubCustomTableRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubDllFileStreamRepository">
            <summary>BCP.Domain.DllFileStreamRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDllFileStreamRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDllFileStreamRepository.InitializeStub">
            <summary>初始化 type StubDllFileStreamRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDllFileStreamRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDllFileStreamRepository.RemoveCascaded(BCP.Domain.Edmx.DllFileStream)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDllFileStreamRepository.RemoveCascadedDllFileStream">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDllFileStreamRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDllFileStreamRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDllFileStreamRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDllFileStreamRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubDocCheckStateRepository">
            <summary>BCP.Domain.DocCheckStateRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocCheckStateRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocCheckStateRepository.InitializeStub">
            <summary>初始化 type StubDocCheckStateRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocCheckStateRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocCheckStateRepository.RemoveCascaded(BCP.Domain.Edmx.DocCheckState)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocCheckStateRepository.RemoveCascadedDocCheckState">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocCheckStateRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocCheckStateRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocCheckStateRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocCheckStateRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubDocComentRepository">
            <summary>BCP.Domain.DocComentRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocComentRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocComentRepository.InitializeStub">
            <summary>初始化 type StubDocComentRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocComentRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocComentRepository.RemoveCascaded(BCP.Domain.Edmx.DocComent)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocComentRepository.RemoveCascadedDocComent">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocComentRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocComentRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocComentRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocComentRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubDocLocationRepository">
            <summary>BCP.Domain.DocLocationRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocLocationRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocLocationRepository.InitializeStub">
            <summary>初始化 type StubDocLocationRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocLocationRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocLocationRepository.RemoveCascaded(BCP.Domain.Edmx.DocLocation)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocLocationRepository.RemoveCascadedDocLocation">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocLocationRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocLocationRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocLocationRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocLocationRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubDocManageStateRepository">
            <summary>BCP.Domain.DocManageStateRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocManageStateRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocManageStateRepository.InitializeStub">
            <summary>初始化 type StubDocManageStateRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocManageStateRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocManageStateRepository.RemoveCascaded(BCP.Domain.Edmx.DocManageState)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocManageStateRepository.RemoveCascadedDocManageState">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocManageStateRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocManageStateRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocManageStateRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocManageStateRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubDocReaderRepository">
            <summary>BCP.Domain.DocReaderRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocReaderRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocReaderRepository.InitializeStub">
            <summary>初始化 type StubDocReaderRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocReaderRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocReaderRepository.RemoveCascaded(BCP.Domain.Edmx.DocReader)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocReaderRepository.RemoveCascadedDocReader">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocReaderRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocReaderRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocReaderRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocReaderRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubDocSenderRepository">
            <summary>BCP.Domain.DocSenderRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocSenderRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocSenderRepository.InitializeStub">
            <summary>初始化 type StubDocSenderRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocSenderRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocSenderRepository.RemoveCascaded(BCP.Domain.Edmx.DocSender)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocSenderRepository.RemoveCascadedDocSender">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocSenderRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocSenderRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocSenderRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocSenderRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubDocTypeRepository">
            <summary>BCP.Domain.DocTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocTypeRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocTypeRepository.InitializeStub">
            <summary>初始化 type StubDocTypeRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocTypeRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocTypeRepository.RemoveCascaded(BCP.Domain.Edmx.DocType)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocTypeRepository.RemoveCascadedDocType">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocTypeRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocTypeRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocTypeRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocTypeRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubDocumentContentRepository">
            <summary>BCP.Domain.DocumentContentRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocumentContentRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocumentContentRepository.InitializeStub">
            <summary>初始化 type StubDocumentContentRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocumentContentRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocumentContentRepository.RemoveCascaded(BCP.Domain.Edmx.DocumentContent)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocumentContentRepository.RemoveCascadedDocumentContent">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocumentContentRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocumentContentRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocumentContentRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocumentContentRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubDocumentManageRepository">
            <summary>BCP.Domain.DocumentManageRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocumentManageRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocumentManageRepository.InitializeStub">
            <summary>初始化 type StubDocumentManageRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocumentManageRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocumentManageRepository.RemoveCascaded(BCP.Domain.Edmx.DocumentManage)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocumentManageRepository.RemoveCascadedDocumentManage">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocumentManageRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocumentManageRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocumentManageRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocumentManageRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubDocumentTypeRepository">
            <summary>BCP.Domain.DocumentTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocumentTypeRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocumentTypeRepository.InitializeStub">
            <summary>初始化 type StubDocumentTypeRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocumentTypeRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubDocumentTypeRepository.RemoveCascaded(BCP.Domain.Edmx.DocumentType)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocumentTypeRepository.RemoveCascadedDocumentType">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubDocumentTypeRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocumentTypeRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocumentTypeRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubDocumentTypeRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubEFRepository`2">
            <summary>BCP.Domain.EFRepository`2 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubEFRepository`2.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubEFRepository`2.InitializeStub">
            <summary>初始化 type StubEFRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubEFRepository`2.RemoveCascaded(`0)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubEFRepository`2.RemoveCascaded(`1)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubEFRepository`2.RemoveCascadedT0">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubEFRepository`2.RemoveCascadedT1">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubEFRepository`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubEFRepository`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubEFRepository`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubEFUnitOfWork">
            <summary>BCP.Domain.EFUnitOfWork 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubEFUnitOfWork.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubEFUnitOfWork.InitializeStub">
            <summary>初始化 type StubEFUnitOfWork 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubEFUnitOfWork.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubEFUnitOfWork.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubEFUnitOfWork.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubEmployeeRepository">
            <summary>BCP.Domain.EmployeeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubEmployeeRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubEmployeeRepository.InitializeStub">
            <summary>初始化 type StubEmployeeRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubEmployeeRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubEmployeeRepository.RemoveCascaded(BCP.Domain.Edmx.Employee)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubEmployeeRepository.RemoveCascadedEmployee">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubEmployeeRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubEmployeeRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubEmployeeRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubEmployeeRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubGroupMemberRepository">
            <summary>BCP.Domain.GroupMemberRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubGroupMemberRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubGroupMemberRepository.InitializeStub">
            <summary>初始化 type StubGroupMemberRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubGroupMemberRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubGroupMemberRepository.RemoveCascaded(BCP.Domain.Edmx.GroupMember)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubGroupMemberRepository.RemoveCascadedGroupMember">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubGroupMemberRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubGroupMemberRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubGroupMemberRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubGroupMemberRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubGroupMessagerRepository">
            <summary>BCP.Domain.GroupMessagerRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubGroupMessagerRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubGroupMessagerRepository.InitializeStub">
            <summary>初始化 type StubGroupMessagerRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubGroupMessagerRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubGroupMessagerRepository.RemoveCascaded(BCP.Domain.Edmx.GroupMessager)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubGroupMessagerRepository.RemoveCascadedGroupMessager">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubGroupMessagerRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubGroupMessagerRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubGroupMessagerRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubGroupMessagerRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubGroupRepository">
            <summary>BCP.Domain.GroupRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubGroupRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubGroupRepository.InitializeStub">
            <summary>初始化 type StubGroupRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubGroupRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubGroupRepository.RemoveCascaded(BCP.Domain.Edmx.Group)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubGroupRepository.RemoveCascadedGroup">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubGroupRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubGroupRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubGroupRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubGroupRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIAdministrativecodeRepository">
            <summary>BCP.Domain.IAdministrativecodeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAdministrativecodeRepository.#ctor">
            <summary>初始化 type StubIAdministrativecodeRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAdministrativecodeRepository.AddAdministrativecode">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAdministrativecodeRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIAdministrativecodeRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAdministrativecodeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Administrativecode@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAdministrativecodeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Administrativecode@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAdministrativecodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Administrativecode@System#Int32}#Add(BCP.Domain.Edmx.Administrativecode)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAdministrativecodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Administrativecode@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAdministrativecodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Administrativecode@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAdministrativecodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Administrativecode@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.Administrativecode)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAdministrativecodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Administrativecode@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAdministrativecodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Administrativecode@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.Administrativecode)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAdministrativecodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Administrativecode@System#Int32}#Save(BCP.Domain.Edmx.Administrativecode)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAdministrativecodeRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAdministrativecodeRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAdministrativecodeRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAdministrativecodeRepository.RemoveCascadedAdministrativecode">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAdministrativecodeRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAdministrativecodeRepository.RemoveNonCascadedAdministrativecode">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAdministrativecodeRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAdministrativecodeRepository.SaveAdministrativecode">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAdministrativecodeRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAdministrativecodeRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIAdministrativecodeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Administrativecode@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIAssetBaseTypeRepository">
            <summary>BCP.Domain.IAssetBaseTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.#ctor">
            <summary>初始化 type StubIAssetBaseTypeRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.AddAssetBaseType">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIAssetBaseTypeRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#AssetBaseType@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#AssetBaseType@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetBaseType@System#Int32}#Add(BCP.Domain.Edmx.AssetBaseType)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetBaseType@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetBaseType@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetBaseType@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.AssetBaseType)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetBaseType@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetBaseType@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.AssetBaseType)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetBaseType@System#Int32}#Save(BCP.Domain.Edmx.AssetBaseType)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.RemoveCascadedAssetBaseType">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.RemoveNonCascadedAssetBaseType">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.SaveAssetBaseType">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIAssetBaseTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#AssetBaseType@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIAssetMaintenanceRepository">
            <summary>BCP.Domain.IAssetMaintenanceRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.#ctor">
            <summary>初始化 type StubIAssetMaintenanceRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.AddAssetMaintenance">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIAssetMaintenanceRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#AssetMaintenance@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#AssetMaintenance@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetMaintenance@System#Int32}#Add(BCP.Domain.Edmx.AssetMaintenance)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetMaintenance@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetMaintenance@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetMaintenance@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.AssetMaintenance)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetMaintenance@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetMaintenance@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.AssetMaintenance)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetMaintenance@System#Int32}#Save(BCP.Domain.Edmx.AssetMaintenance)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.RemoveCascadedAssetMaintenance">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.RemoveNonCascadedAssetMaintenance">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.SaveAssetMaintenance">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIAssetMaintenanceRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#AssetMaintenance@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIAssetUseRepository">
            <summary>BCP.Domain.IAssetUseRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetUseRepository.#ctor">
            <summary>初始化 type StubIAssetUseRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetUseRepository.AddAssetUse">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetUseRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIAssetUseRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetUseRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#AssetUse@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetUseRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#AssetUse@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetUseRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetUse@System#Int32}#Add(BCP.Domain.Edmx.AssetUse)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetUseRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetUse@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetUseRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetUse@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetUseRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetUse@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.AssetUse)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetUseRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetUse@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetUseRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetUse@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.AssetUse)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAssetUseRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#AssetUse@System#Int32}#Save(BCP.Domain.Edmx.AssetUse)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetUseRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetUseRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetUseRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetUseRepository.RemoveCascadedAssetUse">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetUseRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetUseRepository.RemoveNonCascadedAssetUse">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetUseRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetUseRepository.SaveAssetUse">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetUseRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAssetUseRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIAssetUseRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#AssetUse@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIAuthorizationRepository">
            <summary>BCP.Domain.IAuthorizationRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAuthorizationRepository.#ctor">
            <summary>初始化 type StubIAuthorizationRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAuthorizationRepository.AddAuthorization">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAuthorizationRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIAuthorizationRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAuthorizationRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Authorization@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAuthorizationRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Authorization@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAuthorizationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Authorization@System#Int32}#Add(BCP.Domain.Edmx.Authorization)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAuthorizationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Authorization@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAuthorizationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Authorization@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAuthorizationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Authorization@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.Authorization)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAuthorizationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Authorization@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAuthorizationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Authorization@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.Authorization)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIAuthorizationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Authorization@System#Int32}#Save(BCP.Domain.Edmx.Authorization)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAuthorizationRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAuthorizationRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAuthorizationRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAuthorizationRepository.RemoveCascadedAuthorization">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAuthorizationRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAuthorizationRepository.RemoveNonCascadedAuthorization">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAuthorizationRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAuthorizationRepository.SaveAuthorization">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAuthorizationRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIAuthorizationRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIAuthorizationRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Authorization@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIBussnessVerRepository">
            <summary>BCP.Domain.IBussnessVerRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIBussnessVerRepository.#ctor">
            <summary>初始化 type StubIBussnessVerRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIBussnessVerRepository.AddBussnessVer">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIBussnessVerRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIBussnessVerRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIBussnessVerRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#BussnessVer@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIBussnessVerRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#BussnessVer@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIBussnessVerRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#BussnessVer@System#Int32}#Add(BCP.Domain.Edmx.BussnessVer)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIBussnessVerRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#BussnessVer@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIBussnessVerRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#BussnessVer@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIBussnessVerRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#BussnessVer@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.BussnessVer)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIBussnessVerRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#BussnessVer@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIBussnessVerRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#BussnessVer@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.BussnessVer)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIBussnessVerRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#BussnessVer@System#Int32}#Save(BCP.Domain.Edmx.BussnessVer)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIBussnessVerRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIBussnessVerRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIBussnessVerRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIBussnessVerRepository.RemoveCascadedBussnessVer">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIBussnessVerRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIBussnessVerRepository.RemoveNonCascadedBussnessVer">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIBussnessVerRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIBussnessVerRepository.SaveBussnessVer">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIBussnessVerRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIBussnessVerRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIBussnessVerRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#BussnessVer@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubICustomCategoryRepository">
            <summary>BCP.Domain.ICustomCategoryRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomCategoryRepository.#ctor">
            <summary>初始化 type StubICustomCategoryRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomCategoryRepository.AddCustomCategory">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomCategoryRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubICustomCategoryRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomCategoryRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#CustomCategory@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomCategoryRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#CustomCategory@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomCategoryRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomCategory@System#Int32}#Add(BCP.Domain.Edmx.CustomCategory)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomCategoryRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomCategory@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomCategoryRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomCategory@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomCategoryRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomCategory@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.CustomCategory)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomCategoryRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomCategory@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomCategoryRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomCategory@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.CustomCategory)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomCategoryRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomCategory@System#Int32}#Save(BCP.Domain.Edmx.CustomCategory)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomCategoryRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomCategoryRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomCategoryRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomCategoryRepository.RemoveCascadedCustomCategory">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomCategoryRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomCategoryRepository.RemoveNonCascadedCustomCategory">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomCategoryRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomCategoryRepository.SaveCustomCategory">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomCategoryRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomCategoryRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubICustomCategoryRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#CustomCategory@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubICustomGroupRepository">
            <summary>BCP.Domain.ICustomGroupRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupRepository.#ctor">
            <summary>初始化 type StubICustomGroupRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupRepository.AddCustomGroup">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubICustomGroupRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#CustomGroup@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#CustomGroup@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomGroup@System#Int32}#Add(BCP.Domain.Edmx.CustomGroup)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomGroup@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomGroup@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomGroup@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.CustomGroup)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomGroup@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomGroup@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.CustomGroup)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomGroup@System#Int32}#Save(BCP.Domain.Edmx.CustomGroup)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupRepository.RemoveCascadedCustomGroup">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupRepository.RemoveNonCascadedCustomGroup">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupRepository.SaveCustomGroup">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubICustomGroupRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#CustomGroup@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubICustomGroupUserRepository">
            <summary>BCP.Domain.ICustomGroupUserRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupUserRepository.#ctor">
            <summary>初始化 type StubICustomGroupUserRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupUserRepository.AddCustomGroupUser">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupUserRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubICustomGroupUserRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupUserRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#CustomGroupUser@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupUserRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#CustomGroupUser@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupUserRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomGroupUser@System#Int32}#Add(BCP.Domain.Edmx.CustomGroupUser)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupUserRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomGroupUser@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupUserRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomGroupUser@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupUserRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomGroupUser@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.CustomGroupUser)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupUserRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomGroupUser@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupUserRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomGroupUser@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.CustomGroupUser)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomGroupUserRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomGroupUser@System#Int32}#Save(BCP.Domain.Edmx.CustomGroupUser)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupUserRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupUserRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupUserRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupUserRepository.RemoveCascadedCustomGroupUser">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupUserRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupUserRepository.RemoveNonCascadedCustomGroupUser">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupUserRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupUserRepository.SaveCustomGroupUser">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupUserRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomGroupUserRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubICustomGroupUserRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#CustomGroupUser@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubICustomTabDataRepository">
            <summary>BCP.Domain.ICustomTabDataRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTabDataRepository.#ctor">
            <summary>初始化 type StubICustomTabDataRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTabDataRepository.AddCustomTabData">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTabDataRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubICustomTabDataRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTabDataRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#CustomTabData@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTabDataRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#CustomTabData@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTabDataRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomTabData@System#Int32}#Add(BCP.Domain.Edmx.CustomTabData)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTabDataRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomTabData@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTabDataRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomTabData@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTabDataRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomTabData@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.CustomTabData)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTabDataRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomTabData@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTabDataRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomTabData@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.CustomTabData)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTabDataRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomTabData@System#Int32}#Save(BCP.Domain.Edmx.CustomTabData)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTabDataRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTabDataRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTabDataRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTabDataRepository.RemoveCascadedCustomTabData">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTabDataRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTabDataRepository.RemoveNonCascadedCustomTabData">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTabDataRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTabDataRepository.SaveCustomTabData">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTabDataRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTabDataRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubICustomTabDataRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#CustomTabData@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubICustomTableRepository">
            <summary>BCP.Domain.ICustomTableRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTableRepository.#ctor">
            <summary>初始化 type StubICustomTableRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTableRepository.AddCustomTable">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTableRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubICustomTableRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTableRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#CustomTable@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTableRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#CustomTable@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomTable@System#Int32}#Add(BCP.Domain.Edmx.CustomTable)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomTable@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomTable@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomTable@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.CustomTable)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomTable@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomTable@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.CustomTable)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubICustomTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#CustomTable@System#Int32}#Save(BCP.Domain.Edmx.CustomTable)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTableRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTableRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTableRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTableRepository.RemoveCascadedCustomTable">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTableRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTableRepository.RemoveNonCascadedCustomTable">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTableRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTableRepository.SaveCustomTable">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTableRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubICustomTableRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubICustomTableRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#CustomTable@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIDllFileStreamRepository">
            <summary>BCP.Domain.IDllFileStreamRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDllFileStreamRepository.#ctor">
            <summary>初始化 type StubIDllFileStreamRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDllFileStreamRepository.AddDllFileStream">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDllFileStreamRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIDllFileStreamRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDllFileStreamRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DllFileStream@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDllFileStreamRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DllFileStream@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDllFileStreamRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DllFileStream@System#Int32}#Add(BCP.Domain.Edmx.DllFileStream)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDllFileStreamRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DllFileStream@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDllFileStreamRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DllFileStream@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDllFileStreamRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DllFileStream@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.DllFileStream)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDllFileStreamRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DllFileStream@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDllFileStreamRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DllFileStream@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.DllFileStream)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDllFileStreamRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DllFileStream@System#Int32}#Save(BCP.Domain.Edmx.DllFileStream)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDllFileStreamRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDllFileStreamRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDllFileStreamRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDllFileStreamRepository.RemoveCascadedDllFileStream">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDllFileStreamRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDllFileStreamRepository.RemoveNonCascadedDllFileStream">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDllFileStreamRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDllFileStreamRepository.SaveDllFileStream">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDllFileStreamRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDllFileStreamRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIDllFileStreamRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DllFileStream@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIDocCheckStateRepository">
            <summary>BCP.Domain.IDocCheckStateRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocCheckStateRepository.#ctor">
            <summary>初始化 type StubIDocCheckStateRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocCheckStateRepository.AddDocCheckState">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocCheckStateRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIDocCheckStateRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocCheckStateRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocCheckState@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocCheckStateRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocCheckState@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocCheckStateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocCheckState@System#Int32}#Add(BCP.Domain.Edmx.DocCheckState)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocCheckStateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocCheckState@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocCheckStateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocCheckState@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocCheckStateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocCheckState@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.DocCheckState)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocCheckStateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocCheckState@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocCheckStateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocCheckState@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.DocCheckState)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocCheckStateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocCheckState@System#Int32}#Save(BCP.Domain.Edmx.DocCheckState)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocCheckStateRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocCheckStateRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocCheckStateRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocCheckStateRepository.RemoveCascadedDocCheckState">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocCheckStateRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocCheckStateRepository.RemoveNonCascadedDocCheckState">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocCheckStateRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocCheckStateRepository.SaveDocCheckState">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocCheckStateRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocCheckStateRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIDocCheckStateRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocCheckState@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIDocComentRepository">
            <summary>BCP.Domain.IDocComentRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocComentRepository.#ctor">
            <summary>初始化 type StubIDocComentRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocComentRepository.AddDocComent">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocComentRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIDocComentRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocComentRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocComent@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocComentRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocComent@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocComentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocComent@System#Int32}#Add(BCP.Domain.Edmx.DocComent)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocComentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocComent@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocComentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocComent@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocComentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocComent@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.DocComent)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocComentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocComent@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocComentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocComent@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.DocComent)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocComentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocComent@System#Int32}#Save(BCP.Domain.Edmx.DocComent)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocComentRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocComentRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocComentRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocComentRepository.RemoveCascadedDocComent">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocComentRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocComentRepository.RemoveNonCascadedDocComent">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocComentRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocComentRepository.SaveDocComent">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocComentRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocComentRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIDocComentRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocComent@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIDocLocationRepository">
            <summary>BCP.Domain.IDocLocationRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocLocationRepository.#ctor">
            <summary>初始化 type StubIDocLocationRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocLocationRepository.AddDocLocation">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocLocationRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIDocLocationRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocLocationRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocLocation@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocLocationRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocLocation@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocLocationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocLocation@System#Int32}#Add(BCP.Domain.Edmx.DocLocation)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocLocationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocLocation@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocLocationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocLocation@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocLocationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocLocation@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.DocLocation)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocLocationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocLocation@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocLocationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocLocation@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.DocLocation)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocLocationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocLocation@System#Int32}#Save(BCP.Domain.Edmx.DocLocation)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocLocationRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocLocationRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocLocationRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocLocationRepository.RemoveCascadedDocLocation">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocLocationRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocLocationRepository.RemoveNonCascadedDocLocation">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocLocationRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocLocationRepository.SaveDocLocation">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocLocationRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocLocationRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIDocLocationRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocLocation@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIDocManageStateRepository">
            <summary>BCP.Domain.IDocManageStateRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocManageStateRepository.#ctor">
            <summary>初始化 type StubIDocManageStateRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocManageStateRepository.AddDocManageState">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocManageStateRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIDocManageStateRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocManageStateRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocManageState@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocManageStateRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocManageState@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocManageStateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocManageState@System#Int32}#Add(BCP.Domain.Edmx.DocManageState)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocManageStateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocManageState@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocManageStateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocManageState@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocManageStateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocManageState@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.DocManageState)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocManageStateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocManageState@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocManageStateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocManageState@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.DocManageState)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocManageStateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocManageState@System#Int32}#Save(BCP.Domain.Edmx.DocManageState)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocManageStateRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocManageStateRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocManageStateRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocManageStateRepository.RemoveCascadedDocManageState">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocManageStateRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocManageStateRepository.RemoveNonCascadedDocManageState">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocManageStateRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocManageStateRepository.SaveDocManageState">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocManageStateRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocManageStateRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIDocManageStateRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocManageState@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIDocReaderRepository">
            <summary>BCP.Domain.IDocReaderRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocReaderRepository.#ctor">
            <summary>初始化 type StubIDocReaderRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocReaderRepository.AddDocReader">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocReaderRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIDocReaderRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocReaderRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocReader@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocReaderRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocReader@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocReaderRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocReader@System#Int32}#Add(BCP.Domain.Edmx.DocReader)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocReaderRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocReader@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocReaderRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocReader@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocReaderRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocReader@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.DocReader)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocReaderRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocReader@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocReaderRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocReader@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.DocReader)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocReaderRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocReader@System#Int32}#Save(BCP.Domain.Edmx.DocReader)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocReaderRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocReaderRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocReaderRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocReaderRepository.RemoveCascadedDocReader">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocReaderRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocReaderRepository.RemoveNonCascadedDocReader">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocReaderRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocReaderRepository.SaveDocReader">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocReaderRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocReaderRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIDocReaderRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocReader@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIDocSenderRepository">
            <summary>BCP.Domain.IDocSenderRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocSenderRepository.#ctor">
            <summary>初始化 type StubIDocSenderRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocSenderRepository.AddDocSender">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocSenderRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIDocSenderRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocSenderRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocSender@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocSenderRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocSender@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocSenderRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocSender@System#Int32}#Add(BCP.Domain.Edmx.DocSender)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocSenderRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocSender@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocSenderRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocSender@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocSenderRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocSender@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.DocSender)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocSenderRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocSender@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocSenderRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocSender@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.DocSender)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocSenderRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocSender@System#Int32}#Save(BCP.Domain.Edmx.DocSender)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocSenderRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocSenderRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocSenderRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocSenderRepository.RemoveCascadedDocSender">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocSenderRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocSenderRepository.RemoveNonCascadedDocSender">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocSenderRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocSenderRepository.SaveDocSender">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocSenderRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocSenderRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIDocSenderRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocSender@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIDocTypeRepository">
            <summary>BCP.Domain.IDocTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocTypeRepository.#ctor">
            <summary>初始化 type StubIDocTypeRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocTypeRepository.AddDocType">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocTypeRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIDocTypeRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocType@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocType@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocType@System#Int32}#Add(BCP.Domain.Edmx.DocType)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocType@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocType@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocType@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.DocType)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocType@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocType@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.DocType)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocType@System#Int32}#Save(BCP.Domain.Edmx.DocType)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocTypeRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocTypeRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocTypeRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocTypeRepository.RemoveCascadedDocType">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocTypeRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocTypeRepository.RemoveNonCascadedDocType">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocTypeRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocTypeRepository.SaveDocType">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocTypeRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocTypeRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIDocTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocType@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIDocumentContentRepository">
            <summary>BCP.Domain.IDocumentContentRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentContentRepository.#ctor">
            <summary>初始化 type StubIDocumentContentRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentContentRepository.AddDocumentContent">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentContentRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIDocumentContentRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentContentRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocumentContent@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentContentRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocumentContent@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentContentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentContent@System#Int32}#Add(BCP.Domain.Edmx.DocumentContent)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentContentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentContent@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentContentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentContent@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentContentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentContent@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.DocumentContent)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentContentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentContent@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentContentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentContent@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.DocumentContent)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentContentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentContent@System#Int32}#Save(BCP.Domain.Edmx.DocumentContent)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentContentRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentContentRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentContentRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentContentRepository.RemoveCascadedDocumentContent">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentContentRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentContentRepository.RemoveNonCascadedDocumentContent">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentContentRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentContentRepository.SaveDocumentContent">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentContentRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentContentRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIDocumentContentRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocumentContent@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIDocumentManageRepository">
            <summary>BCP.Domain.IDocumentManageRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentManageRepository.#ctor">
            <summary>初始化 type StubIDocumentManageRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentManageRepository.AddDocumentManage">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentManageRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIDocumentManageRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentManageRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocumentManage@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentManageRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocumentManage@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentManageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentManage@System#Int32}#Add(BCP.Domain.Edmx.DocumentManage)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentManageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentManage@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentManageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentManage@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentManageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentManage@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.DocumentManage)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentManageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentManage@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentManageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentManage@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.DocumentManage)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentManageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentManage@System#Int32}#Save(BCP.Domain.Edmx.DocumentManage)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentManageRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentManageRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentManageRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentManageRepository.RemoveCascadedDocumentManage">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentManageRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentManageRepository.RemoveNonCascadedDocumentManage">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentManageRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentManageRepository.SaveDocumentManage">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentManageRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentManageRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIDocumentManageRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocumentManage@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIDocumentTypeRepository">
            <summary>BCP.Domain.IDocumentTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentTypeRepository.#ctor">
            <summary>初始化 type StubIDocumentTypeRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentTypeRepository.AddDocumentType">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentTypeRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIDocumentTypeRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocumentType@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocumentType@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentType@System#Int32}#Add(BCP.Domain.Edmx.DocumentType)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentType@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentType@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentType@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.DocumentType)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentType@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentType@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.DocumentType)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIDocumentTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#DocumentType@System#Int32}#Save(BCP.Domain.Edmx.DocumentType)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentTypeRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentTypeRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentTypeRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentTypeRepository.RemoveCascadedDocumentType">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentTypeRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentTypeRepository.RemoveNonCascadedDocumentType">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentTypeRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentTypeRepository.SaveDocumentType">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentTypeRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIDocumentTypeRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIDocumentTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#DocumentType@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIEFUnitOfWork">
            <summary>BCP.Domain.IEFUnitOfWork 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIEFUnitOfWork.#ctor">
            <summary>初始化 type StubIEFUnitOfWork 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIEFUnitOfWork.bcpc::BCP#Common#IUnitOfWork#Commit">
            <summary>设置 IUnitOfWork.Commit() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIEFUnitOfWork.bcpc::BCP#Common#IUnitOfWork#RollBack">
            <summary>设置 IUnitOfWork.RollBack() 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIEFUnitOfWork.Commit">
            <summary>设置 IUnitOfWork.Commit() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIEFUnitOfWork.DbContextGet">
            <summary>设置 IEFUnitOfWork.get_DbContext() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIEFUnitOfWork.RollBack">
            <summary>设置 IUnitOfWork.RollBack() 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIEFUnitOfWork.bcpd::BCP#Domain#IEFUnitOfWork#DbContext">
            <summary>设置 IEFUnitOfWork.get_DbContext() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIEmployeeRepository">
            <summary>BCP.Domain.IEmployeeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIEmployeeRepository.#ctor">
            <summary>初始化 type StubIEmployeeRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIEmployeeRepository.AddEmployee">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIEmployeeRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIEmployeeRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIEmployeeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Employee@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIEmployeeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Employee@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIEmployeeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Employee@System#Int32}#Add(BCP.Domain.Edmx.Employee)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIEmployeeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Employee@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIEmployeeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Employee@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIEmployeeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Employee@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.Employee)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIEmployeeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Employee@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIEmployeeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Employee@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.Employee)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIEmployeeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Employee@System#Int32}#Save(BCP.Domain.Edmx.Employee)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIEmployeeRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIEmployeeRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIEmployeeRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIEmployeeRepository.RemoveCascadedEmployee">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIEmployeeRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIEmployeeRepository.RemoveNonCascadedEmployee">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIEmployeeRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIEmployeeRepository.SaveEmployee">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIEmployeeRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIEmployeeRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIEmployeeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Employee@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIGroupMemberRepository">
            <summary>BCP.Domain.IGroupMemberRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMemberRepository.#ctor">
            <summary>初始化 type StubIGroupMemberRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMemberRepository.AddGroupMember">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMemberRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIGroupMemberRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMemberRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#GroupMember@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMemberRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#GroupMember@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMemberRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#GroupMember@System#Int32}#Add(BCP.Domain.Edmx.GroupMember)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMemberRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#GroupMember@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMemberRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#GroupMember@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMemberRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#GroupMember@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.GroupMember)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMemberRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#GroupMember@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMemberRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#GroupMember@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.GroupMember)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMemberRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#GroupMember@System#Int32}#Save(BCP.Domain.Edmx.GroupMember)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMemberRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMemberRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMemberRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMemberRepository.RemoveCascadedGroupMember">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMemberRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMemberRepository.RemoveNonCascadedGroupMember">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMemberRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMemberRepository.SaveGroupMember">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMemberRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMemberRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIGroupMemberRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#GroupMember@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIGroupMessagerRepository">
            <summary>BCP.Domain.IGroupMessagerRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMessagerRepository.#ctor">
            <summary>初始化 type StubIGroupMessagerRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMessagerRepository.AddGroupMessager">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMessagerRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIGroupMessagerRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMessagerRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#GroupMessager@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMessagerRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#GroupMessager@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMessagerRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#GroupMessager@System#Int32}#Add(BCP.Domain.Edmx.GroupMessager)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMessagerRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#GroupMessager@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMessagerRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#GroupMessager@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMessagerRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#GroupMessager@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.GroupMessager)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMessagerRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#GroupMessager@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMessagerRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#GroupMessager@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.GroupMessager)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupMessagerRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#GroupMessager@System#Int32}#Save(BCP.Domain.Edmx.GroupMessager)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMessagerRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMessagerRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMessagerRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMessagerRepository.RemoveCascadedGroupMessager">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMessagerRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMessagerRepository.RemoveNonCascadedGroupMessager">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMessagerRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMessagerRepository.SaveGroupMessager">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMessagerRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupMessagerRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIGroupMessagerRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#GroupMessager@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIGroupRepository">
            <summary>BCP.Domain.IGroupRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupRepository.#ctor">
            <summary>初始化 type StubIGroupRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupRepository.AddGroup">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIGroupRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Group@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Group@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Group@System#Int32}#Add(BCP.Domain.Edmx.Group)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Group@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Group@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Group@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.Group)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Group@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Group@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.Group)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIGroupRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Group@System#Int32}#Save(BCP.Domain.Edmx.Group)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupRepository.RemoveCascadedGroup">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupRepository.RemoveNonCascadedGroup">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupRepository.SaveGroup">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIGroupRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIGroupRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Group@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIIPCodeRepository">
            <summary>BCP.Domain.IIPCodeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIPCodeRepository.#ctor">
            <summary>初始化 type StubIIPCodeRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIPCodeRepository.AddIPCode">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIPCodeRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIIPCodeRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIPCodeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#IPCode@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIPCodeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#IPCode@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIPCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IPCode@System#Int32}#Add(BCP.Domain.Edmx.IPCode)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIPCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IPCode@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIPCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IPCode@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIPCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IPCode@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.IPCode)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIPCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IPCode@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIPCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IPCode@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.IPCode)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIPCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IPCode@System#Int32}#Save(BCP.Domain.Edmx.IPCode)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIPCodeRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIPCodeRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIPCodeRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIPCodeRepository.RemoveCascadedIPCode">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIPCodeRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIPCodeRepository.RemoveNonCascadedIPCode">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIPCodeRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIPCodeRepository.SaveIPCode">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIPCodeRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIPCodeRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIIPCodeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#IPCode@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIIndustryCodeRepository">
            <summary>BCP.Domain.IIndustryCodeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustryCodeRepository.#ctor">
            <summary>初始化 type StubIIndustryCodeRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustryCodeRepository.AddIndustryCode">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustryCodeRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIIndustryCodeRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustryCodeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#IndustryCode@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustryCodeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#IndustryCode@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustryCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IndustryCode@System#Int32}#Add(BCP.Domain.Edmx.IndustryCode)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustryCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IndustryCode@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustryCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IndustryCode@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustryCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IndustryCode@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.IndustryCode)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustryCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IndustryCode@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustryCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IndustryCode@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.IndustryCode)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustryCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IndustryCode@System#Int32}#Save(BCP.Domain.Edmx.IndustryCode)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustryCodeRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustryCodeRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustryCodeRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustryCodeRepository.RemoveCascadedIndustryCode">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustryCodeRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustryCodeRepository.RemoveNonCascadedIndustryCode">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustryCodeRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustryCodeRepository.SaveIndustryCode">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustryCodeRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustryCodeRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIIndustryCodeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#IndustryCode@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIIndustrySolutionRepository">
            <summary>BCP.Domain.IIndustrySolutionRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustrySolutionRepository.#ctor">
            <summary>初始化 type StubIIndustrySolutionRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustrySolutionRepository.AddIndustrySolution">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustrySolutionRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIIndustrySolutionRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustrySolutionRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#IndustrySolution@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustrySolutionRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#IndustrySolution@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustrySolutionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IndustrySolution@System#Int32}#Add(BCP.Domain.Edmx.IndustrySolution)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustrySolutionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IndustrySolution@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustrySolutionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IndustrySolution@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustrySolutionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IndustrySolution@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.IndustrySolution)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustrySolutionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IndustrySolution@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustrySolutionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IndustrySolution@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.IndustrySolution)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIIndustrySolutionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#IndustrySolution@System#Int32}#Save(BCP.Domain.Edmx.IndustrySolution)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustrySolutionRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustrySolutionRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustrySolutionRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustrySolutionRepository.RemoveCascadedIndustrySolution">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustrySolutionRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustrySolutionRepository.RemoveNonCascadedIndustrySolution">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustrySolutionRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustrySolutionRepository.SaveIndustrySolution">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustrySolutionRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIIndustrySolutionRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIIndustrySolutionRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#IndustrySolution@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIJobChangeRepository">
            <summary>BCP.Domain.IJobChangeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIJobChangeRepository.#ctor">
            <summary>初始化 type StubIJobChangeRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIJobChangeRepository.AddJobChange">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIJobChangeRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIJobChangeRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIJobChangeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#JobChange@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIJobChangeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#JobChange@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIJobChangeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#JobChange@System#Int32}#Add(BCP.Domain.Edmx.JobChange)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIJobChangeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#JobChange@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIJobChangeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#JobChange@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIJobChangeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#JobChange@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.JobChange)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIJobChangeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#JobChange@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.JobChange)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIJobChangeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#JobChange@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIJobChangeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#JobChange@System#Int32}#Save(BCP.Domain.Edmx.JobChange)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIJobChangeRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIJobChangeRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIJobChangeRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIJobChangeRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIJobChangeRepository.RemoveCascadedJobChange">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIJobChangeRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIJobChangeRepository.RemoveNonCascadedJobChange">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIJobChangeRepository.SaveJobChange">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIJobChangeRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIJobChangeRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIJobChangeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#JobChange@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubILoginLogRepository">
            <summary>BCP.Domain.ILoginLogRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubILoginLogRepository.#ctor">
            <summary>初始化 type StubILoginLogRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubILoginLogRepository.AddLoginLog">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubILoginLogRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubILoginLogRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubILoginLogRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#LoginLog@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubILoginLogRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#LoginLog@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubILoginLogRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#LoginLog@System#Int32}#Add(BCP.Domain.Edmx.LoginLog)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubILoginLogRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#LoginLog@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubILoginLogRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#LoginLog@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubILoginLogRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#LoginLog@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.LoginLog)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubILoginLogRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#LoginLog@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.LoginLog)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubILoginLogRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#LoginLog@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubILoginLogRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#LoginLog@System#Int32}#Save(BCP.Domain.Edmx.LoginLog)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubILoginLogRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubILoginLogRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubILoginLogRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubILoginLogRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubILoginLogRepository.RemoveCascadedLoginLog">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubILoginLogRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubILoginLogRepository.RemoveNonCascadedLoginLog">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubILoginLogRepository.SaveLoginLog">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubILoginLogRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubILoginLogRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubILoginLogRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#LoginLog@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIModulPropertyRepository">
            <summary>BCP.Domain.IModulPropertyRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIModulPropertyRepository.#ctor">
            <summary>初始化 type StubIModulPropertyRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIModulPropertyRepository.AddModulProperty">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIModulPropertyRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIModulPropertyRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIModulPropertyRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ModulProperty@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIModulPropertyRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ModulProperty@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIModulPropertyRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ModulProperty@System#Int32}#Add(BCP.Domain.Edmx.ModulProperty)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIModulPropertyRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ModulProperty@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIModulPropertyRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ModulProperty@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIModulPropertyRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ModulProperty@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.ModulProperty)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIModulPropertyRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ModulProperty@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.ModulProperty)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIModulPropertyRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ModulProperty@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIModulPropertyRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ModulProperty@System#Int32}#Save(BCP.Domain.Edmx.ModulProperty)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIModulPropertyRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIModulPropertyRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIModulPropertyRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIModulPropertyRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIModulPropertyRepository.RemoveCascadedModulProperty">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIModulPropertyRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIModulPropertyRepository.RemoveNonCascadedModulProperty">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIModulPropertyRepository.SaveModulProperty">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIModulPropertyRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIModulPropertyRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIModulPropertyRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ModulProperty@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIOperationDetailRepository">
            <summary>BCP.Domain.IOperationDetailRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationDetailRepository.#ctor">
            <summary>初始化 type StubIOperationDetailRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationDetailRepository.AddOperationDetail">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationDetailRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIOperationDetailRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationDetailRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OperationDetail@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationDetailRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OperationDetail@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationDetailRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OperationDetail@System#Int32}#Add(BCP.Domain.Edmx.OperationDetail)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationDetailRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OperationDetail@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationDetailRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OperationDetail@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationDetailRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OperationDetail@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.OperationDetail)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationDetailRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OperationDetail@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.OperationDetail)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationDetailRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OperationDetail@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationDetailRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OperationDetail@System#Int32}#Save(BCP.Domain.Edmx.OperationDetail)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationDetailRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationDetailRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationDetailRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationDetailRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationDetailRepository.RemoveCascadedOperationDetail">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationDetailRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationDetailRepository.RemoveNonCascadedOperationDetail">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationDetailRepository.SaveOperationDetail">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationDetailRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationDetailRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIOperationDetailRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OperationDetail@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIOperationEventRepository">
            <summary>BCP.Domain.IOperationEventRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationEventRepository.#ctor">
            <summary>初始化 type StubIOperationEventRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationEventRepository.AddOperationEvent">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationEventRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIOperationEventRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationEventRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OperationEvent@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationEventRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OperationEvent@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OperationEvent@System#Int32}#Add(BCP.Domain.Edmx.OperationEvent)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OperationEvent@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OperationEvent@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OperationEvent@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.OperationEvent)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OperationEvent@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.OperationEvent)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OperationEvent@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOperationEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OperationEvent@System#Int32}#Save(BCP.Domain.Edmx.OperationEvent)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationEventRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationEventRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationEventRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationEventRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationEventRepository.RemoveCascadedOperationEvent">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationEventRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationEventRepository.RemoveNonCascadedOperationEvent">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationEventRepository.SaveOperationEvent">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationEventRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOperationEventRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIOperationEventRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OperationEvent@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository">
            <summary>BCP.Domain.IOrgaRegisterDocmentRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.#ctor">
            <summary>初始化 type StubIOrgaRegisterDocmentRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.AddOrgaRegisterDocment">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIOrgaRegisterDocmentRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrgaRegisterDocment@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrgaRegisterDocment@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrgaRegisterDocment@System#Int32}#Add(BCP.Domain.Edmx.OrgaRegisterDocment)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrgaRegisterDocment@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrgaRegisterDocment@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrgaRegisterDocment@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.OrgaRegisterDocment)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrgaRegisterDocment@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.OrgaRegisterDocment)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrgaRegisterDocment@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrgaRegisterDocment@System#Int32}#Save(BCP.Domain.Edmx.OrgaRegisterDocment)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.RemoveCascadedOrgaRegisterDocment">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.RemoveNonCascadedOrgaRegisterDocment">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.SaveOrgaRegisterDocment">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIOrgaRegisterDocmentRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrgaRegisterDocment@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIOrganicInvestorRepository">
            <summary>BCP.Domain.IOrganicInvestorRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganicInvestorRepository.#ctor">
            <summary>初始化 type StubIOrganicInvestorRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganicInvestorRepository.AddOrganicInvestor">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganicInvestorRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIOrganicInvestorRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganicInvestorRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganicInvestor@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganicInvestorRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganicInvestor@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganicInvestorRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganicInvestor@System#Int32}#Add(BCP.Domain.Edmx.OrganicInvestor)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganicInvestorRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganicInvestor@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganicInvestorRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganicInvestor@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganicInvestorRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganicInvestor@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.OrganicInvestor)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganicInvestorRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganicInvestor@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.OrganicInvestor)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganicInvestorRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganicInvestor@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganicInvestorRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganicInvestor@System#Int32}#Save(BCP.Domain.Edmx.OrganicInvestor)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganicInvestorRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganicInvestorRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganicInvestorRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganicInvestorRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganicInvestorRepository.RemoveCascadedOrganicInvestor">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganicInvestorRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganicInvestorRepository.RemoveNonCascadedOrganicInvestor">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganicInvestorRepository.SaveOrganicInvestor">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganicInvestorRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganicInvestorRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIOrganicInvestorRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganicInvestor@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIOrganizBasicRepository">
            <summary>BCP.Domain.IOrganizBasicRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizBasicRepository.#ctor">
            <summary>初始化 type StubIOrganizBasicRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizBasicRepository.AddOrganizBasic">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizBasicRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIOrganizBasicRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizBasicRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizBasic@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizBasicRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizBasic@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizBasicRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizBasic@System#Int32}#Add(BCP.Domain.Edmx.OrganizBasic)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizBasicRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizBasic@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizBasicRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizBasic@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizBasicRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizBasic@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.OrganizBasic)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizBasicRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizBasic@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.OrganizBasic)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizBasicRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizBasic@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizBasicRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizBasic@System#Int32}#Save(BCP.Domain.Edmx.OrganizBasic)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizBasicRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizBasicRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizBasicRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizBasicRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizBasicRepository.RemoveCascadedOrganizBasic">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizBasicRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizBasicRepository.RemoveNonCascadedOrganizBasic">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizBasicRepository.SaveOrganizBasic">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizBasicRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizBasicRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIOrganizBasicRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizBasic@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository">
            <summary>BCP.Domain.IOrganizationAssetTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.#ctor">
            <summary>初始化 type StubIOrganizationAssetTypeRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.AddOrganizationAssetType">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIOrganizationAssetTypeRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizationAssetType@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizationAssetType@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationAssetType@System#Int32}#Add(BCP.Domain.Edmx.OrganizationAssetType)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationAssetType@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationAssetType@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationAssetType@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.OrganizationAssetType)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationAssetType@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.OrganizationAssetType)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationAssetType@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationAssetType@System#Int32}#Save(BCP.Domain.Edmx.OrganizationAssetType)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.RemoveCascadedOrganizationAssetType">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.RemoveNonCascadedOrganizationAssetType">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.SaveOrganizationAssetType">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIOrganizationAssetTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizationAssetType@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository">
            <summary>BCP.Domain.IOrganizationCustomTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.#ctor">
            <summary>初始化 type StubIOrganizationCustomTypeRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.AddOrganizationCustomType">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIOrganizationCustomTypeRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizationCustomType@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizationCustomType@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationCustomType@System#Int32}#Add(BCP.Domain.Edmx.OrganizationCustomType)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationCustomType@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationCustomType@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationCustomType@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.OrganizationCustomType)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationCustomType@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.OrganizationCustomType)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationCustomType@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationCustomType@System#Int32}#Save(BCP.Domain.Edmx.OrganizationCustomType)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.RemoveCascadedOrganizationCustomType">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.RemoveNonCascadedOrganizationCustomType">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.SaveOrganizationCustomType">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIOrganizationCustomTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizationCustomType@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIOrganizationEventRepository">
            <summary>BCP.Domain.IOrganizationEventRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationEventRepository.#ctor">
            <summary>初始化 type StubIOrganizationEventRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationEventRepository.AddOrganizationEvent">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationEventRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIOrganizationEventRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationEventRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizationEvent@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationEventRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizationEvent@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationEvent@System#Int32}#Add(BCP.Domain.Edmx.OrganizationEvent)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationEvent@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationEvent@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationEvent@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.OrganizationEvent)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationEvent@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.OrganizationEvent)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationEvent@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationEvent@System#Int32}#Save(BCP.Domain.Edmx.OrganizationEvent)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationEventRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationEventRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationEventRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationEventRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationEventRepository.RemoveCascadedOrganizationEvent">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationEventRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationEventRepository.RemoveNonCascadedOrganizationEvent">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationEventRepository.SaveOrganizationEvent">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationEventRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationEventRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIOrganizationEventRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizationEvent@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository">
            <summary>BCP.Domain.IOrganizationOtherNameRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.#ctor">
            <summary>初始化 type StubIOrganizationOtherNameRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.AddOrganizationOtherName">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIOrganizationOtherNameRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizationOtherName@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizationOtherName@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationOtherName@System#Int32}#Add(BCP.Domain.Edmx.OrganizationOtherName)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationOtherName@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationOtherName@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationOtherName@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.OrganizationOtherName)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationOtherName@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.OrganizationOtherName)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationOtherName@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationOtherName@System#Int32}#Save(BCP.Domain.Edmx.OrganizationOtherName)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.RemoveCascadedOrganizationOtherName">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.RemoveNonCascadedOrganizationOtherName">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.SaveOrganizationOtherName">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIOrganizationOtherNameRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizationOtherName@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIOrganizationRepository">
            <summary>BCP.Domain.IOrganizationRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationRepository.#ctor">
            <summary>初始化 type StubIOrganizationRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationRepository.AddOrganization">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIOrganizationRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Organization@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Organization@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization@System#Int32}#Add(BCP.Domain.Edmx.Organization)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.Organization)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.Organization)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization@System#Int32}#Save(BCP.Domain.Edmx.Organization)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationRepository.RemoveCascadedOrganization">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationRepository.RemoveNonCascadedOrganization">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationRepository.SaveOrganization">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIOrganizationRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Organization@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIOrganizationTransitionRepository">
            <summary>BCP.Domain.IOrganizationTransitionRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.#ctor">
            <summary>初始化 type StubIOrganizationTransitionRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.AddOrganizationTransition">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIOrganizationTransitionRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizationTransition@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizationTransition@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationTransition@System#Int32}#Add(BCP.Domain.Edmx.OrganizationTransition)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationTransition@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationTransition@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationTransition@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.OrganizationTransition)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationTransition@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.OrganizationTransition)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationTransition@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#OrganizationTransition@System#Int32}#Save(BCP.Domain.Edmx.OrganizationTransition)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.RemoveCascadedOrganizationTransition">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.RemoveNonCascadedOrganizationTransition">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.SaveOrganizationTransition">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIOrganizationTransitionRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#OrganizationTransition@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository">
            <summary>BCP.Domain.IOrganization_ContacTableRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.#ctor">
            <summary>初始化 type StubIOrganization_ContacTableRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.AddOrganization_ContacTable">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIOrganization_ContacTableRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Organization_ContacTable@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Organization_ContacTable@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization_ContacTable@System#Int32}#Add(BCP.Domain.Edmx.Organization_ContacTable)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization_ContacTable@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization_ContacTable@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization_ContacTable@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.Organization_ContacTable)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization_ContacTable@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.Organization_ContacTable)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization_ContacTable@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization_ContacTable@System#Int32}#Save(BCP.Domain.Edmx.Organization_ContacTable)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.RemoveCascadedOrganization_ContacTable">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.RemoveNonCascadedOrganization_ContacTable">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.SaveOrganization_ContacTable">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIOrganization_ContacTableRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Organization_ContacTable@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIOrganization_TypeRepository">
            <summary>BCP.Domain.IOrganization_TypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_TypeRepository.#ctor">
            <summary>初始化 type StubIOrganization_TypeRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_TypeRepository.AddOrganization_Type">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_TypeRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIOrganization_TypeRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_TypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Organization_Type@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_TypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Organization_Type@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_TypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization_Type@System#Int32}#Add(BCP.Domain.Edmx.Organization_Type)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_TypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization_Type@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_TypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization_Type@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_TypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization_Type@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.Organization_Type)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_TypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization_Type@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.Organization_Type)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_TypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization_Type@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIOrganization_TypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Organization_Type@System#Int32}#Save(BCP.Domain.Edmx.Organization_Type)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_TypeRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_TypeRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_TypeRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_TypeRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_TypeRepository.RemoveCascadedOrganization_Type">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_TypeRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_TypeRepository.RemoveNonCascadedOrganization_Type">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_TypeRepository.SaveOrganization_Type">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_TypeRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIOrganization_TypeRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIOrganization_TypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Organization_Type@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIPCodeRepository">
            <summary>BCP.Domain.IPCodeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPCodeRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPCodeRepository.InitializeStub">
            <summary>初始化 type StubIPCodeRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPCodeRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPCodeRepository.RemoveCascaded(BCP.Domain.Edmx.IPCode)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPCodeRepository.RemoveCascadedIPCode">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPCodeRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIPCodeRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIPCodeRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIPCodeRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIPositionRepository">
            <summary>BCP.Domain.IPositionRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPositionRepository.#ctor">
            <summary>初始化 type StubIPositionRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPositionRepository.AddPosition">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPositionRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIPositionRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPositionRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Position@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPositionRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Position@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPositionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Position@System#Int32}#Add(BCP.Domain.Edmx.Position)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPositionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Position@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPositionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Position@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPositionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Position@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.Position)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPositionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Position@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.Position)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPositionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Position@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPositionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Position@System#Int32}#Save(BCP.Domain.Edmx.Position)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPositionRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPositionRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPositionRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPositionRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPositionRepository.RemoveCascadedPosition">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPositionRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPositionRepository.RemoveNonCascadedPosition">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPositionRepository.SavePosition">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPositionRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPositionRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIPositionRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Position@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIPostRepository">
            <summary>BCP.Domain.IPostRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRepository.#ctor">
            <summary>初始化 type StubIPostRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRepository.AddPost">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIPostRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Post@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Post@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Post@System#Int32}#Add(BCP.Domain.Edmx.Post)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Post@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Post@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Post@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.Post)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Post@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.Post)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Post@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Post@System#Int32}#Save(BCP.Domain.Edmx.Post)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRepository.RemoveCascadedPost">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRepository.RemoveNonCascadedPost">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRepository.SavePost">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIPostRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Post@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIPostRequireRepository">
            <summary>BCP.Domain.IPostRequireRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRequireRepository.#ctor">
            <summary>初始化 type StubIPostRequireRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRequireRepository.AddPostRequire">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRequireRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIPostRequireRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRequireRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#PostRequire@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRequireRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#PostRequire@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRequireRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#PostRequire@System#Int32}#Add(BCP.Domain.Edmx.PostRequire)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRequireRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#PostRequire@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRequireRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#PostRequire@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRequireRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#PostRequire@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.PostRequire)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRequireRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#PostRequire@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.PostRequire)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRequireRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#PostRequire@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIPostRequireRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#PostRequire@System#Int32}#Save(BCP.Domain.Edmx.PostRequire)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRequireRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRequireRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRequireRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRequireRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRequireRepository.RemoveCascadedPostRequire">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRequireRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRequireRepository.RemoveNonCascadedPostRequire">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRequireRepository.SavePostRequire">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRequireRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIPostRequireRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIPostRequireRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#PostRequire@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIProductCompositionRepository">
            <summary>BCP.Domain.IProductCompositionRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCompositionRepository.#ctor">
            <summary>初始化 type StubIProductCompositionRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCompositionRepository.AddProductComposition">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCompositionRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIProductCompositionRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCompositionRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ProductComposition@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCompositionRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ProductComposition@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCompositionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductComposition@System#Int32}#Add(BCP.Domain.Edmx.ProductComposition)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCompositionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductComposition@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCompositionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductComposition@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCompositionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductComposition@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.ProductComposition)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCompositionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductComposition@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.ProductComposition)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCompositionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductComposition@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCompositionRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductComposition@System#Int32}#Save(BCP.Domain.Edmx.ProductComposition)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCompositionRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCompositionRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCompositionRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCompositionRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCompositionRepository.RemoveCascadedProductComposition">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCompositionRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCompositionRepository.RemoveNonCascadedProductComposition">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCompositionRepository.SaveProductComposition">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCompositionRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCompositionRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIProductCompositionRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ProductComposition@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIProductCustomCategoryRepository">
            <summary>BCP.Domain.IProductCustomCategoryRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.#ctor">
            <summary>初始化 type StubIProductCustomCategoryRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.AddProductCustomCategory">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIProductCustomCategoryRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ProductCustomCategory@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ProductCustomCategory@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductCustomCategory@System#Int32}#Add(BCP.Domain.Edmx.ProductCustomCategory)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductCustomCategory@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductCustomCategory@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductCustomCategory@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.ProductCustomCategory)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductCustomCategory@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.ProductCustomCategory)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductCustomCategory@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductCustomCategory@System#Int32}#Save(BCP.Domain.Edmx.ProductCustomCategory)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.RemoveCascadedProductCustomCategory">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.RemoveNonCascadedProductCustomCategory">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.SaveProductCustomCategory">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIProductCustomCategoryRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ProductCustomCategory@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIProductCustomTypeRepository">
            <summary>BCP.Domain.IProductCustomTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomTypeRepository.#ctor">
            <summary>初始化 type StubIProductCustomTypeRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomTypeRepository.AddProductCustomType">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomTypeRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIProductCustomTypeRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ProductCustomType@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ProductCustomType@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductCustomType@System#Int32}#Add(BCP.Domain.Edmx.ProductCustomType)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductCustomType@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductCustomType@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductCustomType@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.ProductCustomType)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductCustomType@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.ProductCustomType)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductCustomType@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductCustomTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductCustomType@System#Int32}#Save(BCP.Domain.Edmx.ProductCustomType)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomTypeRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomTypeRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomTypeRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomTypeRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomTypeRepository.RemoveCascadedProductCustomType">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomTypeRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomTypeRepository.RemoveNonCascadedProductCustomType">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomTypeRepository.SaveProductCustomType">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomTypeRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductCustomTypeRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIProductCustomTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ProductCustomType@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIProductEventRepository">
            <summary>BCP.Domain.IProductEventRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductEventRepository.#ctor">
            <summary>初始化 type StubIProductEventRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductEventRepository.AddProductEvent">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductEventRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIProductEventRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductEventRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ProductEvent@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductEventRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ProductEvent@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductEvent@System#Int32}#Add(BCP.Domain.Edmx.ProductEvent)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductEvent@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductEvent@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductEvent@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.ProductEvent)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductEvent@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.ProductEvent)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductEvent@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductEventRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductEvent@System#Int32}#Save(BCP.Domain.Edmx.ProductEvent)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductEventRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductEventRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductEventRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductEventRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductEventRepository.RemoveCascadedProductEvent">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductEventRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductEventRepository.RemoveNonCascadedProductEvent">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductEventRepository.SaveProductEvent">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductEventRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductEventRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIProductEventRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ProductEvent@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIProductRepository">
            <summary>BCP.Domain.IProductRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductRepository.#ctor">
            <summary>初始化 type StubIProductRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductRepository.AddProduct">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIProductRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Product@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Product@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Product@System#Int32}#Add(BCP.Domain.Edmx.Product)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Product@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Product@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Product@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.Product)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Product@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.Product)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Product@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Product@System#Int32}#Save(BCP.Domain.Edmx.Product)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductRepository.RemoveCascadedProduct">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductRepository.RemoveNonCascadedProduct">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductRepository.SaveProduct">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIProductRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Product@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIProductStandardRepository">
            <summary>BCP.Domain.IProductStandardRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductStandardRepository.#ctor">
            <summary>初始化 type StubIProductStandardRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductStandardRepository.AddProductStandard">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductStandardRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIProductStandardRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductStandardRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ProductStandard@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductStandardRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ProductStandard@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductStandardRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductStandard@System#Int32}#Add(BCP.Domain.Edmx.ProductStandard)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductStandardRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductStandard@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductStandardRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductStandard@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductStandardRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductStandard@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.ProductStandard)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductStandardRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductStandard@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.ProductStandard)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductStandardRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductStandard@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIProductStandardRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ProductStandard@System#Int32}#Save(BCP.Domain.Edmx.ProductStandard)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductStandardRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductStandardRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductStandardRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductStandardRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductStandardRepository.RemoveCascadedProductStandard">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductStandardRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductStandardRepository.RemoveNonCascadedProductStandard">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductStandardRepository.SaveProductStandard">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductStandardRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIProductStandardRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIProductStandardRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ProductStandard@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository">
            <summary>BCP.Domain.IRegisterDocumentTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.#ctor">
            <summary>初始化 type StubIRegisterDocumentTypeRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.AddRegisterDocumentType">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIRegisterDocumentTypeRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#RegisterDocumentType@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#RegisterDocumentType@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#RegisterDocumentType@System#Int32}#Add(BCP.Domain.Edmx.RegisterDocumentType)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#RegisterDocumentType@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#RegisterDocumentType@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#RegisterDocumentType@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.RegisterDocumentType)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#RegisterDocumentType@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.RegisterDocumentType)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#RegisterDocumentType@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#RegisterDocumentType@System#Int32}#Save(BCP.Domain.Edmx.RegisterDocumentType)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.RemoveCascadedRegisterDocumentType">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.RemoveNonCascadedRegisterDocumentType">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.SaveRegisterDocumentType">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIRegisterDocumentTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#RegisterDocumentType@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubISecurityinfoRepository">
            <summary>BCP.Domain.ISecurityinfoRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISecurityinfoRepository.#ctor">
            <summary>初始化 type StubISecurityinfoRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISecurityinfoRepository.AddSecurityinfo">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISecurityinfoRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubISecurityinfoRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISecurityinfoRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Securityinfo@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISecurityinfoRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Securityinfo@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISecurityinfoRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Securityinfo@System#Int32}#Add(BCP.Domain.Edmx.Securityinfo)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISecurityinfoRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Securityinfo@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISecurityinfoRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Securityinfo@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISecurityinfoRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Securityinfo@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.Securityinfo)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISecurityinfoRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Securityinfo@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.Securityinfo)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISecurityinfoRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Securityinfo@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISecurityinfoRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Securityinfo@System#Int32}#Save(BCP.Domain.Edmx.Securityinfo)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISecurityinfoRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISecurityinfoRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISecurityinfoRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISecurityinfoRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISecurityinfoRepository.RemoveCascadedSecurityinfo">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISecurityinfoRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISecurityinfoRepository.RemoveNonCascadedSecurityinfo">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISecurityinfoRepository.SaveSecurityinfo">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISecurityinfoRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISecurityinfoRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubISecurityinfoRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Securityinfo@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubISpecializedRepository">
            <summary>BCP.Domain.ISpecializedRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISpecializedRepository.#ctor">
            <summary>初始化 type StubISpecializedRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISpecializedRepository.AddSpecialized">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISpecializedRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubISpecializedRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISpecializedRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Specialized@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISpecializedRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Specialized@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISpecializedRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Specialized@System#Int32}#Add(BCP.Domain.Edmx.Specialized)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISpecializedRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Specialized@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISpecializedRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Specialized@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISpecializedRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Specialized@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.Specialized)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISpecializedRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Specialized@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.Specialized)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISpecializedRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Specialized@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISpecializedRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Specialized@System#Int32}#Save(BCP.Domain.Edmx.Specialized)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISpecializedRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISpecializedRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISpecializedRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISpecializedRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISpecializedRepository.RemoveCascadedSpecialized">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISpecializedRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISpecializedRepository.RemoveNonCascadedSpecialized">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISpecializedRepository.SaveSpecialized">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISpecializedRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISpecializedRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubISpecializedRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Specialized@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubISubordinateRepository">
            <summary>BCP.Domain.ISubordinateRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISubordinateRepository.#ctor">
            <summary>初始化 type StubISubordinateRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISubordinateRepository.AddSubordinate">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISubordinateRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubISubordinateRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISubordinateRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Subordinate@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISubordinateRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Subordinate@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISubordinateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Subordinate@System#Int32}#Add(BCP.Domain.Edmx.Subordinate)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISubordinateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Subordinate@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISubordinateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Subordinate@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISubordinateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Subordinate@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.Subordinate)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISubordinateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Subordinate@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.Subordinate)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISubordinateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Subordinate@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubISubordinateRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#Subordinate@System#Int32}#Save(BCP.Domain.Edmx.Subordinate)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISubordinateRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISubordinateRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISubordinateRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISubordinateRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISubordinateRepository.RemoveCascadedSubordinate">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISubordinateRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISubordinateRepository.RemoveNonCascadedSubordinate">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISubordinateRepository.SaveSubordinate">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISubordinateRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubISubordinateRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubISubordinateRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#Subordinate@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIUserMessageRepository">
            <summary>BCP.Domain.IUserMessageRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserMessageRepository.#ctor">
            <summary>初始化 type StubIUserMessageRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserMessageRepository.AddUserMessage">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserMessageRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIUserMessageRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserMessageRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#UserMessage@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserMessageRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#UserMessage@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserMessageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserMessage@System#Int32}#Add(BCP.Domain.Edmx.UserMessage)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserMessageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserMessage@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserMessageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserMessage@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserMessageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserMessage@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.UserMessage)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserMessageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserMessage@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.UserMessage)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserMessageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserMessage@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserMessageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserMessage@System#Int32}#Save(BCP.Domain.Edmx.UserMessage)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserMessageRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserMessageRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserMessageRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserMessageRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserMessageRepository.RemoveCascadedUserMessage">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserMessageRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserMessageRepository.RemoveNonCascadedUserMessage">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserMessageRepository.SaveUserMessage">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserMessageRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserMessageRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIUserMessageRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#UserMessage@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIUserRelateTableRepository">
            <summary>BCP.Domain.IUserRelateTableRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTableRepository.#ctor">
            <summary>初始化 type StubIUserRelateTableRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTableRepository.AddUserRelateTable">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTableRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIUserRelateTableRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTableRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#UserRelateTable@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTableRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#UserRelateTable@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserRelateTable@System#Int32}#Add(BCP.Domain.Edmx.UserRelateTable)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserRelateTable@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserRelateTable@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserRelateTable@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.UserRelateTable)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserRelateTable@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.UserRelateTable)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserRelateTable@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserRelateTable@System#Int32}#Save(BCP.Domain.Edmx.UserRelateTable)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTableRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTableRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTableRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTableRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTableRepository.RemoveCascadedUserRelateTable">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTableRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTableRepository.RemoveNonCascadedUserRelateTable">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTableRepository.SaveUserRelateTable">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTableRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTableRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIUserRelateTableRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#UserRelateTable@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIUserRelateTypeRepository">
            <summary>BCP.Domain.IUserRelateTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTypeRepository.#ctor">
            <summary>初始化 type StubIUserRelateTypeRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTypeRepository.AddUserRelateType">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTypeRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIUserRelateTypeRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#UserRelateType@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#UserRelateType@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserRelateType@System#Int32}#Add(BCP.Domain.Edmx.UserRelateType)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserRelateType@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserRelateType@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserRelateType@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.UserRelateType)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserRelateType@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.UserRelateType)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserRelateType@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRelateTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#UserRelateType@System#Int32}#Save(BCP.Domain.Edmx.UserRelateType)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTypeRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTypeRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTypeRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTypeRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTypeRepository.RemoveCascadedUserRelateType">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTypeRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTypeRepository.RemoveNonCascadedUserRelateType">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTypeRepository.SaveUserRelateType">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTypeRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRelateTypeRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIUserRelateTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#UserRelateType@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIUserRepository">
            <summary>BCP.Domain.IUserRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRepository.#ctor">
            <summary>初始化 type StubIUserRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRepository.AddUser">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIUserRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#User@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#User@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#User@System#Int32}#Add(BCP.Domain.Edmx.User)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#User@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#User@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#User@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.User)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#User@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.User)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#User@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUserRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#User@System#Int32}#Save(BCP.Domain.Edmx.User)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRepository.RemoveCascadedUser">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRepository.RemoveNonCascadedUser">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRepository.SaveUser">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUserRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIUserRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#User@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIUser_ContacTableRepository">
            <summary>BCP.Domain.IUser_ContacTableRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUser_ContacTableRepository.#ctor">
            <summary>初始化 type StubIUser_ContacTableRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUser_ContacTableRepository.AddUser_ContacTable">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUser_ContacTableRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIUser_ContacTableRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUser_ContacTableRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#User_ContacTable@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUser_ContacTableRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#User_ContacTable@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUser_ContacTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#User_ContacTable@System#Int32}#Add(BCP.Domain.Edmx.User_ContacTable)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUser_ContacTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#User_ContacTable@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUser_ContacTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#User_ContacTable@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUser_ContacTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#User_ContacTable@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.User_ContacTable)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUser_ContacTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#User_ContacTable@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.User_ContacTable)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUser_ContacTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#User_ContacTable@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIUser_ContacTableRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#User_ContacTable@System#Int32}#Save(BCP.Domain.Edmx.User_ContacTable)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUser_ContacTableRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUser_ContacTableRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUser_ContacTableRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUser_ContacTableRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUser_ContacTableRepository.RemoveCascadedUser_ContacTable">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUser_ContacTableRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUser_ContacTableRepository.RemoveNonCascadedUser_ContacTable">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUser_ContacTableRepository.SaveUser_ContacTable">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUser_ContacTableRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIUser_ContacTableRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIUser_ContacTableRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#User_ContacTable@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIWorkMessageRepository">
            <summary>BCP.Domain.IWorkMessageRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkMessageRepository.#ctor">
            <summary>初始化 type StubIWorkMessageRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkMessageRepository.AddWorkMessage">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkMessageRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIWorkMessageRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkMessageRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkMessage@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkMessageRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkMessage@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkMessageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkMessage@System#Int32}#Add(BCP.Domain.Edmx.WorkMessage)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkMessageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkMessage@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkMessageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkMessage@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkMessageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkMessage@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.WorkMessage)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkMessageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkMessage@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.WorkMessage)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkMessageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkMessage@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkMessageRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkMessage@System#Int32}#Save(BCP.Domain.Edmx.WorkMessage)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkMessageRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkMessageRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkMessageRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkMessageRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkMessageRepository.RemoveCascadedWorkMessage">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkMessageRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkMessageRepository.RemoveNonCascadedWorkMessage">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkMessageRepository.SaveWorkMessage">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkMessageRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkMessageRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIWorkMessageRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkMessage@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIWorkModulRepository">
            <summary>BCP.Domain.IWorkModulRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkModulRepository.#ctor">
            <summary>初始化 type StubIWorkModulRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkModulRepository.AddWorkModul">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkModulRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIWorkModulRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkModulRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkModul@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkModulRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkModul@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkModulRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkModul@System#Int32}#Add(BCP.Domain.Edmx.WorkModul)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkModulRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkModul@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkModulRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkModul@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkModulRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkModul@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.WorkModul)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkModulRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkModul@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.WorkModul)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkModulRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkModul@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkModulRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkModul@System#Int32}#Save(BCP.Domain.Edmx.WorkModul)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkModulRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkModulRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkModulRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkModulRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkModulRepository.RemoveCascadedWorkModul">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkModulRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkModulRepository.RemoveNonCascadedWorkModul">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkModulRepository.SaveWorkModul">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkModulRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkModulRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIWorkModulRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkModul@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository">
            <summary>BCP.Domain.IWorkSpaceBaseTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.#ctor">
            <summary>初始化 type StubIWorkSpaceBaseTypeRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.AddWorkSpaceBaseType">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIWorkSpaceBaseTypeRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkSpaceBaseType@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkSpaceBaseType@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceBaseType@System#Int32}#Add(BCP.Domain.Edmx.WorkSpaceBaseType)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceBaseType@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceBaseType@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceBaseType@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.WorkSpaceBaseType)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceBaseType@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.WorkSpaceBaseType)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceBaseType@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceBaseType@System#Int32}#Save(BCP.Domain.Edmx.WorkSpaceBaseType)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.RemoveCascadedWorkSpaceBaseType">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.RemoveNonCascadedWorkSpaceBaseType">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.SaveWorkSpaceBaseType">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIWorkSpaceBaseTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkSpaceBaseType@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIWorkSpaceRepository">
            <summary>BCP.Domain.IWorkSpaceRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRepository.#ctor">
            <summary>初始化 type StubIWorkSpaceRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRepository.AddWorkSpace">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIWorkSpaceRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkSpace@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkSpace@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpace@System#Int32}#Add(BCP.Domain.Edmx.WorkSpace)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpace@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpace@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpace@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.WorkSpace)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpace@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.WorkSpace)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpace@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpace@System#Int32}#Save(BCP.Domain.Edmx.WorkSpace)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRepository.RemoveCascadedWorkSpace">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRepository.RemoveNonCascadedWorkSpace">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRepository.SaveWorkSpace">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIWorkSpaceRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkSpace@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository">
            <summary>BCP.Domain.IWorkSpaceRoleRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.#ctor">
            <summary>初始化 type StubIWorkSpaceRoleRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.AddWorkSpaceRole">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIWorkSpaceRoleRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkSpaceRole@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkSpaceRole@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceRole@System#Int32}#Add(BCP.Domain.Edmx.WorkSpaceRole)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceRole@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceRole@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceRole@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.WorkSpaceRole)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceRole@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.WorkSpaceRole)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceRole@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceRole@System#Int32}#Save(BCP.Domain.Edmx.WorkSpaceRole)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.RemoveCascadedWorkSpaceRole">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.RemoveNonCascadedWorkSpaceRole">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.SaveWorkSpaceRole">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIWorkSpaceRoleRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkSpaceRole@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository">
            <summary>BCP.Domain.IWorkSpaceTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.#ctor">
            <summary>初始化 type StubIWorkSpaceTypeRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.AddWorkSpaceType">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIWorkSpaceTypeRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkSpaceType@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkSpaceType@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceType@System#Int32}#Add(BCP.Domain.Edmx.WorkSpaceType)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceType@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceType@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceType@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.WorkSpaceType)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceType@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.WorkSpaceType)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceType@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#WorkSpaceType@System#Int32}#Save(BCP.Domain.Edmx.WorkSpaceType)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.RemoveCascadedWorkSpaceType">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.RemoveNonCascadedWorkSpaceType">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.SaveWorkSpaceType">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIWorkSpaceTypeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#WorkSpaceType@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIZipCodeRepository">
            <summary>BCP.Domain.IZipCodeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIZipCodeRepository.#ctor">
            <summary>初始化 type StubIZipCodeRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIZipCodeRepository.AddZipCode">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIZipCodeRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIZipCodeRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIZipCodeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ZipCode@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIZipCodeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ZipCode@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIZipCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ZipCode@System#Int32}#Add(BCP.Domain.Edmx.ZipCode)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIZipCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ZipCode@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIZipCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ZipCode@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIZipCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ZipCode@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.ZipCode)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIZipCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ZipCode@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.ZipCode)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIZipCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ZipCode@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIZipCodeRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#ZipCode@System#Int32}#Save(BCP.Domain.Edmx.ZipCode)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIZipCodeRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIZipCodeRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIZipCodeRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIZipCodeRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIZipCodeRepository.RemoveCascadedZipCode">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIZipCodeRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIZipCodeRepository.RemoveNonCascadedZipCode">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIZipCodeRepository.SaveZipCode">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIZipCodeRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIZipCodeRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIZipCodeRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#ZipCode@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIndustryCodeRepository">
            <summary>BCP.Domain.IndustryCodeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIndustryCodeRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIndustryCodeRepository.InitializeStub">
            <summary>初始化 type StubIndustryCodeRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIndustryCodeRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIndustryCodeRepository.RemoveCascaded(BCP.Domain.Edmx.IndustryCode)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIndustryCodeRepository.RemoveCascadedIndustryCode">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIndustryCodeRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIndustryCodeRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIndustryCodeRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIndustryCodeRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIndustrySolutionRepository">
            <summary>BCP.Domain.IndustrySolutionRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIndustrySolutionRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIndustrySolutionRepository.InitializeStub">
            <summary>初始化 type StubIndustrySolutionRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIndustrySolutionRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIndustrySolutionRepository.RemoveCascaded(BCP.Domain.Edmx.IndustrySolution)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIndustrySolutionRepository.RemoveCascadedIndustrySolution">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIndustrySolutionRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIndustrySolutionRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIndustrySolutionRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIndustrySolutionRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIphysicalAssetRepository">
            <summary>BCP.Domain.IphysicalAssetRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIphysicalAssetRepository.#ctor">
            <summary>初始化 type StubIphysicalAssetRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIphysicalAssetRepository.AddphysicalAsset">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIphysicalAssetRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIphysicalAssetRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIphysicalAssetRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#physicalAsset@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIphysicalAssetRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#physicalAsset@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIphysicalAssetRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#physicalAsset@System#Int32}#Add(BCP.Domain.Edmx.physicalAsset)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIphysicalAssetRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#physicalAsset@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIphysicalAssetRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#physicalAsset@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIphysicalAssetRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#physicalAsset@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.physicalAsset)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIphysicalAssetRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#physicalAsset@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.physicalAsset)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIphysicalAssetRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#physicalAsset@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIphysicalAssetRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#physicalAsset@System#Int32}#Save(BCP.Domain.Edmx.physicalAsset)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIphysicalAssetRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIphysicalAssetRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIphysicalAssetRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIphysicalAssetRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIphysicalAssetRepository.RemoveCascadedphysicalAsset">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIphysicalAssetRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIphysicalAssetRepository.RemoveNonCascadedphysicalAsset">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIphysicalAssetRepository.SavephysicalAsset">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIphysicalAssetRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIphysicalAssetRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIphysicalAssetRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#physicalAsset@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubIworkTaskRepository">
            <summary>BCP.Domain.IworkTaskRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIworkTaskRepository.#ctor">
            <summary>初始化 type StubIworkTaskRepository 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIworkTaskRepository.AddworkTask">
            <summary>设置 IRepository`2.Add(!0 entity) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIworkTaskRepository.AttachBackingFieldToUnitOfWork">
            <summary>附加委托以将 StubIworkTaskRepository.UnitOfWork 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIworkTaskRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#workTask@System#Int32}#GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIworkTaskRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#workTask@System#Int32}#GetByKey(System.Int32)">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIworkTaskRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#workTask@System#Int32}#Add(BCP.Domain.Edmx.workTask)">
            <summary>设置 IRepository`2.Add(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIworkTaskRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#workTask@System#Int32}#GetAllWithNavigationalProperty(System.String[])">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIworkTaskRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#workTask@System#Int32}#RemoveCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIworkTaskRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#workTask@System#Int32}#RemoveCascaded(BCP.Domain.Edmx.workTask)">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIworkTaskRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#workTask@System#Int32}#RemoveNonCascaded(BCP.Domain.Edmx.workTask)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIworkTaskRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#workTask@System#Int32}#RemoveNonCascaded(System.Int32)">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubIworkTaskRepository.bcpc::BCP#Common#IRepository{BCP#Domain#Edmx#workTask@System#Int32}#Save(BCP.Domain.Edmx.workTask)">
            <summary>设置 IRepository`2.Save(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIworkTaskRepository.GetAll">
            <summary>设置 IReadOnlyRepository`2.GetAll() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIworkTaskRepository.GetAllWithNavigationalPropertyStringArray">
            <summary>设置 IRepository`2.GetAllWithNavigationalProperty(String[] includes) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIworkTaskRepository.GetByKeyInt32">
            <summary>设置 IReadOnlyRepository`2.GetByKey(!1 key) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIworkTaskRepository.RemoveCascadedInt32">
            <summary>设置 IRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIworkTaskRepository.RemoveCascadedworkTask">
            <summary>设置 IRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIworkTaskRepository.RemoveNonCascadedInt32">
            <summary>设置 IRepository`2.RemoveNonCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIworkTaskRepository.RemoveNonCascadedworkTask">
            <summary>设置 IRepository`2.RemoveNonCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIworkTaskRepository.SaveworkTask">
            <summary>设置 IRepository`2.Save(!0 entity) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIworkTaskRepository.UnitOfWorkGet">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubIworkTaskRepository.UnitOfWorkSetIUnitOfWork">
            <summary>设置 IReadOnlyRepository`2.set_UnitOfWork(IUnitOfWork value) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubIworkTaskRepository.bcpc::BCP#Common#IReadOnlyRepository{BCP#Domain#Edmx#workTask@System#Int32}#UnitOfWork">
            <summary>设置 IReadOnlyRepository`2.get_UnitOfWork() 的 stub</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubJobChangeRepository">
            <summary>BCP.Domain.JobChangeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubJobChangeRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubJobChangeRepository.InitializeStub">
            <summary>初始化 type StubJobChangeRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubJobChangeRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubJobChangeRepository.RemoveCascaded(BCP.Domain.Edmx.JobChange)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubJobChangeRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubJobChangeRepository.RemoveCascadedJobChange">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubJobChangeRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubJobChangeRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubJobChangeRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubLoginLogRepository">
            <summary>BCP.Domain.LoginLogRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubLoginLogRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubLoginLogRepository.InitializeStub">
            <summary>初始化 type StubLoginLogRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubLoginLogRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubLoginLogRepository.RemoveCascaded(BCP.Domain.Edmx.LoginLog)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubLoginLogRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubLoginLogRepository.RemoveCascadedLoginLog">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubLoginLogRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubLoginLogRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubLoginLogRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubModulPropertyRepository">
            <summary>BCP.Domain.ModulPropertyRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubModulPropertyRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubModulPropertyRepository.InitializeStub">
            <summary>初始化 type StubModulPropertyRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubModulPropertyRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubModulPropertyRepository.RemoveCascaded(BCP.Domain.Edmx.ModulProperty)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubModulPropertyRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubModulPropertyRepository.RemoveCascadedModulProperty">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubModulPropertyRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubModulPropertyRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubModulPropertyRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubOperationDetailRepository">
            <summary>BCP.Domain.OperationDetailRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOperationDetailRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOperationDetailRepository.InitializeStub">
            <summary>初始化 type StubOperationDetailRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOperationDetailRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOperationDetailRepository.RemoveCascaded(BCP.Domain.Edmx.OperationDetail)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOperationDetailRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOperationDetailRepository.RemoveCascadedOperationDetail">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOperationDetailRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOperationDetailRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOperationDetailRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubOperationEventRepository">
            <summary>BCP.Domain.OperationEventRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOperationEventRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOperationEventRepository.InitializeStub">
            <summary>初始化 type StubOperationEventRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOperationEventRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOperationEventRepository.RemoveCascaded(BCP.Domain.Edmx.OperationEvent)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOperationEventRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOperationEventRepository.RemoveCascadedOperationEvent">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOperationEventRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOperationEventRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOperationEventRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubOrgaRegisterDocmentRepository">
            <summary>BCP.Domain.OrgaRegisterDocmentRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrgaRegisterDocmentRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrgaRegisterDocmentRepository.InitializeStub">
            <summary>初始化 type StubOrgaRegisterDocmentRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrgaRegisterDocmentRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrgaRegisterDocmentRepository.RemoveCascaded(BCP.Domain.Edmx.OrgaRegisterDocment)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrgaRegisterDocmentRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrgaRegisterDocmentRepository.RemoveCascadedOrgaRegisterDocment">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrgaRegisterDocmentRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrgaRegisterDocmentRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrgaRegisterDocmentRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubOrganicInvestorRepository">
            <summary>BCP.Domain.OrganicInvestorRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganicInvestorRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganicInvestorRepository.InitializeStub">
            <summary>初始化 type StubOrganicInvestorRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganicInvestorRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganicInvestorRepository.RemoveCascaded(BCP.Domain.Edmx.OrganicInvestor)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganicInvestorRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganicInvestorRepository.RemoveCascadedOrganicInvestor">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganicInvestorRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganicInvestorRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganicInvestorRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubOrganizBasicRepository">
            <summary>BCP.Domain.OrganizBasicRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizBasicRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizBasicRepository.InitializeStub">
            <summary>初始化 type StubOrganizBasicRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizBasicRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizBasicRepository.RemoveCascaded(BCP.Domain.Edmx.OrganizBasic)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganizBasicRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganizBasicRepository.RemoveCascadedOrganizBasic">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizBasicRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizBasicRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizBasicRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubOrganizationAssetTypeRepository">
            <summary>BCP.Domain.OrganizationAssetTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationAssetTypeRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationAssetTypeRepository.InitializeStub">
            <summary>初始化 type StubOrganizationAssetTypeRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationAssetTypeRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationAssetTypeRepository.RemoveCascaded(BCP.Domain.Edmx.OrganizationAssetType)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganizationAssetTypeRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganizationAssetTypeRepository.RemoveCascadedOrganizationAssetType">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationAssetTypeRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationAssetTypeRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationAssetTypeRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubOrganizationCustomTypeRepository">
            <summary>BCP.Domain.OrganizationCustomTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationCustomTypeRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationCustomTypeRepository.InitializeStub">
            <summary>初始化 type StubOrganizationCustomTypeRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationCustomTypeRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationCustomTypeRepository.RemoveCascaded(BCP.Domain.Edmx.OrganizationCustomType)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganizationCustomTypeRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganizationCustomTypeRepository.RemoveCascadedOrganizationCustomType">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationCustomTypeRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationCustomTypeRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationCustomTypeRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubOrganizationEventRepository">
            <summary>BCP.Domain.OrganizationEventRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationEventRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationEventRepository.InitializeStub">
            <summary>初始化 type StubOrganizationEventRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationEventRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationEventRepository.RemoveCascaded(BCP.Domain.Edmx.OrganizationEvent)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganizationEventRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganizationEventRepository.RemoveCascadedOrganizationEvent">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationEventRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationEventRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationEventRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubOrganizationOtherNameRepository">
            <summary>BCP.Domain.OrganizationOtherNameRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationOtherNameRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationOtherNameRepository.InitializeStub">
            <summary>初始化 type StubOrganizationOtherNameRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationOtherNameRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationOtherNameRepository.RemoveCascaded(BCP.Domain.Edmx.OrganizationOtherName)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganizationOtherNameRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganizationOtherNameRepository.RemoveCascadedOrganizationOtherName">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationOtherNameRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationOtherNameRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationOtherNameRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubOrganizationRepository">
            <summary>BCP.Domain.OrganizationRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationRepository.InitializeStub">
            <summary>初始化 type StubOrganizationRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationRepository.RemoveCascaded(BCP.Domain.Edmx.Organization)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganizationRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganizationRepository.RemoveCascadedOrganization">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubOrganizationTransitionRepository">
            <summary>BCP.Domain.OrganizationTransitionRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationTransitionRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationTransitionRepository.InitializeStub">
            <summary>初始化 type StubOrganizationTransitionRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationTransitionRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganizationTransitionRepository.RemoveCascaded(BCP.Domain.Edmx.OrganizationTransition)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganizationTransitionRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganizationTransitionRepository.RemoveCascadedOrganizationTransition">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationTransitionRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationTransitionRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganizationTransitionRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubOrganization_ContacTableRepository">
            <summary>BCP.Domain.Organization_ContacTableRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganization_ContacTableRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganization_ContacTableRepository.InitializeStub">
            <summary>初始化 type StubOrganization_ContacTableRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganization_ContacTableRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganization_ContacTableRepository.RemoveCascaded(BCP.Domain.Edmx.Organization_ContacTable)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganization_ContacTableRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganization_ContacTableRepository.RemoveCascadedOrganization_ContacTable">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganization_ContacTableRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganization_ContacTableRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganization_ContacTableRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubOrganization_TypeRepository">
            <summary>BCP.Domain.Organization_TypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganization_TypeRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganization_TypeRepository.InitializeStub">
            <summary>初始化 type StubOrganization_TypeRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganization_TypeRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubOrganization_TypeRepository.RemoveCascaded(BCP.Domain.Edmx.Organization_Type)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganization_TypeRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubOrganization_TypeRepository.RemoveCascadedOrganization_Type">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganization_TypeRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganization_TypeRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubOrganization_TypeRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubPositionRepository">
            <summary>BCP.Domain.PositionRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubPositionRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubPositionRepository.InitializeStub">
            <summary>初始化 type StubPositionRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubPositionRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubPositionRepository.RemoveCascaded(BCP.Domain.Edmx.Position)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubPositionRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubPositionRepository.RemoveCascadedPosition">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubPositionRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubPositionRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubPositionRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubPostRepository">
            <summary>BCP.Domain.PostRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubPostRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubPostRepository.InitializeStub">
            <summary>初始化 type StubPostRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubPostRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubPostRepository.RemoveCascaded(BCP.Domain.Edmx.Post)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubPostRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubPostRepository.RemoveCascadedPost">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubPostRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubPostRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubPostRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubPostRequireRepository">
            <summary>BCP.Domain.PostRequireRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubPostRequireRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubPostRequireRepository.InitializeStub">
            <summary>初始化 type StubPostRequireRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubPostRequireRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubPostRequireRepository.RemoveCascaded(BCP.Domain.Edmx.PostRequire)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubPostRequireRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubPostRequireRepository.RemoveCascadedPostRequire">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubPostRequireRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubPostRequireRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubPostRequireRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubProductCompositionRepository">
            <summary>BCP.Domain.ProductCompositionRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductCompositionRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductCompositionRepository.InitializeStub">
            <summary>初始化 type StubProductCompositionRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductCompositionRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductCompositionRepository.RemoveCascaded(BCP.Domain.Edmx.ProductComposition)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubProductCompositionRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubProductCompositionRepository.RemoveCascadedProductComposition">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductCompositionRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductCompositionRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductCompositionRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubProductCustomCategoryRepository">
            <summary>BCP.Domain.ProductCustomCategoryRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductCustomCategoryRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductCustomCategoryRepository.InitializeStub">
            <summary>初始化 type StubProductCustomCategoryRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductCustomCategoryRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductCustomCategoryRepository.RemoveCascaded(BCP.Domain.Edmx.ProductCustomCategory)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubProductCustomCategoryRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubProductCustomCategoryRepository.RemoveCascadedProductCustomCategory">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductCustomCategoryRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductCustomCategoryRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductCustomCategoryRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubProductCustomTypeRepository">
            <summary>BCP.Domain.ProductCustomTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductCustomTypeRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductCustomTypeRepository.InitializeStub">
            <summary>初始化 type StubProductCustomTypeRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductCustomTypeRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductCustomTypeRepository.RemoveCascaded(BCP.Domain.Edmx.ProductCustomType)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubProductCustomTypeRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubProductCustomTypeRepository.RemoveCascadedProductCustomType">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductCustomTypeRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductCustomTypeRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductCustomTypeRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubProductEventRepository">
            <summary>BCP.Domain.ProductEventRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductEventRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductEventRepository.InitializeStub">
            <summary>初始化 type StubProductEventRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductEventRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductEventRepository.RemoveCascaded(BCP.Domain.Edmx.ProductEvent)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubProductEventRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubProductEventRepository.RemoveCascadedProductEvent">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductEventRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductEventRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductEventRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubProductRepository">
            <summary>BCP.Domain.ProductRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductRepository.InitializeStub">
            <summary>初始化 type StubProductRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductRepository.RemoveCascaded(BCP.Domain.Edmx.Product)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubProductRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubProductRepository.RemoveCascadedProduct">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubProductStandardRepository">
            <summary>BCP.Domain.ProductStandardRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductStandardRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductStandardRepository.InitializeStub">
            <summary>初始化 type StubProductStandardRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductStandardRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubProductStandardRepository.RemoveCascaded(BCP.Domain.Edmx.ProductStandard)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubProductStandardRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubProductStandardRepository.RemoveCascadedProductStandard">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductStandardRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductStandardRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubProductStandardRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubRegisterDocumentTypeRepository">
            <summary>BCP.Domain.RegisterDocumentTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubRegisterDocumentTypeRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubRegisterDocumentTypeRepository.InitializeStub">
            <summary>初始化 type StubRegisterDocumentTypeRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubRegisterDocumentTypeRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubRegisterDocumentTypeRepository.RemoveCascaded(BCP.Domain.Edmx.RegisterDocumentType)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubRegisterDocumentTypeRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubRegisterDocumentTypeRepository.RemoveCascadedRegisterDocumentType">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubRegisterDocumentTypeRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubRegisterDocumentTypeRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubRegisterDocumentTypeRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubSecurityinfoRepository">
            <summary>BCP.Domain.SecurityinfoRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubSecurityinfoRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubSecurityinfoRepository.InitializeStub">
            <summary>初始化 type StubSecurityinfoRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubSecurityinfoRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubSecurityinfoRepository.RemoveCascaded(BCP.Domain.Edmx.Securityinfo)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubSecurityinfoRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubSecurityinfoRepository.RemoveCascadedSecurityinfo">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubSecurityinfoRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubSecurityinfoRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubSecurityinfoRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubSerivce`2">
            <summary>BCP.Domain.Serivce`2 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubSerivce`2.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubSerivce`2.InitializeStub">
            <summary>初始化 type StubSerivce 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubSerivce`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubSerivce`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubSerivce`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubSpecializedRepository">
            <summary>BCP.Domain.SpecializedRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubSpecializedRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubSpecializedRepository.InitializeStub">
            <summary>初始化 type StubSpecializedRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubSpecializedRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubSpecializedRepository.RemoveCascaded(BCP.Domain.Edmx.Specialized)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubSpecializedRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubSpecializedRepository.RemoveCascadedSpecialized">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubSpecializedRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubSpecializedRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubSpecializedRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubSubordinateRepository">
            <summary>BCP.Domain.SubordinateRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubSubordinateRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubSubordinateRepository.InitializeStub">
            <summary>初始化 type StubSubordinateRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubSubordinateRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubSubordinateRepository.RemoveCascaded(BCP.Domain.Edmx.Subordinate)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubSubordinateRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubSubordinateRepository.RemoveCascadedSubordinate">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubSubordinateRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubSubordinateRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubSubordinateRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubUserMessageRepository">
            <summary>BCP.Domain.UserMessageRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserMessageRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserMessageRepository.InitializeStub">
            <summary>初始化 type StubUserMessageRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserMessageRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserMessageRepository.RemoveCascaded(BCP.Domain.Edmx.UserMessage)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubUserMessageRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubUserMessageRepository.RemoveCascadedUserMessage">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUserMessageRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUserMessageRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUserMessageRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubUserRelateTableRepository">
            <summary>BCP.Domain.UserRelateTableRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserRelateTableRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserRelateTableRepository.InitializeStub">
            <summary>初始化 type StubUserRelateTableRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserRelateTableRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserRelateTableRepository.RemoveCascaded(BCP.Domain.Edmx.UserRelateTable)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubUserRelateTableRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubUserRelateTableRepository.RemoveCascadedUserRelateTable">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUserRelateTableRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUserRelateTableRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUserRelateTableRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubUserRelateTypeRepository">
            <summary>BCP.Domain.UserRelateTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserRelateTypeRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserRelateTypeRepository.InitializeStub">
            <summary>初始化 type StubUserRelateTypeRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserRelateTypeRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserRelateTypeRepository.RemoveCascaded(BCP.Domain.Edmx.UserRelateType)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubUserRelateTypeRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubUserRelateTypeRepository.RemoveCascadedUserRelateType">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUserRelateTypeRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUserRelateTypeRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUserRelateTypeRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubUserRepository">
            <summary>BCP.Domain.UserRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserRepository.InitializeStub">
            <summary>初始化 type StubUserRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserRepository.RemoveCascaded(BCP.Domain.Edmx.User)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubUserRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubUserRepository.RemoveCascadedUser">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUserRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUserRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUserRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubUserService">
            <summary>BCP.Domain.UserService 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserService.#ctor(BCP.Common.IUnitOfWork,BCP.Domain.IUserMessageRepository,BCP.Domain.ICustomGroupRepository,BCP.Domain.IGroupRepository,BCP.Domain.IGroupMemberRepository,BCP.Domain.IGroupMessagerRepository,BCP.Domain.ICustomGroupUserRepository,BCP.Domain.IUserRepository)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUserService.InitializeStub">
            <summary>初始化 type StubUserService 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUserService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUserService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUserService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubUser_ContacTableRepository">
            <summary>BCP.Domain.User_ContacTableRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUser_ContacTableRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUser_ContacTableRepository.InitializeStub">
            <summary>初始化 type StubUser_ContacTableRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUser_ContacTableRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubUser_ContacTableRepository.RemoveCascaded(BCP.Domain.Edmx.User_ContacTable)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubUser_ContacTableRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubUser_ContacTableRepository.RemoveCascadedUser_ContacTable">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUser_ContacTableRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUser_ContacTableRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubUser_ContacTableRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubWorkMessageRepository">
            <summary>BCP.Domain.WorkMessageRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkMessageRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkMessageRepository.InitializeStub">
            <summary>初始化 type StubWorkMessageRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkMessageRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkMessageRepository.RemoveCascaded(BCP.Domain.Edmx.WorkMessage)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubWorkMessageRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubWorkMessageRepository.RemoveCascadedWorkMessage">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkMessageRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkMessageRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkMessageRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubWorkModulRepository">
            <summary>BCP.Domain.WorkModulRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkModulRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkModulRepository.InitializeStub">
            <summary>初始化 type StubWorkModulRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkModulRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkModulRepository.RemoveCascaded(BCP.Domain.Edmx.WorkModul)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubWorkModulRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubWorkModulRepository.RemoveCascadedWorkModul">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkModulRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkModulRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkModulRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubWorkSpaceBaseTypeRepository">
            <summary>BCP.Domain.WorkSpaceBaseTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkSpaceBaseTypeRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkSpaceBaseTypeRepository.InitializeStub">
            <summary>初始化 type StubWorkSpaceBaseTypeRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkSpaceBaseTypeRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkSpaceBaseTypeRepository.RemoveCascaded(BCP.Domain.Edmx.WorkSpaceBaseType)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubWorkSpaceBaseTypeRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubWorkSpaceBaseTypeRepository.RemoveCascadedWorkSpaceBaseType">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkSpaceBaseTypeRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkSpaceBaseTypeRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkSpaceBaseTypeRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubWorkSpaceRepository">
            <summary>BCP.Domain.WorkSpaceRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkSpaceRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkSpaceRepository.InitializeStub">
            <summary>初始化 type StubWorkSpaceRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkSpaceRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkSpaceRepository.RemoveCascaded(BCP.Domain.Edmx.WorkSpace)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubWorkSpaceRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubWorkSpaceRepository.RemoveCascadedWorkSpace">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkSpaceRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkSpaceRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkSpaceRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubWorkSpaceRoleRepository">
            <summary>BCP.Domain.WorkSpaceRoleRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkSpaceRoleRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkSpaceRoleRepository.InitializeStub">
            <summary>初始化 type StubWorkSpaceRoleRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkSpaceRoleRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkSpaceRoleRepository.RemoveCascaded(BCP.Domain.Edmx.WorkSpaceRole)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubWorkSpaceRoleRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubWorkSpaceRoleRepository.RemoveCascadedWorkSpaceRole">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkSpaceRoleRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkSpaceRoleRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkSpaceRoleRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubWorkSpaceTypeRepository">
            <summary>BCP.Domain.WorkSpaceTypeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkSpaceTypeRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkSpaceTypeRepository.InitializeStub">
            <summary>初始化 type StubWorkSpaceTypeRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkSpaceTypeRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubWorkSpaceTypeRepository.RemoveCascaded(BCP.Domain.Edmx.WorkSpaceType)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubWorkSpaceTypeRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubWorkSpaceTypeRepository.RemoveCascadedWorkSpaceType">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkSpaceTypeRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkSpaceTypeRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubWorkSpaceTypeRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubZipCodeRepository">
            <summary>BCP.Domain.ZipCodeRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubZipCodeRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubZipCodeRepository.InitializeStub">
            <summary>初始化 type StubZipCodeRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubZipCodeRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubZipCodeRepository.RemoveCascaded(BCP.Domain.Edmx.ZipCode)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubZipCodeRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubZipCodeRepository.RemoveCascadedZipCode">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubZipCodeRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubZipCodeRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubZipCodeRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubphysicalAssetRepository">
            <summary>BCP.Domain.physicalAssetRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubphysicalAssetRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubphysicalAssetRepository.InitializeStub">
            <summary>初始化 type StubphysicalAssetRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubphysicalAssetRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubphysicalAssetRepository.RemoveCascaded(BCP.Domain.Edmx.physicalAsset)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubphysicalAssetRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubphysicalAssetRepository.RemoveCascadedphysicalAsset">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubphysicalAssetRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubphysicalAssetRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubphysicalAssetRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Fakes.StubworkTaskRepository">
            <summary>BCP.Domain.workTaskRepository 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubworkTaskRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubworkTaskRepository.InitializeStub">
            <summary>初始化 type StubworkTaskRepository 的新实例</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubworkTaskRepository.RemoveCascaded(System.Int32)">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Fakes.StubworkTaskRepository.RemoveCascaded(BCP.Domain.Edmx.workTask)">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubworkTaskRepository.RemoveCascadedInt32">
            <summary>设置 EFRepository`2.RemoveCascaded(!1 t) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Fakes.StubworkTaskRepository.RemoveCascadedworkTask">
            <summary>设置 EFRepository`2.RemoveCascaded(!0 entity) 的 stub</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubworkTaskRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubworkTaskRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Fakes.StubworkTaskRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Mapping.Fakes.ShimAutoMapperBootStrapper">
            <summary>BCP.Domain.Mapping.AutoMapperBootStrapper 的填充码类型</summary>
        </member>
        <member name="M:BCP.Domain.Mapping.Fakes.ShimAutoMapperBootStrapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BCP.Domain.Mapping.Fakes.ShimAutoMapperBootStrapper.#ctor(BCP.Domain.Mapping.AutoMapperBootStrapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BCP.Domain.Mapping.Fakes.ShimAutoMapperBootStrapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BCP.Domain.Mapping.Fakes.ShimAutoMapperBootStrapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BCP.Domain.Mapping.Fakes.ShimAutoMapperBootStrapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BCP.Domain.Mapping.Fakes.ShimAutoMapperBootStrapper.Constructor">
            <summary>设置 AutoMapperBootStrapper.AutoMapperBootStrapper() 的 填充码</summary>
        </member>
        <member name="P:BCP.Domain.Mapping.Fakes.ShimAutoMapperBootStrapper.Start">
            <summary>设置 AutoMapperBootStrapper.Start() 的 填充码</summary>
        </member>
        <member name="T:BCP.Domain.Mapping.Fakes.ShimAutoMapperBootStrapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BCP.Domain.Mapping.Fakes.StubAutoMapperBootStrapper">
            <summary>BCP.Domain.Mapping.AutoMapperBootStrapper 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Mapping.Fakes.StubAutoMapperBootStrapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BCP.Domain.Mapping.Fakes.StubAutoMapperBootStrapper.InitializeStub">
            <summary>初始化 type StubAutoMapperBootStrapper 的新实例</summary>
        </member>
        <member name="P:BCP.Domain.Mapping.Fakes.StubAutoMapperBootStrapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BCP.Domain.Mapping.Fakes.StubAutoMapperBootStrapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BCP.Domain.Mapping.Fakes.StubAutoMapperBootStrapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BCP.Domain.Service.Fakes.StubIUserService">
            <summary>BCP.Domain.Service.IUserService 的存根类型</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.#ctor">
            <summary>初始化 type StubIUserService 的新实例</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.AddCustomGroupCustomGroupDTO">
            <summary>设置 IUserService.AddCustomGroup(CustomGroupDTO customGroupDTO) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.AddGroupMessageGroupMessagerDTOInt32">
            <summary>设置 IUserService.AddGroupMessage(GroupMessagerDTO gmt, Int32 userId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.AddPTPMessageUserMessageDTO">
            <summary>设置 IUserService.AddPTPMessage(UserMessageDTO message) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.AddUserToCustomGroupInt32Int32">
            <summary>设置 IUserService.AddUserToCustomGroup(Int32 userId, Int32 groupId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.AddUserToGroupInt32Int32Int32Int32">
            <summary>设置 IUserService.AddUserToGroup(Int32 memberUserId, Int32 groupId, Int32 userId, Int32 referenceUserId) 的 stub</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#AddCustomGroup(BCP.ViewModel.CustomGroupDTO)">
            <summary>设置 IUserService.AddCustomGroup(CustomGroupDTO customGroupDTO) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#AddGroupMessage(BCP.ViewModel.GroupMessagerDTO,System.Int32)">
            <summary>设置 IUserService.AddGroupMessage(GroupMessagerDTO gmt, Int32 userId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#AddPTPMessage(BCP.ViewModel.UserMessageDTO)">
            <summary>设置 IUserService.AddPTPMessage(UserMessageDTO message) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#AddUserToCustomGroup(System.Int32,System.Int32)">
            <summary>设置 IUserService.AddUserToCustomGroup(Int32 userId, Int32 groupId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#AddUserToGroup(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>设置 IUserService.AddUserToGroup(Int32 memberUserId, Int32 groupId, Int32 userId, Int32 referenceUserId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#DeleteCustomGroup(System.Int32)">
            <summary>设置 IUserService.DeleteCustomGroup(Int32 groupId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#DeleteGroup(System.Int32,System.Int32)">
            <summary>设置 IUserService.DeleteGroup(Int32 groupId, Int32 userId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#DeleteUser(System.Int32)">
            <summary>设置 IUserService.DeleteUser(Int32 id) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#GetAllGroupByUserId(System.Int32,System.Boolean)">
            <summary>设置 IUserService.GetAllGroupByUserId(Int32 userId, Boolean IsCacasde) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#GetCustomGroup(System.Int32,System.Boolean)">
            <summary>设置 IUserService.GetCustomGroup(Int32 userId, Boolean IsCascade) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#GetCustomGroupById(System.Int32)">
            <summary>设置 IUserService.GetCustomGroupById(Int32 groupId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#GetGroupById(System.Int32)">
            <summary>设置 IUserService.GetGroupById(Int32 groupId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#GetGroupMemberById(System.Int32)">
            <summary>设置 IUserService.GetGroupMemberById(Int32 id) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#GetGroupMembersByGroupId(System.Int32)">
            <summary>设置 IUserService.GetGroupMembersByGroupId(Int32 groupId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#GetPTGMessage(System.Int32)">
            <summary>设置 IUserService.GetPTGMessage(Int32 userId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#GetPTPMessage(System.Int32,System.Int32)">
            <summary>设置 IUserService.GetPTPMessage(Int32 userId, Int32 anotherId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#GetUser(System.Int32)">
            <summary>设置 IUserService.GetUser(Int32 id) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#GetUser(System.String)">
            <summary>设置 IUserService.GetUser(String userName) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#GetUser">
            <summary>设置 IUserService.GetUser() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#GetUserByCustomGroupId(System.Int32)">
            <summary>设置 IUserService.GetUserByCustomGroupId(Int32 groupId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#InitDataBase">
            <summary>设置 IUserService.InitDataBase() 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#Login(System.String,System.String)">
            <summary>设置 IUserService.Login(String userName, String userPwd) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#Logout(System.Int32)">
            <summary>设置 IUserService.Logout(Int32 userId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#MarkPTGMessage(System.Int32)">
            <summary>设置 IUserService.MarkPTGMessage(Int32 userId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#MarkPTPMessage(System.Int32,System.Int32)">
            <summary>设置 IUserService.MarkPTPMessage(Int32 sendId, Int32 replyId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#RegisterGroup(BCP.ViewModel.GroupDTO)">
            <summary>设置 IUserService.RegisterGroup(GroupDTO groupDTO) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#RegisterUser(BCP.ViewModel.UserDTO)">
            <summary>设置 IUserService.RegisterUser(UserDTO user) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#RemoveUserFromCustomGroup(System.Int32,System.Int32)">
            <summary>设置 IUserService.RemoveUserFromCustomGroup(Int32 userId, Int32 groupId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#RemoveUserFromGroup(System.Int32,System.Int32,System.Int32)">
            <summary>设置 IUserService.RemoveUserFromGroup(Int32 groupMemberId, Int32 groupId, Int32 userId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#ShiftGroupMemberRole(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>设置 IUserService.ShiftGroupMemberRole(Int32 userId, Int32 groupId, String groupRole, Int32 groupMemberId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#UpdateCustomGroupName(System.Int32,System.String)">
            <summary>设置 IUserService.UpdateCustomGroupName(Int32 groupId, String groupName) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#UpdateGroup(System.Int32,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>设置 IUserService.UpdateGroup(Int32 groupId, String groupNumber, String groupName, String groupNotes, String groupType, Int32 userId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#UpdateGroupMemberName(System.Int32,System.String,System.Int32)">
            <summary>设置 IUserService.UpdateGroupMemberName(Int32 userId, String newName, Int32 groupMemberId) 的 存根</summary>
        </member>
        <member name="M:BCP.Domain.Service.Fakes.StubIUserService.bcpd::BCP#Domain#Service#IUserService#UpdateUserPwd(System.Int32,System.String)">
            <summary>设置 IUserService.UpdateUserPwd(Int32 id, String userPwd) 的 存根</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.DeleteCustomGroupInt32">
            <summary>设置 IUserService.DeleteCustomGroup(Int32 groupId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.DeleteGroupInt32Int32">
            <summary>设置 IUserService.DeleteGroup(Int32 groupId, Int32 userId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.DeleteUserInt32">
            <summary>设置 IUserService.DeleteUser(Int32 id) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.GetAllGroupByUserIdInt32Boolean">
            <summary>设置 IUserService.GetAllGroupByUserId(Int32 userId, Boolean IsCacasde) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.GetCustomGroupByIdInt32">
            <summary>设置 IUserService.GetCustomGroupById(Int32 groupId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.GetCustomGroupInt32Boolean">
            <summary>设置 IUserService.GetCustomGroup(Int32 userId, Boolean IsCascade) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.GetGroupByIdInt32">
            <summary>设置 IUserService.GetGroupById(Int32 groupId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.GetGroupMemberByIdInt32">
            <summary>设置 IUserService.GetGroupMemberById(Int32 id) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.GetGroupMembersByGroupIdInt32">
            <summary>设置 IUserService.GetGroupMembersByGroupId(Int32 groupId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.GetPTGMessageInt32">
            <summary>设置 IUserService.GetPTGMessage(Int32 userId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.GetPTPMessageInt32Int32">
            <summary>设置 IUserService.GetPTPMessage(Int32 userId, Int32 anotherId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.GetUser">
            <summary>设置 IUserService.GetUser() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.GetUserByCustomGroupIdInt32">
            <summary>设置 IUserService.GetUserByCustomGroupId(Int32 groupId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.GetUserInt32">
            <summary>设置 IUserService.GetUser(Int32 id) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.GetUserString">
            <summary>设置 IUserService.GetUser(String userName) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.InitDataBase">
            <summary>设置 IUserService.InitDataBase() 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.LoginStringString">
            <summary>设置 IUserService.Login(String userName, String userPwd) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.LogoutInt32">
            <summary>设置 IUserService.Logout(Int32 userId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.MarkPTGMessageInt32">
            <summary>设置 IUserService.MarkPTGMessage(Int32 userId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.MarkPTPMessageInt32Int32">
            <summary>设置 IUserService.MarkPTPMessage(Int32 sendId, Int32 replyId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.RegisterGroupGroupDTO">
            <summary>设置 IUserService.RegisterGroup(GroupDTO groupDTO) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.RegisterUserUserDTO">
            <summary>设置 IUserService.RegisterUser(UserDTO user) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.RemoveUserFromCustomGroupInt32Int32">
            <summary>设置 IUserService.RemoveUserFromCustomGroup(Int32 userId, Int32 groupId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.RemoveUserFromGroupInt32Int32Int32">
            <summary>设置 IUserService.RemoveUserFromGroup(Int32 groupMemberId, Int32 groupId, Int32 userId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.ShiftGroupMemberRoleInt32Int32StringInt32">
            <summary>设置 IUserService.ShiftGroupMemberRole(Int32 userId, Int32 groupId, String groupRole, Int32 groupMemberId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.UpdateCustomGroupNameInt32String">
            <summary>设置 IUserService.UpdateCustomGroupName(Int32 groupId, String groupName) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.UpdateGroupInt32StringStringStringStringInt32">
            <summary>设置 IUserService.UpdateGroup(Int32 groupId, String groupNumber, String groupName, String groupNotes, String groupType, Int32 userId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.UpdateGroupMemberNameInt32StringInt32">
            <summary>设置 IUserService.UpdateGroupMemberName(Int32 userId, String newName, Int32 groupMemberId) 的 stub</summary>
        </member>
        <member name="F:BCP.Domain.Service.Fakes.StubIUserService.UpdateUserPwdInt32String">
            <summary>设置 IUserService.UpdateUserPwd(Int32 id, String userPwd) 的 stub</summary>
        </member>
    </members>
</doc>
